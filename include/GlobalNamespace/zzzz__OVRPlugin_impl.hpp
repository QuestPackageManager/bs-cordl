#pragma once
#include "GlobalNamespace/zzzz__OVRPlugin_impl.hpp"
#include "System/Runtime/InteropServices/zzzz__GCHandle_impl.hpp"
#include "System/zzzz__Guid_impl.hpp"
#include "System/zzzz__IntPtr_impl.hpp"
#include "System/zzzz__MulticastDelegate_impl.hpp"
#include "System/zzzz__Nullable_1_impl.hpp"
#include "System/zzzz__Object_impl.hpp"
#include "UnityEngine/zzzz__Rect_impl.hpp"
#include "UnityEngine/zzzz__Vector4_impl.hpp"
#include "GlobalNamespace/zzzz__OVRPlugin_def.hpp"
#include "GlobalNamespace/zzzz__OVRPlugin_def.hpp"
#include "Unity/Collections/zzzz__Allocator_def.hpp"
#include "UnityEngine/zzzz__Vector4_def.hpp"
#include "UnityEngine/zzzz__Vector3_def.hpp"
#include "GlobalNamespace/zzzz__OVRNativeBuffer_def.hpp"
#include "System/zzzz__Nullable_1_def.hpp"
#include "System/zzzz__Version_def.hpp"
#include "Unity/Collections/zzzz__NativeArray_1_def.hpp"
#include "UnityEngine/zzzz__Matrix4x4_def.hpp"
#include "System/zzzz__Guid_def.hpp"
#include "UnityEngine/zzzz__Vector2_def.hpp"
#include "System/zzzz__IAsyncResult_def.hpp"
#include "System/zzzz__Object_def.hpp"
#include "System/zzzz__AsyncCallback_def.hpp"
#include "UnityEngine/zzzz__Texture2D_def.hpp"
#include "UnityEngine/zzzz__RenderTexture_def.hpp"
#include "System/zzzz__IDisposable_def.hpp"
#include "System/Runtime/InteropServices/zzzz__GCHandle_def.hpp"
#include "System/zzzz__IEquatable_1_def.hpp"
#include "UnityEngine/zzzz__Rect_def.hpp"
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__GUID._ctor
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__GUID::*)()>(&::GlobalNamespace::__OVRPlugin__GUID::_ctor)> {
  constexpr static std::size_t size = 0x8;
  constexpr static std::size_t addrs = 0x2755f50;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__GUID*>::get(), ".ctor",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
constexpr int32_t& GlobalNamespace::__OVRPlugin__GUID::__get_a() {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___a;
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__GUID::__get_a() const {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___a;
}
constexpr void GlobalNamespace::__OVRPlugin__GUID::__set_a(int32_t value) {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  this->___a = value;
}
constexpr int16_t& GlobalNamespace::__OVRPlugin__GUID::__get_b() {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___b;
}
constexpr int16_t const& GlobalNamespace::__OVRPlugin__GUID::__get_b() const {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___b;
}
constexpr void GlobalNamespace::__OVRPlugin__GUID::__set_b(int16_t value) {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  this->___b = value;
}
constexpr int16_t& GlobalNamespace::__OVRPlugin__GUID::__get_c() {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___c;
}
constexpr int16_t const& GlobalNamespace::__OVRPlugin__GUID::__get_c() const {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___c;
}
constexpr void GlobalNamespace::__OVRPlugin__GUID::__set_c(int16_t value) {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  this->___c = value;
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__GUID::__get_d0() {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___d0;
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__GUID::__get_d0() const {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___d0;
}
constexpr void GlobalNamespace::__OVRPlugin__GUID::__set_d0(uint8_t value) {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  this->___d0 = value;
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__GUID::__get_d1() {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___d1;
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__GUID::__get_d1() const {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___d1;
}
constexpr void GlobalNamespace::__OVRPlugin__GUID::__set_d1(uint8_t value) {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  this->___d1 = value;
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__GUID::__get_d2() {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___d2;
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__GUID::__get_d2() const {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___d2;
}
constexpr void GlobalNamespace::__OVRPlugin__GUID::__set_d2(uint8_t value) {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  this->___d2 = value;
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__GUID::__get_d3() {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___d3;
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__GUID::__get_d3() const {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___d3;
}
constexpr void GlobalNamespace::__OVRPlugin__GUID::__set_d3(uint8_t value) {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  this->___d3 = value;
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__GUID::__get_d4() {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___d4;
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__GUID::__get_d4() const {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___d4;
}
constexpr void GlobalNamespace::__OVRPlugin__GUID::__set_d4(uint8_t value) {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  this->___d4 = value;
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__GUID::__get_d5() {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___d5;
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__GUID::__get_d5() const {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___d5;
}
constexpr void GlobalNamespace::__OVRPlugin__GUID::__set_d5(uint8_t value) {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  this->___d5 = value;
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__GUID::__get_d6() {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___d6;
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__GUID::__get_d6() const {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___d6;
}
constexpr void GlobalNamespace::__OVRPlugin__GUID::__set_d6(uint8_t value) {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  this->___d6 = value;
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__GUID::__get_d7() {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___d7;
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__GUID::__get_d7() const {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___d7;
}
constexpr void GlobalNamespace::__OVRPlugin__GUID::__set_d7(uint8_t value) {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  this->___d7 = value;
}
inline ::GlobalNamespace::__OVRPlugin__GUID* GlobalNamespace::__OVRPlugin__GUID::New_ctor() {
  return THROW_UNLESS(::il2cpp_utils::New<::GlobalNamespace::__OVRPlugin__GUID*>());
}
inline void GlobalNamespace::__OVRPlugin__GUID::_ctor() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__GUID*>::get(), ".ctor",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<void, false>(this, ___internal_method);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__GUID::__OVRPlugin__GUID() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Bool::__OVRPlugin__Bool(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Bool::__OVRPlugin__Bool() {}
constexpr ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__Bool::False{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__Bool::True{ static_cast<int32_t>(0x1) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Result::__OVRPlugin__Result(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Result::__OVRPlugin__Result() {}
constexpr ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__Result::Success{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__Result::Success_EventUnavailable{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__Result::Success_Pending{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__Result::Failure{ static_cast<int32_t>(0xfffffc18) };
constexpr ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__Result::Failure_InvalidParameter{ static_cast<int32_t>(0xfffffc17) };
constexpr ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__Result::Failure_NotInitialized{ static_cast<int32_t>(0xfffffc16) };
constexpr ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__Result::Failure_InvalidOperation{ static_cast<int32_t>(0xfffffc15) };
constexpr ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__Result::Failure_Unsupported{ static_cast<int32_t>(0xfffffc14) };
constexpr ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__Result::Failure_NotYetImplemented{ static_cast<int32_t>(0xfffffc13) };
constexpr ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__Result::Failure_OperationFailed{ static_cast<int32_t>(0xfffffc12) };
constexpr ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__Result::Failure_InsufficientSize{ static_cast<int32_t>(0xfffffc11) };
constexpr ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__Result::Failure_DataIsInvalid{ static_cast<int32_t>(0xfffffc10) };
constexpr ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__Result::Failure_DeprecatedOperation{ static_cast<int32_t>(0xfffffc0f) };
constexpr ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__Result::Failure_ErrorLimitReached{ static_cast<int32_t>(0xfffffc0e) };
constexpr ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__Result::Failure_ErrorInitializationFailed{ static_cast<int32_t>(0xfffffc0d) };
constexpr ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__Result::Failure_SpaceCloudStorageDisabled{ static_cast<int32_t>(0xfffff830) };
constexpr ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__Result::Failure_SpaceMappingInsufficient{ static_cast<int32_t>(0xfffff82f) };
constexpr ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__Result::Failure_SpaceLocalizationFailed{ static_cast<int32_t>(0xfffff82e) };
constexpr ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__Result::Failure_SpaceNetworkTimeout{ static_cast<int32_t>(0xfffff82d) };
constexpr ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__Result::Failure_SpaceNetworkRequestFailed{ static_cast<int32_t>(0xfffff82c) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__LogLevel::__OVRPlugin__LogLevel(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__LogLevel::__OVRPlugin__LogLevel() {}
constexpr ::GlobalNamespace::__OVRPlugin__LogLevel GlobalNamespace::__OVRPlugin__LogLevel::Debug{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__LogLevel GlobalNamespace::__OVRPlugin__LogLevel::Info{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__LogLevel GlobalNamespace::__OVRPlugin__LogLevel::Error{ static_cast<int32_t>(0x2) };
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType._ctor
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::*)(::System::Object*, void*)>(
    &::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::_ctor)> {
  constexpr static std::size_t size = 0xc4;
  constexpr static std::size_t addrs = 0x276aaf0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get(), ".ctor", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::System::Object*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType.Invoke
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::*)(
    ::GlobalNamespace::__OVRPlugin__LogLevel, void*, int32_t)>(&::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::Invoke)> {
  constexpr static std::size_t size = 0x14;
  constexpr static std::size_t addrs = 0x276abb4;

  inline static ::MethodInfo const* methodInfo() {

    static auto* ___internal_method =
        THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get(),
                                                       ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get(), 13));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType.BeginInvoke
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (
    ::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::*)(::GlobalNamespace::__OVRPlugin__LogLevel, void*, int32_t, ::System::AsyncCallback*, ::System::Object*)>(
    &::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::BeginInvoke)> {
  constexpr static std::size_t size = 0xe4;
  constexpr static std::size_t addrs = 0x276abc8;

  inline static ::MethodInfo const* methodInfo() {

    static auto* ___internal_method =
        THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get(),
                                                       ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get(), 14));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType.EndInvoke
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::*)(::System::IAsyncResult*)>(
    &::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::EndInvoke)> {
  constexpr static std::size_t size = 0xc;
  constexpr static std::size_t addrs = 0x276acac;

  inline static ::MethodInfo const* methodInfo() {

    static auto* ___internal_method =
        THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get(),
                                                       ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get(), 15));
    return ___internal_method;
  }
};
inline ::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType* GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::New_ctor(::System::Object* object, void* method) {
  return THROW_UNLESS(::il2cpp_utils::New<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>(object, method));
}
inline void GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::_ctor(::System::Object* object, void* method) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get(), ".ctor", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::System::Object*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(this, ___internal_method, object, method);
}
inline void GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::Invoke(::GlobalNamespace::__OVRPlugin__LogLevel logLevel, void* message, int32_t size) {
  auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(il2cpp_functions::object_get_class(reinterpret_cast<Il2CppObject*>(this)),
                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get(), 13)));
  return ::cordl_internals::RunMethodRethrow<void, false>(this, ___internal_method, logLevel, message, size);
}
inline ::System::IAsyncResult* GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::BeginInvoke(::GlobalNamespace::__OVRPlugin__LogLevel logLevel, void* message, int32_t size,
                                                                                                   ::System::AsyncCallback* callback, ::System::Object* object) {
  auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(il2cpp_functions::object_get_class(reinterpret_cast<Il2CppObject*>(this)),
                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get(), 14)));
  return ::cordl_internals::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal_method, logLevel, message, size, callback, object);
}
inline void GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::EndInvoke(::System::IAsyncResult* result) {
  auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(il2cpp_functions::object_get_class(reinterpret_cast<Il2CppObject*>(this)),
                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get(), 15)));
  return ::cordl_internals::RunMethodRethrow<void, false>(this, ___internal_method, result);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::__OVRPlugin__LogCallback2DelegateType() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__CameraStatus::__OVRPlugin__CameraStatus(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__CameraStatus::__OVRPlugin__CameraStatus() {}
constexpr ::GlobalNamespace::__OVRPlugin__CameraStatus GlobalNamespace::__OVRPlugin__CameraStatus::CameraStatus_None{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__CameraStatus GlobalNamespace::__OVRPlugin__CameraStatus::CameraStatus_Connected{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__CameraStatus GlobalNamespace::__OVRPlugin__CameraStatus::CameraStatus_Calibrating{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__CameraStatus GlobalNamespace::__OVRPlugin__CameraStatus::CameraStatus_CalibrationFailed{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__CameraStatus GlobalNamespace::__OVRPlugin__CameraStatus::CameraStatus_Calibrated{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__CameraStatus GlobalNamespace::__OVRPlugin__CameraStatus::CameraStatus_ThirdPerson{ static_cast<int32_t>(0x5) };
constexpr ::GlobalNamespace::__OVRPlugin__CameraStatus GlobalNamespace::__OVRPlugin__CameraStatus::CameraStatus_EnumSize{ static_cast<int32_t>(0x7fffffff) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__CameraAnchorType::__OVRPlugin__CameraAnchorType(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__CameraAnchorType::__OVRPlugin__CameraAnchorType() {}
constexpr ::GlobalNamespace::__OVRPlugin__CameraAnchorType GlobalNamespace::__OVRPlugin__CameraAnchorType::CameraAnchorType_PreDefined{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__CameraAnchorType GlobalNamespace::__OVRPlugin__CameraAnchorType::CameraAnchorType_Custom{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__CameraAnchorType GlobalNamespace::__OVRPlugin__CameraAnchorType::CameraAnchorType_Count{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__CameraAnchorType GlobalNamespace::__OVRPlugin__CameraAnchorType::CameraAnchorType_EnumSize{ static_cast<int32_t>(0x7fffffff) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__XrApi::__OVRPlugin__XrApi(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__XrApi::__OVRPlugin__XrApi() {}
constexpr ::GlobalNamespace::__OVRPlugin__XrApi GlobalNamespace::__OVRPlugin__XrApi::Unknown{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__XrApi GlobalNamespace::__OVRPlugin__XrApi::CAPI{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__XrApi GlobalNamespace::__OVRPlugin__XrApi::VRAPI{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__XrApi GlobalNamespace::__OVRPlugin__XrApi::OpenXR{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__XrApi GlobalNamespace::__OVRPlugin__XrApi::EnumSize{ static_cast<int32_t>(0x7fffffff) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Eye::__OVRPlugin__Eye(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Eye::__OVRPlugin__Eye() {}
constexpr ::GlobalNamespace::__OVRPlugin__Eye GlobalNamespace::__OVRPlugin__Eye::None{ static_cast<int32_t>(0xffffffff) };
constexpr ::GlobalNamespace::__OVRPlugin__Eye GlobalNamespace::__OVRPlugin__Eye::Left{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__Eye GlobalNamespace::__OVRPlugin__Eye::Right{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__Eye GlobalNamespace::__OVRPlugin__Eye::Count{ static_cast<int32_t>(0x2) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Tracker::__OVRPlugin__Tracker(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Tracker::__OVRPlugin__Tracker() {}
constexpr ::GlobalNamespace::__OVRPlugin__Tracker GlobalNamespace::__OVRPlugin__Tracker::None{ static_cast<int32_t>(0xffffffff) };
constexpr ::GlobalNamespace::__OVRPlugin__Tracker GlobalNamespace::__OVRPlugin__Tracker::Zero{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__Tracker GlobalNamespace::__OVRPlugin__Tracker::One{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__Tracker GlobalNamespace::__OVRPlugin__Tracker::Two{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__Tracker GlobalNamespace::__OVRPlugin__Tracker::Three{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__Tracker GlobalNamespace::__OVRPlugin__Tracker::Count{ static_cast<int32_t>(0x4) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Node::__OVRPlugin__Node(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Node::__OVRPlugin__Node() {}
constexpr ::GlobalNamespace::__OVRPlugin__Node GlobalNamespace::__OVRPlugin__Node::None{ static_cast<int32_t>(0xffffffff) };
constexpr ::GlobalNamespace::__OVRPlugin__Node GlobalNamespace::__OVRPlugin__Node::EyeLeft{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__Node GlobalNamespace::__OVRPlugin__Node::EyeRight{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__Node GlobalNamespace::__OVRPlugin__Node::EyeCenter{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__Node GlobalNamespace::__OVRPlugin__Node::HandLeft{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__Node GlobalNamespace::__OVRPlugin__Node::HandRight{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__Node GlobalNamespace::__OVRPlugin__Node::TrackerZero{ static_cast<int32_t>(0x5) };
constexpr ::GlobalNamespace::__OVRPlugin__Node GlobalNamespace::__OVRPlugin__Node::TrackerOne{ static_cast<int32_t>(0x6) };
constexpr ::GlobalNamespace::__OVRPlugin__Node GlobalNamespace::__OVRPlugin__Node::TrackerTwo{ static_cast<int32_t>(0x7) };
constexpr ::GlobalNamespace::__OVRPlugin__Node GlobalNamespace::__OVRPlugin__Node::TrackerThree{ static_cast<int32_t>(0x8) };
constexpr ::GlobalNamespace::__OVRPlugin__Node GlobalNamespace::__OVRPlugin__Node::Head{ static_cast<int32_t>(0x9) };
constexpr ::GlobalNamespace::__OVRPlugin__Node GlobalNamespace::__OVRPlugin__Node::DeviceObjectZero{ static_cast<int32_t>(0xa) };
constexpr ::GlobalNamespace::__OVRPlugin__Node GlobalNamespace::__OVRPlugin__Node::TrackedKeyboard{ static_cast<int32_t>(0xb) };
constexpr ::GlobalNamespace::__OVRPlugin__Node GlobalNamespace::__OVRPlugin__Node::ControllerLeft{ static_cast<int32_t>(0xc) };
constexpr ::GlobalNamespace::__OVRPlugin__Node GlobalNamespace::__OVRPlugin__Node::ControllerRight{ static_cast<int32_t>(0xd) };
constexpr ::GlobalNamespace::__OVRPlugin__Node GlobalNamespace::__OVRPlugin__Node::Count{ static_cast<int32_t>(0xe) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Controller::__OVRPlugin__Controller(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Controller::__OVRPlugin__Controller() {}
constexpr ::GlobalNamespace::__OVRPlugin__Controller GlobalNamespace::__OVRPlugin__Controller::None{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__Controller GlobalNamespace::__OVRPlugin__Controller::LTouch{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__Controller GlobalNamespace::__OVRPlugin__Controller::RTouch{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__Controller GlobalNamespace::__OVRPlugin__Controller::Touch{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__Controller GlobalNamespace::__OVRPlugin__Controller::Remote{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__Controller GlobalNamespace::__OVRPlugin__Controller::Gamepad{ static_cast<int32_t>(0x10) };
constexpr ::GlobalNamespace::__OVRPlugin__Controller GlobalNamespace::__OVRPlugin__Controller::LHand{ static_cast<int32_t>(0x20) };
constexpr ::GlobalNamespace::__OVRPlugin__Controller GlobalNamespace::__OVRPlugin__Controller::RHand{ static_cast<int32_t>(0x40) };
constexpr ::GlobalNamespace::__OVRPlugin__Controller GlobalNamespace::__OVRPlugin__Controller::Hands{ static_cast<int32_t>(0x60) };
constexpr ::GlobalNamespace::__OVRPlugin__Controller GlobalNamespace::__OVRPlugin__Controller::Active{ static_cast<int32_t>(0x80000000) };
constexpr ::GlobalNamespace::__OVRPlugin__Controller GlobalNamespace::__OVRPlugin__Controller::All{ static_cast<int32_t>(0xffffffff) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__InteractionProfile::__OVRPlugin__InteractionProfile(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__InteractionProfile::__OVRPlugin__InteractionProfile() {}
constexpr ::GlobalNamespace::__OVRPlugin__InteractionProfile GlobalNamespace::__OVRPlugin__InteractionProfile::None{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__InteractionProfile GlobalNamespace::__OVRPlugin__InteractionProfile::Touch{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__InteractionProfile GlobalNamespace::__OVRPlugin__InteractionProfile::TouchPro{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__InteractionProfile GlobalNamespace::__OVRPlugin__InteractionProfile::TouchPlus{ static_cast<int32_t>(0x4) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Handedness::__OVRPlugin__Handedness(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Handedness::__OVRPlugin__Handedness() {}
constexpr ::GlobalNamespace::__OVRPlugin__Handedness GlobalNamespace::__OVRPlugin__Handedness::Unsupported{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__Handedness GlobalNamespace::__OVRPlugin__Handedness::LeftHanded{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__Handedness GlobalNamespace::__OVRPlugin__Handedness::RightHanded{ static_cast<int32_t>(0x2) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__TrackingOrigin::__OVRPlugin__TrackingOrigin(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__TrackingOrigin::__OVRPlugin__TrackingOrigin() {}
constexpr ::GlobalNamespace::__OVRPlugin__TrackingOrigin GlobalNamespace::__OVRPlugin__TrackingOrigin::EyeLevel{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__TrackingOrigin GlobalNamespace::__OVRPlugin__TrackingOrigin::FloorLevel{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__TrackingOrigin GlobalNamespace::__OVRPlugin__TrackingOrigin::Stage{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__TrackingOrigin GlobalNamespace::__OVRPlugin__TrackingOrigin::View{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__TrackingOrigin GlobalNamespace::__OVRPlugin__TrackingOrigin::Count{ static_cast<int32_t>(0x5) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__RecenterFlags::__OVRPlugin__RecenterFlags(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__RecenterFlags::__OVRPlugin__RecenterFlags() {}
constexpr ::GlobalNamespace::__OVRPlugin__RecenterFlags GlobalNamespace::__OVRPlugin__RecenterFlags::Default{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__RecenterFlags GlobalNamespace::__OVRPlugin__RecenterFlags::IgnoreAll{ static_cast<int32_t>(0x80000000) };
constexpr ::GlobalNamespace::__OVRPlugin__RecenterFlags GlobalNamespace::__OVRPlugin__RecenterFlags::Count{ static_cast<int32_t>(0x80000001) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__BatteryStatus::__OVRPlugin__BatteryStatus(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__BatteryStatus::__OVRPlugin__BatteryStatus() {}
constexpr ::GlobalNamespace::__OVRPlugin__BatteryStatus GlobalNamespace::__OVRPlugin__BatteryStatus::Charging{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__BatteryStatus GlobalNamespace::__OVRPlugin__BatteryStatus::Discharging{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__BatteryStatus GlobalNamespace::__OVRPlugin__BatteryStatus::Full{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__BatteryStatus GlobalNamespace::__OVRPlugin__BatteryStatus::NotCharging{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__BatteryStatus GlobalNamespace::__OVRPlugin__BatteryStatus::Unknown{ static_cast<int32_t>(0x4) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat::__OVRPlugin__EyeTextureFormat(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat::__OVRPlugin__EyeTextureFormat() {}
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat GlobalNamespace::__OVRPlugin__EyeTextureFormat::Default{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat GlobalNamespace::__OVRPlugin__EyeTextureFormat::R8G8B8A8_sRGB{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat GlobalNamespace::__OVRPlugin__EyeTextureFormat::R8G8B8A8{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat GlobalNamespace::__OVRPlugin__EyeTextureFormat::R16G16B16A16_FP{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat GlobalNamespace::__OVRPlugin__EyeTextureFormat::R11G11B10_FP{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat GlobalNamespace::__OVRPlugin__EyeTextureFormat::B8G8R8A8_sRGB{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat GlobalNamespace::__OVRPlugin__EyeTextureFormat::B8G8R8A8{ static_cast<int32_t>(0x5) };
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat GlobalNamespace::__OVRPlugin__EyeTextureFormat::R5G6B5{ static_cast<int32_t>(0xb) };
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat GlobalNamespace::__OVRPlugin__EyeTextureFormat::EnumSize{ static_cast<int32_t>(0x7fffffff) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PlatformUI::__OVRPlugin__PlatformUI(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__PlatformUI::__OVRPlugin__PlatformUI() {}
constexpr ::GlobalNamespace::__OVRPlugin__PlatformUI GlobalNamespace::__OVRPlugin__PlatformUI::None{ static_cast<int32_t>(0xffffffff) };
constexpr ::GlobalNamespace::__OVRPlugin__PlatformUI GlobalNamespace::__OVRPlugin__PlatformUI::ConfirmQuit{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__PlatformUI GlobalNamespace::__OVRPlugin__PlatformUI::GlobalMenuTutorial{ static_cast<int32_t>(0x2) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SystemRegion::__OVRPlugin__SystemRegion(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__SystemRegion::__OVRPlugin__SystemRegion() {}
constexpr ::GlobalNamespace::__OVRPlugin__SystemRegion GlobalNamespace::__OVRPlugin__SystemRegion::Unspecified{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__SystemRegion GlobalNamespace::__OVRPlugin__SystemRegion::Japan{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__SystemRegion GlobalNamespace::__OVRPlugin__SystemRegion::China{ static_cast<int32_t>(0x2) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset::__OVRPlugin__SystemHeadset(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset::__OVRPlugin__SystemHeadset() {}
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::__OVRPlugin__SystemHeadset::None{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::__OVRPlugin__SystemHeadset::Oculus_Quest{ static_cast<int32_t>(0x8) };
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::__OVRPlugin__SystemHeadset::Oculus_Quest_2{ static_cast<int32_t>(0x9) };
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::__OVRPlugin__SystemHeadset::Meta_Quest_Pro{ static_cast<int32_t>(0xa) };
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::__OVRPlugin__SystemHeadset::Meta_Quest_3{ static_cast<int32_t>(0xb) };
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::__OVRPlugin__SystemHeadset::Placeholder_12{ static_cast<int32_t>(0xc) };
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::__OVRPlugin__SystemHeadset::Placeholder_13{ static_cast<int32_t>(0xd) };
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::__OVRPlugin__SystemHeadset::Placeholder_14{ static_cast<int32_t>(0xe) };
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::__OVRPlugin__SystemHeadset::Rift_DK1{ static_cast<int32_t>(0x1000) };
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::__OVRPlugin__SystemHeadset::Rift_DK2{ static_cast<int32_t>(0x1001) };
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::__OVRPlugin__SystemHeadset::Rift_CV1{ static_cast<int32_t>(0x1002) };
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::__OVRPlugin__SystemHeadset::Rift_CB{ static_cast<int32_t>(0x1003) };
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::__OVRPlugin__SystemHeadset::Rift_S{ static_cast<int32_t>(0x1004) };
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::__OVRPlugin__SystemHeadset::Oculus_Link_Quest{ static_cast<int32_t>(0x1005) };
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::__OVRPlugin__SystemHeadset::Oculus_Link_Quest_2{ static_cast<int32_t>(0x1006) };
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::__OVRPlugin__SystemHeadset::Meta_Link_Quest_Pro{ static_cast<int32_t>(0x1007) };
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::__OVRPlugin__SystemHeadset::Meta_Link_Quest_3{ static_cast<int32_t>(0x1008) };
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::__OVRPlugin__SystemHeadset::PC_Placeholder_4105{ static_cast<int32_t>(0x1009) };
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::__OVRPlugin__SystemHeadset::PC_Placeholder_4106{ static_cast<int32_t>(0x100a) };
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::__OVRPlugin__SystemHeadset::PC_Placeholder_4107{ static_cast<int32_t>(0x100b) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape::__OVRPlugin__OverlayShape(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape::__OVRPlugin__OverlayShape() {}
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape GlobalNamespace::__OVRPlugin__OverlayShape::Quad{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape GlobalNamespace::__OVRPlugin__OverlayShape::Cylinder{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape GlobalNamespace::__OVRPlugin__OverlayShape::Cubemap{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape GlobalNamespace::__OVRPlugin__OverlayShape::OffcenterCubemap{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape GlobalNamespace::__OVRPlugin__OverlayShape::Equirect{ static_cast<int32_t>(0x5) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape GlobalNamespace::__OVRPlugin__OverlayShape::ReconstructionPassthrough{ static_cast<int32_t>(0x7) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape GlobalNamespace::__OVRPlugin__OverlayShape::SurfaceProjectedPassthrough{ static_cast<int32_t>(0x8) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape GlobalNamespace::__OVRPlugin__OverlayShape::Fisheye{ static_cast<int32_t>(0x9) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape GlobalNamespace::__OVRPlugin__OverlayShape::KeyboardHandsPassthrough{ static_cast<int32_t>(0xa) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape GlobalNamespace::__OVRPlugin__OverlayShape::KeyboardMaskedHandsPassthrough{ static_cast<int32_t>(0xb) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__LayerSuperSamplingType::__OVRPlugin__LayerSuperSamplingType(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__LayerSuperSamplingType::__OVRPlugin__LayerSuperSamplingType() {}
constexpr ::GlobalNamespace::__OVRPlugin__LayerSuperSamplingType GlobalNamespace::__OVRPlugin__LayerSuperSamplingType::None{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__LayerSuperSamplingType GlobalNamespace::__OVRPlugin__LayerSuperSamplingType::Normal{ static_cast<int32_t>(0x1000) };
constexpr ::GlobalNamespace::__OVRPlugin__LayerSuperSamplingType GlobalNamespace::__OVRPlugin__LayerSuperSamplingType::Quality{ static_cast<int32_t>(0x100) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__LayerSharpenType::__OVRPlugin__LayerSharpenType(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__LayerSharpenType::__OVRPlugin__LayerSharpenType() {}
constexpr ::GlobalNamespace::__OVRPlugin__LayerSharpenType GlobalNamespace::__OVRPlugin__LayerSharpenType::None{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__LayerSharpenType GlobalNamespace::__OVRPlugin__LayerSharpenType::Normal{ static_cast<int32_t>(0x2000) };
constexpr ::GlobalNamespace::__OVRPlugin__LayerSharpenType GlobalNamespace::__OVRPlugin__LayerSharpenType::Quality{ static_cast<int32_t>(0x10000) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Step::__OVRPlugin__Step(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Step::__OVRPlugin__Step() {}
constexpr ::GlobalNamespace::__OVRPlugin__Step GlobalNamespace::__OVRPlugin__Step::Render{ static_cast<int32_t>(0xffffffff) };
constexpr ::GlobalNamespace::__OVRPlugin__Step GlobalNamespace::__OVRPlugin__Step::Physics{ static_cast<int32_t>(0x0) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__CameraDevice::__OVRPlugin__CameraDevice(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__CameraDevice::__OVRPlugin__CameraDevice() {}
constexpr ::GlobalNamespace::__OVRPlugin__CameraDevice GlobalNamespace::__OVRPlugin__CameraDevice::None{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__CameraDevice GlobalNamespace::__OVRPlugin__CameraDevice::WebCamera0{ static_cast<int32_t>(0x64) };
constexpr ::GlobalNamespace::__OVRPlugin__CameraDevice GlobalNamespace::__OVRPlugin__CameraDevice::WebCamera1{ static_cast<int32_t>(0x65) };
constexpr ::GlobalNamespace::__OVRPlugin__CameraDevice GlobalNamespace::__OVRPlugin__CameraDevice::ZEDCamera{ static_cast<int32_t>(0x12c) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__CameraDeviceDepthSensingMode::__OVRPlugin__CameraDeviceDepthSensingMode(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__CameraDeviceDepthSensingMode::__OVRPlugin__CameraDeviceDepthSensingMode() {}
constexpr ::GlobalNamespace::__OVRPlugin__CameraDeviceDepthSensingMode GlobalNamespace::__OVRPlugin__CameraDeviceDepthSensingMode::Standard{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__CameraDeviceDepthSensingMode GlobalNamespace::__OVRPlugin__CameraDeviceDepthSensingMode::Fill{ static_cast<int32_t>(0x1) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__CameraDeviceDepthQuality::__OVRPlugin__CameraDeviceDepthQuality(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__CameraDeviceDepthQuality::__OVRPlugin__CameraDeviceDepthQuality() {}
constexpr ::GlobalNamespace::__OVRPlugin__CameraDeviceDepthQuality GlobalNamespace::__OVRPlugin__CameraDeviceDepthQuality::Low{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__CameraDeviceDepthQuality GlobalNamespace::__OVRPlugin__CameraDeviceDepthQuality::Medium{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__CameraDeviceDepthQuality GlobalNamespace::__OVRPlugin__CameraDeviceDepthQuality::High{ static_cast<int32_t>(0x2) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel::__OVRPlugin__FoveatedRenderingLevel(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel::__OVRPlugin__FoveatedRenderingLevel() {}
constexpr ::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel::Off{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel::Low{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel::Medium{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel::High{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel::HighTop{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel::EnumSize{ static_cast<int32_t>(0x7fffffff) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel::__OVRPlugin__FixedFoveatedRenderingLevel(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel::__OVRPlugin__FixedFoveatedRenderingLevel() {}
constexpr ::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel::Off{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel::Low{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel::Medium{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel::High{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel::HighTop{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel::EnumSize{ static_cast<int32_t>(0x7fffffff) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__TiledMultiResLevel::__OVRPlugin__TiledMultiResLevel(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__TiledMultiResLevel::__OVRPlugin__TiledMultiResLevel() {}
constexpr ::GlobalNamespace::__OVRPlugin__TiledMultiResLevel GlobalNamespace::__OVRPlugin__TiledMultiResLevel::Off{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__TiledMultiResLevel GlobalNamespace::__OVRPlugin__TiledMultiResLevel::LMSLow{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__TiledMultiResLevel GlobalNamespace::__OVRPlugin__TiledMultiResLevel::LMSMedium{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__TiledMultiResLevel GlobalNamespace::__OVRPlugin__TiledMultiResLevel::LMSHigh{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__TiledMultiResLevel GlobalNamespace::__OVRPlugin__TiledMultiResLevel::LMSHighTop{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__TiledMultiResLevel GlobalNamespace::__OVRPlugin__TiledMultiResLevel::EnumSize{ static_cast<int32_t>(0x7fffffff) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics::__OVRPlugin__PerfMetrics(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics::__OVRPlugin__PerfMetrics() {}
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::App_CpuTime_Float{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::App_GpuTime_Float{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::Compositor_CpuTime_Float{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::Compositor_GpuTime_Float{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::Compositor_DroppedFrameCount_Int{ static_cast<int32_t>(0x5) };
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::System_GpuUtilPercentage_Float{ static_cast<int32_t>(0x7) };
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::System_CpuUtilAveragePercentage_Float{ static_cast<int32_t>(0x8) };
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::System_CpuUtilWorstPercentage_Float{ static_cast<int32_t>(0x9) };
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::Device_CpuClockFrequencyInMHz_Float{ static_cast<int32_t>(0xa) };
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::Device_GpuClockFrequencyInMHz_Float{ static_cast<int32_t>(0xb) };
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::Device_CpuClockLevel_Int{ static_cast<int32_t>(0xc) };
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::Device_GpuClockLevel_Int{ static_cast<int32_t>(0xd) };
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::Compositor_SpaceWarp_Mode_Int{ static_cast<int32_t>(0xe) };
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::Device_CpuCore0UtilPercentage_Float{ static_cast<int32_t>(0x20) };
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::Device_CpuCore1UtilPercentage_Float{ static_cast<int32_t>(0x21) };
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::Device_CpuCore2UtilPercentage_Float{ static_cast<int32_t>(0x22) };
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::Device_CpuCore3UtilPercentage_Float{ static_cast<int32_t>(0x23) };
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::Device_CpuCore4UtilPercentage_Float{ static_cast<int32_t>(0x24) };
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::Device_CpuCore5UtilPercentage_Float{ static_cast<int32_t>(0x25) };
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::Device_CpuCore6UtilPercentage_Float{ static_cast<int32_t>(0x26) };
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::Device_CpuCore7UtilPercentage_Float{ static_cast<int32_t>(0x27) };
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::Count{ static_cast<int32_t>(0x28) };
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics GlobalNamespace::__OVRPlugin__PerfMetrics::EnumSize{ static_cast<int32_t>(0x7fffffff) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel::__OVRPlugin__ProcessorPerformanceLevel(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel::__OVRPlugin__ProcessorPerformanceLevel() {}
constexpr ::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel::PowerSavings{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel::SustainedLow{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel::SustainedHigh{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel::Boost{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel::EnumSize{ static_cast<int32_t>(0x7fffffff) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__FeatureType::__OVRPlugin__FeatureType(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__FeatureType::__OVRPlugin__FeatureType() {}
constexpr ::GlobalNamespace::__OVRPlugin__FeatureType GlobalNamespace::__OVRPlugin__FeatureType::HandTracking{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__FeatureType GlobalNamespace::__OVRPlugin__FeatureType::KeyboardTracking{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__FeatureType GlobalNamespace::__OVRPlugin__FeatureType::EyeTracking{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__FeatureType GlobalNamespace::__OVRPlugin__FeatureType::FaceTracking{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__FeatureType GlobalNamespace::__OVRPlugin__FeatureType::BodyTracking{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__FeatureType GlobalNamespace::__OVRPlugin__FeatureType::Passthrough{ static_cast<int32_t>(0x5) };
constexpr ::GlobalNamespace::__OVRPlugin__FeatureType GlobalNamespace::__OVRPlugin__FeatureType::GazeBasedFoveatedRendering{ static_cast<int32_t>(0x6) };
constexpr ::GlobalNamespace::__OVRPlugin__FeatureType GlobalNamespace::__OVRPlugin__FeatureType::Count{ static_cast<int32_t>(0x7) };
constexpr ::GlobalNamespace::__OVRPlugin__FeatureType GlobalNamespace::__OVRPlugin__FeatureType::EnumSize{ static_cast<int32_t>(0x7fffffff) };
// Ctor Parameters [CppParam { name: "fx", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "fy", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "cx",
// ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "cy", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "disto0", ty: "double_t", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "disto1", ty: "double_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "disto2", ty: "double_t", modifiers: "", def_value: Some("{}") },
// CppParam { name: "disto3", ty: "double_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "disto4", ty: "double_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "v_fov", ty:
// "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "h_fov", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "d_fov", ty: "float_t", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "w", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "h", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__OVRPlugin__CameraDeviceIntrinsicsParameters(float_t fx, float_t fy, float_t cx, float_t cy, double_t disto0,
                                                                                                                          double_t disto1, double_t disto2, double_t disto3, double_t disto4,
                                                                                                                          float_t v_fov, float_t h_fov, float_t d_fov, int32_t w, int32_t h) noexcept {
  this->fx = fx;
  this->fy = fy;
  this->cx = cx;
  this->cy = cy;
  this->disto0 = disto0;
  this->disto1 = disto1;
  this->disto2 = disto2;
  this->disto3 = disto3;
  this->disto4 = disto4;
  this->v_fov = v_fov;
  this->h_fov = h_fov;
  this->d_fov = d_fov;
  this->w = w;
  this->h = h;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__OVRPlugin__CameraDeviceIntrinsicsParameters() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag::__OVRPlugin__OverlayFlag(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag::__OVRPlugin__OverlayFlag() {}
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag GlobalNamespace::__OVRPlugin__OverlayFlag::None{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag GlobalNamespace::__OVRPlugin__OverlayFlag::OnTop{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag GlobalNamespace::__OVRPlugin__OverlayFlag::HeadLocked{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag GlobalNamespace::__OVRPlugin__OverlayFlag::NoDepth{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag GlobalNamespace::__OVRPlugin__OverlayFlag::ExpensiveSuperSample{ static_cast<int32_t>(0x8) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag GlobalNamespace::__OVRPlugin__OverlayFlag::EfficientSuperSample{ static_cast<int32_t>(0x10) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag GlobalNamespace::__OVRPlugin__OverlayFlag::EfficientSharpen{ static_cast<int32_t>(0x20) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag GlobalNamespace::__OVRPlugin__OverlayFlag::BicubicFiltering{ static_cast<int32_t>(0x40) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag GlobalNamespace::__OVRPlugin__OverlayFlag::ExpensiveSharpen{ static_cast<int32_t>(0x80) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag GlobalNamespace::__OVRPlugin__OverlayFlag::SecureContent{ static_cast<int32_t>(0x100) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag GlobalNamespace::__OVRPlugin__OverlayFlag::ShapeFlag_Quad{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag GlobalNamespace::__OVRPlugin__OverlayFlag::ShapeFlag_Cylinder{ static_cast<int32_t>(0x10) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag GlobalNamespace::__OVRPlugin__OverlayFlag::ShapeFlag_Cubemap{ static_cast<int32_t>(0x20) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag GlobalNamespace::__OVRPlugin__OverlayFlag::ShapeFlag_OffcenterCubemap{ static_cast<int32_t>(0x40) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag GlobalNamespace::__OVRPlugin__OverlayFlag::ShapeFlagRangeMask{ static_cast<int32_t>(0xf0) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag GlobalNamespace::__OVRPlugin__OverlayFlag::Hidden{ static_cast<int32_t>(0x200) };
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag GlobalNamespace::__OVRPlugin__OverlayFlag::AutoFiltering{ static_cast<int32_t>(0x400) };
// Ctor Parameters [CppParam { name: "x", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "y", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f::__OVRPlugin__Vector2f(float_t x, float_t y) noexcept {
  this->x = x;
  this->y = y;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f::__OVRPlugin__Vector2f() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Vector3f.ToString
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (::GlobalNamespace::__OVRPlugin__Vector3f::*)()>(&::GlobalNamespace::__OVRPlugin__Vector3f::ToString)> {
  constexpr static std::size_t size = 0xfc;
  constexpr static std::size_t addrs = 0x276acb8;

  inline static ::MethodInfo const* methodInfo() {

    static auto* ___internal_method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector3f>::get(),
                                                                                     ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector3f>::get(), 3));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__Vector3f::setStaticF_zero(::GlobalNamespace::__OVRPlugin__Vector3f value) {
  ::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__Vector3f, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector3f>::get>(
      std::forward<::GlobalNamespace::__OVRPlugin__Vector3f>(value));
}
inline ::GlobalNamespace::__OVRPlugin__Vector3f GlobalNamespace::__OVRPlugin__Vector3f::getStaticF_zero() {
  return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__Vector3f, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector3f>::get>();
}
inline ::StringW GlobalNamespace::__OVRPlugin__Vector3f::ToString() {
  auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(il2cpp_functions::object_get_class(reinterpret_cast<Il2CppObject*>(this)),
                                                                             ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector3f>::get(), 3)));
  return ::cordl_internals::RunMethodRethrow<::StringW, false>(this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "x", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "y", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "z", ty:
// "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f::__OVRPlugin__Vector3f(float_t x, float_t y, float_t z) noexcept {
  this->x = x;
  this->y = y;
  this->z = z;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f::__OVRPlugin__Vector3f() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Vector4f.ToString
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (::GlobalNamespace::__OVRPlugin__Vector4f::*)()>(&::GlobalNamespace::__OVRPlugin__Vector4f::ToString)> {
  constexpr static std::size_t size = 0x1e4;
  constexpr static std::size_t addrs = 0x276ae00;

  inline static ::MethodInfo const* methodInfo() {

    static auto* ___internal_method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector4f>::get(),
                                                                                     ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector4f>::get(), 3));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__Vector4f::setStaticF_zero(::GlobalNamespace::__OVRPlugin__Vector4f value) {
  ::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__Vector4f, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector4f>::get>(
      std::forward<::GlobalNamespace::__OVRPlugin__Vector4f>(value));
}
inline ::GlobalNamespace::__OVRPlugin__Vector4f GlobalNamespace::__OVRPlugin__Vector4f::getStaticF_zero() {
  return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__Vector4f, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector4f>::get>();
}
inline ::StringW GlobalNamespace::__OVRPlugin__Vector4f::ToString() {
  auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(il2cpp_functions::object_get_class(reinterpret_cast<Il2CppObject*>(this)),
                                                                             ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector4f>::get(), 3)));
  return ::cordl_internals::RunMethodRethrow<::StringW, false>(this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "x", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "y", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "z", ty:
// "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "w", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Vector4f::__OVRPlugin__Vector4f(float_t x, float_t y, float_t z, float_t w) noexcept {
  this->x = x;
  this->y = y;
  this->z = z;
  this->w = w;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Vector4f::__OVRPlugin__Vector4f() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Vector4s.ToString
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (::GlobalNamespace::__OVRPlugin__Vector4s::*)()>(&::GlobalNamespace::__OVRPlugin__Vector4s::ToString)> {
  constexpr static std::size_t size = 0x1e4;
  constexpr static std::size_t addrs = 0x276b02c;

  inline static ::MethodInfo const* methodInfo() {

    static auto* ___internal_method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector4s>::get(),
                                                                                     ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector4s>::get(), 3));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__Vector4s::setStaticF_zero(::GlobalNamespace::__OVRPlugin__Vector4s value) {
  ::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__Vector4s, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector4s>::get>(
      std::forward<::GlobalNamespace::__OVRPlugin__Vector4s>(value));
}
inline ::GlobalNamespace::__OVRPlugin__Vector4s GlobalNamespace::__OVRPlugin__Vector4s::getStaticF_zero() {
  return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__Vector4s, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector4s>::get>();
}
inline ::StringW GlobalNamespace::__OVRPlugin__Vector4s::ToString() {
  auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(il2cpp_functions::object_get_class(reinterpret_cast<Il2CppObject*>(this)),
                                                                             ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector4s>::get(), 3)));
  return ::cordl_internals::RunMethodRethrow<::StringW, false>(this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "x", ty: "int16_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "y", ty: "int16_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "z", ty:
// "int16_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "w", ty: "int16_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Vector4s::__OVRPlugin__Vector4s(int16_t x, int16_t y, int16_t z, int16_t w) noexcept {
  this->x = x;
  this->y = y;
  this->z = z;
  this->w = w;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Vector4s::__OVRPlugin__Vector4s() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Quatf.ToString
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (::GlobalNamespace::__OVRPlugin__Quatf::*)()>(&::GlobalNamespace::__OVRPlugin__Quatf::ToString)> {
  constexpr static std::size_t size = 0x1e4;
  constexpr static std::size_t addrs = 0x276b258;

  inline static ::MethodInfo const* methodInfo() {

    static auto* ___internal_method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Quatf>::get(),
                                                                                     ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Quatf>::get(), 3));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__Quatf::setStaticF_identity(::GlobalNamespace::__OVRPlugin__Quatf value) {
  ::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__Quatf, "identity", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Quatf>::get>(
      std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
inline ::GlobalNamespace::__OVRPlugin__Quatf GlobalNamespace::__OVRPlugin__Quatf::getStaticF_identity() {
  return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__Quatf, "identity", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Quatf>::get>();
}
inline ::StringW GlobalNamespace::__OVRPlugin__Quatf::ToString() {
  auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(il2cpp_functions::object_get_class(reinterpret_cast<Il2CppObject*>(this)),
                                                                             ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Quatf>::get(), 3)));
  return ::cordl_internals::RunMethodRethrow<::StringW, false>(this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "x", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "y", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "z", ty:
// "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "w", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Quatf::__OVRPlugin__Quatf(float_t x, float_t y, float_t z, float_t w) noexcept {
  this->x = x;
  this->y = y;
  this->z = z;
  this->w = w;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Quatf::__OVRPlugin__Quatf() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Posef.ToString
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (::GlobalNamespace::__OVRPlugin__Posef::*)()>(&::GlobalNamespace::__OVRPlugin__Posef::ToString)> {
  constexpr static std::size_t size = 0xf4;
  constexpr static std::size_t addrs = 0x276c48c;

  inline static ::MethodInfo const* methodInfo() {

    static auto* ___internal_method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Posef>::get(),
                                                                                     ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Posef>::get(), 3));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__Posef::setStaticF_identity(::GlobalNamespace::__OVRPlugin__Posef value) {
  ::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__Posef, "identity", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Posef>::get>(
      std::forward<::GlobalNamespace::__OVRPlugin__Posef>(value));
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::__OVRPlugin__Posef::getStaticF_identity() {
  return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__Posef, "identity", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Posef>::get>();
}
inline ::StringW GlobalNamespace::__OVRPlugin__Posef::ToString() {
  auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(il2cpp_functions::object_get_class(reinterpret_cast<Il2CppObject*>(this)),
                                                                             ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Posef>::get(), 3)));
  return ::cordl_internals::RunMethodRethrow<::StringW, false>(this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "Orientation", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "Position", ty:
// "::GlobalNamespace::__OVRPlugin__Vector3f", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Posef::__OVRPlugin__Posef(::GlobalNamespace::__OVRPlugin__Quatf Orientation, ::GlobalNamespace::__OVRPlugin__Vector3f Position) noexcept {
  this->Orientation = Orientation;
  this->Position = Position;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Posef::__OVRPlugin__Posef() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__TextureRectMatrixf.ToString
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (::GlobalNamespace::__OVRPlugin__TextureRectMatrixf::*)()>(
    &::GlobalNamespace::__OVRPlugin__TextureRectMatrixf::ToString)> {
  constexpr static std::size_t size = 0x1f8;
  constexpr static std::size_t addrs = 0x276c658;

  inline static ::MethodInfo const* methodInfo() {

    static auto* ___internal_method =
        THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>::get(),
                                                       ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>::get(), 3));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__TextureRectMatrixf::setStaticF_zero(::GlobalNamespace::__OVRPlugin__TextureRectMatrixf value) {
  ::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf, "zero",
                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>::get>(
      std::forward<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>(value));
}
inline ::GlobalNamespace::__OVRPlugin__TextureRectMatrixf GlobalNamespace::__OVRPlugin__TextureRectMatrixf::getStaticF_zero() {
  return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf, "zero",
                                           ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>::get>();
}
inline ::StringW GlobalNamespace::__OVRPlugin__TextureRectMatrixf::ToString() {
  auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(il2cpp_functions::object_get_class(reinterpret_cast<Il2CppObject*>(this)),
                                                                             ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>::get(), 3)));
  return ::cordl_internals::RunMethodRethrow<::StringW, false>(this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "leftRect", ty: "::UnityEngine::Rect", modifiers: "", def_value: Some("{}") }, CppParam { name: "rightRect", ty: "::UnityEngine::Rect", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "leftScaleBias", ty: "::UnityEngine::Vector4", modifiers: "", def_value: Some("{}") }, CppParam { name: "rightScaleBias", ty: "::UnityEngine::Vector4", modifiers: "",
// def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__TextureRectMatrixf::__OVRPlugin__TextureRectMatrixf(::UnityEngine::Rect leftRect, ::UnityEngine::Rect rightRect, ::UnityEngine::Vector4 leftScaleBias,
                                                                                              ::UnityEngine::Vector4 rightScaleBias) noexcept {
  this->leftRect = leftRect;
  this->rightRect = rightRect;
  this->leftScaleBias = leftScaleBias;
  this->rightScaleBias = rightScaleBias;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__TextureRectMatrixf::__OVRPlugin__TextureRectMatrixf() {}
inline void GlobalNamespace::__OVRPlugin__PoseStatef::setStaticF_identity(::GlobalNamespace::__OVRPlugin__PoseStatef value) {
  ::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__PoseStatef, "identity", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__PoseStatef>::get>(
      std::forward<::GlobalNamespace::__OVRPlugin__PoseStatef>(value));
}
inline ::GlobalNamespace::__OVRPlugin__PoseStatef GlobalNamespace::__OVRPlugin__PoseStatef::getStaticF_identity() {
  return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__PoseStatef, "identity",
                                           ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__PoseStatef>::get>();
}
// Ctor Parameters [CppParam { name: "Pose", ty: "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }, CppParam { name: "Velocity", ty:
// "::GlobalNamespace::__OVRPlugin__Vector3f", modifiers: "", def_value: Some("{}") }, CppParam { name: "Acceleration", ty: "::GlobalNamespace::__OVRPlugin__Vector3f", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "AngularVelocity", ty: "::GlobalNamespace::__OVRPlugin__Vector3f", modifiers: "", def_value: Some("{}") }, CppParam { name: "AngularAcceleration", ty:
// "::GlobalNamespace::__OVRPlugin__Vector3f", modifiers: "", def_value: Some("{}") }, CppParam { name: "Time", ty: "double_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PoseStatef::__OVRPlugin__PoseStatef(::GlobalNamespace::__OVRPlugin__Posef Pose, ::GlobalNamespace::__OVRPlugin__Vector3f Velocity,
                                                                              ::GlobalNamespace::__OVRPlugin__Vector3f Acceleration, ::GlobalNamespace::__OVRPlugin__Vector3f AngularVelocity,
                                                                              ::GlobalNamespace::__OVRPlugin__Vector3f AngularAcceleration, double_t Time) noexcept {
  this->Pose = Pose;
  this->Velocity = Velocity;
  this->Acceleration = Acceleration;
  this->AngularVelocity = AngularVelocity;
  this->AngularAcceleration = AngularAcceleration;
  this->Time = Time;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__PoseStatef::__OVRPlugin__PoseStatef() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HapticsLocation::__OVRPlugin__HapticsLocation(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__HapticsLocation::__OVRPlugin__HapticsLocation() {}
constexpr ::GlobalNamespace::__OVRPlugin__HapticsLocation GlobalNamespace::__OVRPlugin__HapticsLocation::None{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__HapticsLocation GlobalNamespace::__OVRPlugin__HapticsLocation::Hand{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__HapticsLocation GlobalNamespace::__OVRPlugin__HapticsLocation::Thumb{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__HapticsLocation GlobalNamespace::__OVRPlugin__HapticsLocation::Index{ static_cast<int32_t>(0x4) };
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__ControllerState6._ctor
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__ControllerState6::*)(::GlobalNamespace::__OVRPlugin__ControllerState5)>(
    &::GlobalNamespace::__OVRPlugin__ControllerState6::_ctor)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276ca28;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__ControllerState6>::get(), ".ctor", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ControllerState5>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__ControllerState6::_ctor(::GlobalNamespace::__OVRPlugin__ControllerState5 cs) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__ControllerState6>::get(), ".ctor", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ControllerState5>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(this, ___internal_method, cs);
}
// Ctor Parameters [CppParam { name: "ConnectedControllers", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Buttons", ty: "uint32_t", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Touches", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "NearTouches", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "LIndexTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RIndexTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LHandTrigger", ty:
// "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RHandTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LThumbstick", ty:
// "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "RThumbstick", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "LTouchpad", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "RTouchpad", ty:
// "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "LBatteryPercentRemaining", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam {
// name: "RBatteryPercentRemaining", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LRecenterCount", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "RRecenterCount", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LThumbRestForce", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "RThumbRestForce", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LStylusForce", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RStylusForce",
// ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LIndexTriggerCurl", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RIndexTriggerCurl", ty:
// "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LIndexTriggerSlide", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RIndexTriggerSlide", ty:
// "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LIndexTriggerForce", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RIndexTriggerForce", ty:
// "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__ControllerState6::__OVRPlugin__ControllerState6(uint32_t ConnectedControllers, uint32_t Buttons, uint32_t Touches, uint32_t NearTouches,
                                                                                          float_t LIndexTrigger, float_t RIndexTrigger, float_t LHandTrigger, float_t RHandTrigger,
                                                                                          ::GlobalNamespace::__OVRPlugin__Vector2f LThumbstick, ::GlobalNamespace::__OVRPlugin__Vector2f RThumbstick,
                                                                                          ::GlobalNamespace::__OVRPlugin__Vector2f LTouchpad, ::GlobalNamespace::__OVRPlugin__Vector2f RTouchpad,
                                                                                          uint8_t LBatteryPercentRemaining, uint8_t RBatteryPercentRemaining, uint8_t LRecenterCount,
                                                                                          uint8_t RRecenterCount, float_t LThumbRestForce, float_t RThumbRestForce, float_t LStylusForce,
                                                                                          float_t RStylusForce, float_t LIndexTriggerCurl, float_t RIndexTriggerCurl, float_t LIndexTriggerSlide,
                                                                                          float_t RIndexTriggerSlide, float_t LIndexTriggerForce, float_t RIndexTriggerForce) noexcept {
  this->ConnectedControllers = ConnectedControllers;
  this->Buttons = Buttons;
  this->Touches = Touches;
  this->NearTouches = NearTouches;
  this->LIndexTrigger = LIndexTrigger;
  this->RIndexTrigger = RIndexTrigger;
  this->LHandTrigger = LHandTrigger;
  this->RHandTrigger = RHandTrigger;
  this->LThumbstick = LThumbstick;
  this->RThumbstick = RThumbstick;
  this->LTouchpad = LTouchpad;
  this->RTouchpad = RTouchpad;
  this->LBatteryPercentRemaining = LBatteryPercentRemaining;
  this->RBatteryPercentRemaining = RBatteryPercentRemaining;
  this->LRecenterCount = LRecenterCount;
  this->RRecenterCount = RRecenterCount;
  this->LThumbRestForce = LThumbRestForce;
  this->RThumbRestForce = RThumbRestForce;
  this->LStylusForce = LStylusForce;
  this->RStylusForce = RStylusForce;
  this->LIndexTriggerCurl = LIndexTriggerCurl;
  this->RIndexTriggerCurl = RIndexTriggerCurl;
  this->LIndexTriggerSlide = LIndexTriggerSlide;
  this->RIndexTriggerSlide = RIndexTriggerSlide;
  this->LIndexTriggerForce = LIndexTriggerForce;
  this->RIndexTriggerForce = RIndexTriggerForce;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__ControllerState6::__OVRPlugin__ControllerState6() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__ControllerState5._ctor
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__ControllerState5::*)(::GlobalNamespace::__OVRPlugin__ControllerState4)>(
    &::GlobalNamespace::__OVRPlugin__ControllerState5::_ctor)> {
  constexpr static std::size_t size = 0x90;
  constexpr static std::size_t addrs = 0x276caf0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__ControllerState5>::get(), ".ctor", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ControllerState4>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__ControllerState5::_ctor(::GlobalNamespace::__OVRPlugin__ControllerState4 cs) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__ControllerState5>::get(), ".ctor", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ControllerState4>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(this, ___internal_method, cs);
}
// Ctor Parameters [CppParam { name: "ConnectedControllers", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Buttons", ty: "uint32_t", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Touches", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "NearTouches", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "LIndexTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RIndexTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LHandTrigger", ty:
// "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RHandTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LThumbstick", ty:
// "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "RThumbstick", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "LTouchpad", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "RTouchpad", ty:
// "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "LBatteryPercentRemaining", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam {
// name: "RBatteryPercentRemaining", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LRecenterCount", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "RRecenterCount", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LThumbRestForce", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "RThumbRestForce", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LStylusForce", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RStylusForce",
// ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LIndexTriggerCurl", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RIndexTriggerCurl", ty:
// "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LIndexTriggerSlide", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RIndexTriggerSlide", ty:
// "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__ControllerState5::__OVRPlugin__ControllerState5(
    uint32_t ConnectedControllers, uint32_t Buttons, uint32_t Touches, uint32_t NearTouches, float_t LIndexTrigger, float_t RIndexTrigger, float_t LHandTrigger, float_t RHandTrigger,
    ::GlobalNamespace::__OVRPlugin__Vector2f LThumbstick, ::GlobalNamespace::__OVRPlugin__Vector2f RThumbstick, ::GlobalNamespace::__OVRPlugin__Vector2f LTouchpad,
    ::GlobalNamespace::__OVRPlugin__Vector2f RTouchpad, uint8_t LBatteryPercentRemaining, uint8_t RBatteryPercentRemaining, uint8_t LRecenterCount, uint8_t RRecenterCount, float_t LThumbRestForce,
    float_t RThumbRestForce, float_t LStylusForce, float_t RStylusForce, float_t LIndexTriggerCurl, float_t RIndexTriggerCurl, float_t LIndexTriggerSlide, float_t RIndexTriggerSlide) noexcept {
  this->ConnectedControllers = ConnectedControllers;
  this->Buttons = Buttons;
  this->Touches = Touches;
  this->NearTouches = NearTouches;
  this->LIndexTrigger = LIndexTrigger;
  this->RIndexTrigger = RIndexTrigger;
  this->LHandTrigger = LHandTrigger;
  this->RHandTrigger = RHandTrigger;
  this->LThumbstick = LThumbstick;
  this->RThumbstick = RThumbstick;
  this->LTouchpad = LTouchpad;
  this->RTouchpad = RTouchpad;
  this->LBatteryPercentRemaining = LBatteryPercentRemaining;
  this->RBatteryPercentRemaining = RBatteryPercentRemaining;
  this->LRecenterCount = LRecenterCount;
  this->RRecenterCount = RRecenterCount;
  this->LThumbRestForce = LThumbRestForce;
  this->RThumbRestForce = RThumbRestForce;
  this->LStylusForce = LStylusForce;
  this->RStylusForce = RStylusForce;
  this->LIndexTriggerCurl = LIndexTriggerCurl;
  this->RIndexTriggerCurl = RIndexTriggerCurl;
  this->LIndexTriggerSlide = LIndexTriggerSlide;
  this->RIndexTriggerSlide = RIndexTriggerSlide;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__ControllerState5::__OVRPlugin__ControllerState5() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__ControllerState4._ctor
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__ControllerState4::*)(::GlobalNamespace::__OVRPlugin__ControllerState2)>(
    &::GlobalNamespace::__OVRPlugin__ControllerState4::_ctor)> {
  constexpr static std::size_t size = 0x6c;
  constexpr static std::size_t addrs = 0x276cb80;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__ControllerState4>::get(), ".ctor", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ControllerState2>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__ControllerState4::_ctor(::GlobalNamespace::__OVRPlugin__ControllerState2 cs) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__ControllerState4>::get(), ".ctor", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ControllerState2>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(this, ___internal_method, cs);
}
// Ctor Parameters [CppParam { name: "ConnectedControllers", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Buttons", ty: "uint32_t", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Touches", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "NearTouches", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "LIndexTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RIndexTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LHandTrigger", ty:
// "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RHandTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LThumbstick", ty:
// "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "RThumbstick", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "LTouchpad", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "RTouchpad", ty:
// "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "LBatteryPercentRemaining", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam {
// name: "RBatteryPercentRemaining", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LRecenterCount", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "RRecenterCount", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_27", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_26", ty:
// "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_25", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_24", ty: "uint8_t", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "Reserved_23", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_22", ty: "uint8_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "Reserved_21", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_20", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam
// { name: "Reserved_19", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_18", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_17",
// ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_16", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_15", ty: "uint8_t",
// modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_14", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_13", ty: "uint8_t", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "Reserved_12", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_11", ty: "uint8_t", modifiers: "", def_value: Some("{}")
// }, CppParam { name: "Reserved_10", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_09", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "Reserved_08", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_07", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_06", ty:
// "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_05", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_04", ty: "uint8_t", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "Reserved_03", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_02", ty: "uint8_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "Reserved_01", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_00", ty: "uint8_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__ControllerState4::__OVRPlugin__ControllerState4(
    uint32_t ConnectedControllers, uint32_t Buttons, uint32_t Touches, uint32_t NearTouches, float_t LIndexTrigger, float_t RIndexTrigger, float_t LHandTrigger, float_t RHandTrigger,
    ::GlobalNamespace::__OVRPlugin__Vector2f LThumbstick, ::GlobalNamespace::__OVRPlugin__Vector2f RThumbstick, ::GlobalNamespace::__OVRPlugin__Vector2f LTouchpad,
    ::GlobalNamespace::__OVRPlugin__Vector2f RTouchpad, uint8_t LBatteryPercentRemaining, uint8_t RBatteryPercentRemaining, uint8_t LRecenterCount, uint8_t RRecenterCount, uint8_t Reserved_27,
    uint8_t Reserved_26, uint8_t Reserved_25, uint8_t Reserved_24, uint8_t Reserved_23, uint8_t Reserved_22, uint8_t Reserved_21, uint8_t Reserved_20, uint8_t Reserved_19, uint8_t Reserved_18,
    uint8_t Reserved_17, uint8_t Reserved_16, uint8_t Reserved_15, uint8_t Reserved_14, uint8_t Reserved_13, uint8_t Reserved_12, uint8_t Reserved_11, uint8_t Reserved_10, uint8_t Reserved_09,
    uint8_t Reserved_08, uint8_t Reserved_07, uint8_t Reserved_06, uint8_t Reserved_05, uint8_t Reserved_04, uint8_t Reserved_03, uint8_t Reserved_02, uint8_t Reserved_01,
    uint8_t Reserved_00) noexcept {
  this->ConnectedControllers = ConnectedControllers;
  this->Buttons = Buttons;
  this->Touches = Touches;
  this->NearTouches = NearTouches;
  this->LIndexTrigger = LIndexTrigger;
  this->RIndexTrigger = RIndexTrigger;
  this->LHandTrigger = LHandTrigger;
  this->RHandTrigger = RHandTrigger;
  this->LThumbstick = LThumbstick;
  this->RThumbstick = RThumbstick;
  this->LTouchpad = LTouchpad;
  this->RTouchpad = RTouchpad;
  this->LBatteryPercentRemaining = LBatteryPercentRemaining;
  this->RBatteryPercentRemaining = RBatteryPercentRemaining;
  this->LRecenterCount = LRecenterCount;
  this->RRecenterCount = RRecenterCount;
  this->Reserved_27 = Reserved_27;
  this->Reserved_26 = Reserved_26;
  this->Reserved_25 = Reserved_25;
  this->Reserved_24 = Reserved_24;
  this->Reserved_23 = Reserved_23;
  this->Reserved_22 = Reserved_22;
  this->Reserved_21 = Reserved_21;
  this->Reserved_20 = Reserved_20;
  this->Reserved_19 = Reserved_19;
  this->Reserved_18 = Reserved_18;
  this->Reserved_17 = Reserved_17;
  this->Reserved_16 = Reserved_16;
  this->Reserved_15 = Reserved_15;
  this->Reserved_14 = Reserved_14;
  this->Reserved_13 = Reserved_13;
  this->Reserved_12 = Reserved_12;
  this->Reserved_11 = Reserved_11;
  this->Reserved_10 = Reserved_10;
  this->Reserved_09 = Reserved_09;
  this->Reserved_08 = Reserved_08;
  this->Reserved_07 = Reserved_07;
  this->Reserved_06 = Reserved_06;
  this->Reserved_05 = Reserved_05;
  this->Reserved_04 = Reserved_04;
  this->Reserved_03 = Reserved_03;
  this->Reserved_02 = Reserved_02;
  this->Reserved_01 = Reserved_01;
  this->Reserved_00 = Reserved_00;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__ControllerState4::__OVRPlugin__ControllerState4() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__ControllerState2._ctor
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__ControllerState2::*)(::GlobalNamespace::__OVRPlugin__ControllerState)>(
    &::GlobalNamespace::__OVRPlugin__ControllerState2::_ctor)> {
  constexpr static std::size_t size = 0x58;
  constexpr static std::size_t addrs = 0x276cbec;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__ControllerState2>::get(), ".ctor", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ControllerState>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__ControllerState2::_ctor(::GlobalNamespace::__OVRPlugin__ControllerState cs) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__ControllerState2>::get(), ".ctor", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ControllerState>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(this, ___internal_method, cs);
}
// Ctor Parameters [CppParam { name: "ConnectedControllers", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Buttons", ty: "uint32_t", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Touches", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "NearTouches", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "LIndexTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RIndexTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LHandTrigger", ty:
// "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RHandTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LThumbstick", ty:
// "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "RThumbstick", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "LTouchpad", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "RTouchpad", ty:
// "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__ControllerState2::__OVRPlugin__ControllerState2(uint32_t ConnectedControllers, uint32_t Buttons, uint32_t Touches, uint32_t NearTouches,
                                                                                          float_t LIndexTrigger, float_t RIndexTrigger, float_t LHandTrigger, float_t RHandTrigger,
                                                                                          ::GlobalNamespace::__OVRPlugin__Vector2f LThumbstick, ::GlobalNamespace::__OVRPlugin__Vector2f RThumbstick,
                                                                                          ::GlobalNamespace::__OVRPlugin__Vector2f LTouchpad,
                                                                                          ::GlobalNamespace::__OVRPlugin__Vector2f RTouchpad) noexcept {
  this->ConnectedControllers = ConnectedControllers;
  this->Buttons = Buttons;
  this->Touches = Touches;
  this->NearTouches = NearTouches;
  this->LIndexTrigger = LIndexTrigger;
  this->RIndexTrigger = RIndexTrigger;
  this->LHandTrigger = LHandTrigger;
  this->RHandTrigger = RHandTrigger;
  this->LThumbstick = LThumbstick;
  this->RThumbstick = RThumbstick;
  this->LTouchpad = LTouchpad;
  this->RTouchpad = RTouchpad;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__ControllerState2::__OVRPlugin__ControllerState2() {}
// Ctor Parameters [CppParam { name: "ConnectedControllers", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Buttons", ty: "uint32_t", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Touches", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "NearTouches", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "LIndexTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RIndexTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LHandTrigger", ty:
// "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RHandTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LThumbstick", ty:
// "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "RThumbstick", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value:
// Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__ControllerState::__OVRPlugin__ControllerState(uint32_t ConnectedControllers, uint32_t Buttons, uint32_t Touches, uint32_t NearTouches, float_t LIndexTrigger,
                                                                                        float_t RIndexTrigger, float_t LHandTrigger, float_t RHandTrigger,
                                                                                        ::GlobalNamespace::__OVRPlugin__Vector2f LThumbstick,
                                                                                        ::GlobalNamespace::__OVRPlugin__Vector2f RThumbstick) noexcept {
  this->ConnectedControllers = ConnectedControllers;
  this->Buttons = Buttons;
  this->Touches = Touches;
  this->NearTouches = NearTouches;
  this->LIndexTrigger = LIndexTrigger;
  this->RIndexTrigger = RIndexTrigger;
  this->LHandTrigger = LHandTrigger;
  this->RHandTrigger = RHandTrigger;
  this->LThumbstick = LThumbstick;
  this->RThumbstick = RThumbstick;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__ControllerState::__OVRPlugin__ControllerState() {}
// Ctor Parameters [CppParam { name: "Samples", ty: "void*", modifiers: "", def_value: Some("{}") }, CppParam { name: "SamplesCount", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HapticsBuffer::__OVRPlugin__HapticsBuffer(void* Samples, int32_t SamplesCount) noexcept {
  this->Samples = Samples;
  this->SamplesCount = SamplesCount;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__HapticsBuffer::__OVRPlugin__HapticsBuffer() {}
// Ctor Parameters [CppParam { name: "SamplesAvailable", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "SamplesQueued", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HapticsState::__OVRPlugin__HapticsState(int32_t SamplesAvailable, int32_t SamplesQueued) noexcept {
  this->SamplesAvailable = SamplesAvailable;
  this->SamplesQueued = SamplesQueued;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__HapticsState::__OVRPlugin__HapticsState() {}
// Ctor Parameters [CppParam { name: "SampleRateHz", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "SampleSizeInBytes", ty: "int32_t", modifiers: "", def_value: Some("{}") },
// CppParam { name: "MinimumSafeSamplesQueued", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "MinimumBufferSamplesCount", ty: "int32_t", modifiers: "", def_value: Some("{}")
// }, CppParam { name: "OptimalBufferSamplesCount", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "MaximumBufferSamplesCount", ty: "int32_t", modifiers: "", def_value:
// Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HapticsDesc::__OVRPlugin__HapticsDesc(int32_t SampleRateHz, int32_t SampleSizeInBytes, int32_t MinimumSafeSamplesQueued, int32_t MinimumBufferSamplesCount,
                                                                                int32_t OptimalBufferSamplesCount, int32_t MaximumBufferSamplesCount) noexcept {
  this->SampleRateHz = SampleRateHz;
  this->SampleSizeInBytes = SampleSizeInBytes;
  this->MinimumSafeSamplesQueued = MinimumSafeSamplesQueued;
  this->MinimumBufferSamplesCount = MinimumBufferSamplesCount;
  this->OptimalBufferSamplesCount = OptimalBufferSamplesCount;
  this->MaximumBufferSamplesCount = MaximumBufferSamplesCount;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__HapticsDesc::__OVRPlugin__HapticsDesc() {}
// Ctor Parameters [CppParam { name: "Duration", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "AmplitudeCount", ty: "uint32_t", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Amplitudes", ty: "void*", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration::__OVRPlugin__HapticsAmplitudeEnvelopeVibration(float_t Duration, uint32_t AmplitudeCount, void* Amplitudes) noexcept {
  this->Duration = Duration;
  this->AmplitudeCount = AmplitudeCount;
  this->Amplitudes = Amplitudes;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration::__OVRPlugin__HapticsAmplitudeEnvelopeVibration() {}
// Ctor Parameters [CppParam { name: "BufferSize", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Buffer", ty: "void*", modifiers: "", def_value: Some("{}") }, CppParam {
// name: "SampleRateHz", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Append", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam
// { name: "SamplesConsumed", ty: "void*", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HapticsPcmVibration::__OVRPlugin__HapticsPcmVibration(uint32_t BufferSize, void* Buffer, float_t SampleRateHz, ::GlobalNamespace::__OVRPlugin__Bool Append,
                                                                                                void* SamplesConsumed) noexcept {
  this->BufferSize = BufferSize;
  this->Buffer = Buffer;
  this->SampleRateHz = SampleRateHz;
  this->Append = Append;
  this->SamplesConsumed = SamplesConsumed;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__HapticsPcmVibration::__OVRPlugin__HapticsPcmVibration() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HapticsConstants::__OVRPlugin__HapticsConstants(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__HapticsConstants::__OVRPlugin__HapticsConstants() {}
constexpr ::GlobalNamespace::__OVRPlugin__HapticsConstants GlobalNamespace::__OVRPlugin__HapticsConstants::MaxSamples{ static_cast<int32_t>(0xfa0) };
// Ctor Parameters [CppParam { name: "HmdVsyncIndex", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "AppFrameIndex", ty: "int32_t", modifiers: "", def_value: Some("{}") },
// CppParam { name: "AppDroppedFrameCount", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "AppMotionToPhotonLatency", ty: "float_t", modifiers: "", def_value: Some("{}") },
// CppParam { name: "AppQueueAheadTime", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "AppCpuElapsedTime", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam {
// name: "AppGpuElapsedTime", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "CompositorFrameIndex", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "CompositorDroppedFrameCount", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "CompositorLatency", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "CompositorCpuElapsedTime", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "CompositorGpuElapsedTime", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam {
// name: "CompositorCpuStartToGpuEndElapsedTime", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "CompositorGpuEndToVsyncElapsedTime", ty: "float_t", modifiers: "", def_value:
// Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__OVRPlugin__AppPerfFrameStats(int32_t HmdVsyncIndex, int32_t AppFrameIndex, int32_t AppDroppedFrameCount,
                                                                                            float_t AppMotionToPhotonLatency, float_t AppQueueAheadTime, float_t AppCpuElapsedTime,
                                                                                            float_t AppGpuElapsedTime, int32_t CompositorFrameIndex, int32_t CompositorDroppedFrameCount,
                                                                                            float_t CompositorLatency, float_t CompositorCpuElapsedTime, float_t CompositorGpuElapsedTime,
                                                                                            float_t CompositorCpuStartToGpuEndElapsedTime, float_t CompositorGpuEndToVsyncElapsedTime) noexcept {
  this->HmdVsyncIndex = HmdVsyncIndex;
  this->AppFrameIndex = AppFrameIndex;
  this->AppDroppedFrameCount = AppDroppedFrameCount;
  this->AppMotionToPhotonLatency = AppMotionToPhotonLatency;
  this->AppQueueAheadTime = AppQueueAheadTime;
  this->AppCpuElapsedTime = AppCpuElapsedTime;
  this->AppGpuElapsedTime = AppGpuElapsedTime;
  this->CompositorFrameIndex = CompositorFrameIndex;
  this->CompositorDroppedFrameCount = CompositorDroppedFrameCount;
  this->CompositorLatency = CompositorLatency;
  this->CompositorCpuElapsedTime = CompositorCpuElapsedTime;
  this->CompositorGpuElapsedTime = CompositorGpuElapsedTime;
  this->CompositorCpuStartToGpuEndElapsedTime = CompositorCpuStartToGpuEndElapsedTime;
  this->CompositorGpuEndToVsyncElapsedTime = CompositorGpuEndToVsyncElapsedTime;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__OVRPlugin__AppPerfFrameStats() {}
// Ctor Parameters [CppParam { name: "FrameStats", ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__AppPerfFrameStats,::Array<::GlobalNamespace::__OVRPlugin__AppPerfFrameStats>*>", modifiers: "",
// def_value: Some("nullptr") }, CppParam { name: "FrameStatsCount", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "AnyFrameStatsDropped", ty:
// "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "AdaptiveGpuPerformanceScale", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__AppPerfStats::__OVRPlugin__AppPerfStats(
    ::ArrayW<::GlobalNamespace::__OVRPlugin__AppPerfFrameStats, ::Array<::GlobalNamespace::__OVRPlugin__AppPerfFrameStats>*> FrameStats, int32_t FrameStatsCount,
    ::GlobalNamespace::__OVRPlugin__Bool AnyFrameStatsDropped, float_t AdaptiveGpuPerformanceScale) noexcept {
  this->FrameStats = FrameStats;
  this->FrameStatsCount = FrameStatsCount;
  this->AnyFrameStatsDropped = AnyFrameStatsDropped;
  this->AdaptiveGpuPerformanceScale = AdaptiveGpuPerformanceScale;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__AppPerfStats::__OVRPlugin__AppPerfStats() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Sizei.Equals
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (::GlobalNamespace::__OVRPlugin__Sizei::*)(::GlobalNamespace::__OVRPlugin__Sizei)>(
    &::GlobalNamespace::__OVRPlugin__Sizei::Equals)> {
  constexpr static std::size_t size = 0x28;
  constexpr static std::size_t addrs = 0x276cc44;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizei>::get(), "Equals", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Sizei>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Sizei.Equals
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (::GlobalNamespace::__OVRPlugin__Sizei::*)(::System::Object*)>(&::GlobalNamespace::__OVRPlugin__Sizei::Equals)> {
  constexpr static std::size_t size = 0x88;
  constexpr static std::size_t addrs = 0x276cc6c;

  inline static ::MethodInfo const* methodInfo() {

    static auto* ___internal_method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizei>::get(),
                                                                                     ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizei>::get(), 0));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Sizei.GetHashCode
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (::GlobalNamespace::__OVRPlugin__Sizei::*)()>(&::GlobalNamespace::__OVRPlugin__Sizei::GetHashCode)> {
  constexpr static std::size_t size = 0x14;
  constexpr static std::size_t addrs = 0x276ccf4;

  inline static ::MethodInfo const* methodInfo() {

    static auto* ___internal_method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizei>::get(),
                                                                                     ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizei>::get(), 2));
    return ___internal_method;
  }
};
/// @brief Convert operator to "::System::IEquatable_1<::GlobalNamespace::__OVRPlugin__Sizei>"
constexpr GlobalNamespace::__OVRPlugin__Sizei::operator ::System::IEquatable_1<::GlobalNamespace::__OVRPlugin__Sizei>*() {
  return static_cast<::System::IEquatable_1<::GlobalNamespace::__OVRPlugin__Sizei>*>(static_cast<void*>(::cordl_internals::Box(this)));
}
inline void GlobalNamespace::__OVRPlugin__Sizei::setStaticF_zero(::GlobalNamespace::__OVRPlugin__Sizei value) {
  ::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__Sizei, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizei>::get>(
      std::forward<::GlobalNamespace::__OVRPlugin__Sizei>(value));
}
inline ::GlobalNamespace::__OVRPlugin__Sizei GlobalNamespace::__OVRPlugin__Sizei::getStaticF_zero() {
  return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__Sizei, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizei>::get>();
}
inline bool GlobalNamespace::__OVRPlugin__Sizei::Equals(::GlobalNamespace::__OVRPlugin__Sizei other) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizei>::get(), "Equals", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Sizei>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(this, ___internal_method, other);
}
inline bool GlobalNamespace::__OVRPlugin__Sizei::Equals(::System::Object* obj) {
  auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(il2cpp_functions::object_get_class(reinterpret_cast<Il2CppObject*>(this)),
                                                                             ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizei>::get(), 0)));
  return ::cordl_internals::RunMethodRethrow<bool, false>(this, ___internal_method, obj);
}
inline int32_t GlobalNamespace::__OVRPlugin__Sizei::GetHashCode() {
  auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(il2cpp_functions::object_get_class(reinterpret_cast<Il2CppObject*>(this)),
                                                                             ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizei>::get(), 2)));
  return ::cordl_internals::RunMethodRethrow<int32_t, false>(this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "w", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "h", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Sizei::__OVRPlugin__Sizei(int32_t w, int32_t h) noexcept {
  this->w = w;
  this->h = h;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Sizei::__OVRPlugin__Sizei() {}
inline void GlobalNamespace::__OVRPlugin__Sizef::setStaticF_zero(::GlobalNamespace::__OVRPlugin__Sizef value) {
  ::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__Sizef, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizef>::get>(
      std::forward<::GlobalNamespace::__OVRPlugin__Sizef>(value));
}
inline ::GlobalNamespace::__OVRPlugin__Sizef GlobalNamespace::__OVRPlugin__Sizef::getStaticF_zero() {
  return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__Sizef, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizef>::get>();
}
// Ctor Parameters [CppParam { name: "w", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "h", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Sizef::__OVRPlugin__Sizef(float_t w, float_t h) noexcept {
  this->w = w;
  this->h = h;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Sizef::__OVRPlugin__Sizef() {}
inline void GlobalNamespace::__OVRPlugin__Size3f::setStaticF_zero(::GlobalNamespace::__OVRPlugin__Size3f value) {
  ::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__Size3f, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Size3f>::get>(
      std::forward<::GlobalNamespace::__OVRPlugin__Size3f>(value));
}
inline ::GlobalNamespace::__OVRPlugin__Size3f GlobalNamespace::__OVRPlugin__Size3f::getStaticF_zero() {
  return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__Size3f, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Size3f>::get>();
}
// Ctor Parameters [CppParam { name: "w", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "h", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "d", ty:
// "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Size3f::__OVRPlugin__Size3f(float_t w, float_t h, float_t d) noexcept {
  this->w = w;
  this->h = h;
  this->d = d;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Size3f::__OVRPlugin__Size3f() {}
// Ctor Parameters [CppParam { name: "x", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "y", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Vector2i::__OVRPlugin__Vector2i(int32_t x, int32_t y) noexcept {
  this->x = x;
  this->y = y;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Vector2i::__OVRPlugin__Vector2i() {}
// Ctor Parameters [CppParam { name: "Pos", ty: "::GlobalNamespace::__OVRPlugin__Vector2i", modifiers: "", def_value: Some("{}") }, CppParam { name: "Size", ty:
// "::GlobalNamespace::__OVRPlugin__Sizei", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Recti::__OVRPlugin__Recti(::GlobalNamespace::__OVRPlugin__Vector2i Pos, ::GlobalNamespace::__OVRPlugin__Sizei Size) noexcept {
  this->Pos = Pos;
  this->Size = Size;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Recti::__OVRPlugin__Recti() {}
// Ctor Parameters [CppParam { name: "Pos", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "Size", ty:
// "::GlobalNamespace::__OVRPlugin__Sizef", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Rectf::__OVRPlugin__Rectf(::GlobalNamespace::__OVRPlugin__Vector2f Pos, ::GlobalNamespace::__OVRPlugin__Sizef Size) noexcept {
  this->Pos = Pos;
  this->Size = Size;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Rectf::__OVRPlugin__Rectf() {}
// Ctor Parameters [CppParam { name: "Pos", ty: "::GlobalNamespace::__OVRPlugin__Vector3f", modifiers: "", def_value: Some("{}") }, CppParam { name: "Size", ty:
// "::GlobalNamespace::__OVRPlugin__Size3f", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Boundsf::__OVRPlugin__Boundsf(::GlobalNamespace::__OVRPlugin__Vector3f Pos, ::GlobalNamespace::__OVRPlugin__Size3f Size) noexcept {
  this->Pos = Pos;
  this->Size = Size;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Boundsf::__OVRPlugin__Boundsf() {}
// Ctor Parameters [CppParam { name: "zNear", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "zFar", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "fovX", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "fovY", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Frustumf::__OVRPlugin__Frustumf(float_t zNear, float_t zFar, float_t fovX, float_t fovY) noexcept {
  this->zNear = zNear;
  this->zFar = zFar;
  this->fovX = fovX;
  this->fovY = fovY;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Frustumf::__OVRPlugin__Frustumf() {}
// Ctor Parameters [CppParam { name: "UpTan", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "DownTan", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "LeftTan", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RightTan", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Fovf::__OVRPlugin__Fovf(float_t UpTan, float_t DownTan, float_t LeftTan, float_t RightTan) noexcept {
  this->UpTan = UpTan;
  this->DownTan = DownTan;
  this->LeftTan = LeftTan;
  this->RightTan = RightTan;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Fovf::__OVRPlugin__Fovf() {}
// Ctor Parameters [CppParam { name: "zNear", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "zFar", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "Fov", ty: "::GlobalNamespace::__OVRPlugin__Fovf", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Frustumf2::__OVRPlugin__Frustumf2(float_t zNear, float_t zFar, ::GlobalNamespace::__OVRPlugin__Fovf Fov) noexcept {
  this->zNear = zNear;
  this->zFar = zFar;
  this->Fov = Fov;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Frustumf2::__OVRPlugin__Frustumf2() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__BoundaryType::__OVRPlugin__BoundaryType(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__BoundaryType::__OVRPlugin__BoundaryType() {}
constexpr ::GlobalNamespace::__OVRPlugin__BoundaryType GlobalNamespace::__OVRPlugin__BoundaryType::OuterBoundary{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__BoundaryType GlobalNamespace::__OVRPlugin__BoundaryType::PlayArea{ static_cast<int32_t>(0x100) };
// Ctor Parameters [CppParam { name: "IsTriggering", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "ClosestDistance", ty: "float_t", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "ClosestPoint", ty: "::GlobalNamespace::__OVRPlugin__Vector3f", modifiers: "", def_value: Some("{}") }, CppParam { name: "ClosestPointNormal", ty:
// "::GlobalNamespace::__OVRPlugin__Vector3f", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__BoundaryTestResult::__OVRPlugin__BoundaryTestResult(::GlobalNamespace::__OVRPlugin__Bool IsTriggering, float_t ClosestDistance,
                                                                                              ::GlobalNamespace::__OVRPlugin__Vector3f ClosestPoint,
                                                                                              ::GlobalNamespace::__OVRPlugin__Vector3f ClosestPointNormal) noexcept {
  this->IsTriggering = IsTriggering;
  this->ClosestDistance = ClosestDistance;
  this->ClosestPoint = ClosestPoint;
  this->ClosestPointNormal = ClosestPointNormal;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__BoundaryTestResult::__OVRPlugin__BoundaryTestResult() {}
// Ctor Parameters [CppParam { name: "BoundaryType", ty: "::GlobalNamespace::__OVRPlugin__BoundaryType", modifiers: "", def_value: Some("{}") }, CppParam { name: "Points", ty:
// "::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>", modifiers: "", def_value: Some("nullptr") }, CppParam { name: "PointsCount", ty: "int32_t",
// modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__BoundaryGeometry::__OVRPlugin__BoundaryGeometry(::GlobalNamespace::__OVRPlugin__BoundaryType BoundaryType,
                                                                                          ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f, ::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*> Points,
                                                                                          int32_t PointsCount) noexcept {
  this->BoundaryType = BoundaryType;
  this->Points = Points;
  this->PointsCount = PointsCount;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__BoundaryGeometry::__OVRPlugin__BoundaryGeometry() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Colorf.ToString
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (::GlobalNamespace::__OVRPlugin__Colorf::*)()>(&::GlobalNamespace::__OVRPlugin__Colorf::ToString)> {
  constexpr static std::size_t size = 0x1e4;
  constexpr static std::size_t addrs = 0x276cde4;

  inline static ::MethodInfo const* methodInfo() {

    static auto* ___internal_method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Colorf>::get(),
                                                                                     ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Colorf>::get(), 3));
    return ___internal_method;
  }
};
inline ::StringW GlobalNamespace::__OVRPlugin__Colorf::ToString() {
  auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(il2cpp_functions::object_get_class(reinterpret_cast<Il2CppObject*>(this)),
                                                                             ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Colorf>::get(), 3)));
  return ::cordl_internals::RunMethodRethrow<::StringW, false>(this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "r", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "g", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "b", ty:
// "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "a", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Colorf::__OVRPlugin__Colorf(float_t r, float_t g, float_t b, float_t a) noexcept {
  this->r = r;
  this->g = g;
  this->b = b;
  this->a = a;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Colorf::__OVRPlugin__Colorf() {}
// Ctor Parameters [CppParam { name: "IsValid", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "LastChangedTimeSeconds", ty: "double_t",
// modifiers: "", def_value: Some("{}") }, CppParam { name: "FOVPort", ty: "::GlobalNamespace::__OVRPlugin__Fovf", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "VirtualNearPlaneDistanceMeters", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "VirtualFarPlaneDistanceMeters", ty: "float_t", modifiers: "", def_value: Some("{}") },
// CppParam { name: "ImageSensorPixelResolution", ty: "::GlobalNamespace::__OVRPlugin__Sizei", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__CameraIntrinsics::__OVRPlugin__CameraIntrinsics(::GlobalNamespace::__OVRPlugin__Bool IsValid, double_t LastChangedTimeSeconds,
                                                                                          ::GlobalNamespace::__OVRPlugin__Fovf FOVPort, float_t VirtualNearPlaneDistanceMeters,
                                                                                          float_t VirtualFarPlaneDistanceMeters,
                                                                                          ::GlobalNamespace::__OVRPlugin__Sizei ImageSensorPixelResolution) noexcept {
  this->IsValid = IsValid;
  this->LastChangedTimeSeconds = LastChangedTimeSeconds;
  this->FOVPort = FOVPort;
  this->VirtualNearPlaneDistanceMeters = VirtualNearPlaneDistanceMeters;
  this->VirtualFarPlaneDistanceMeters = VirtualFarPlaneDistanceMeters;
  this->ImageSensorPixelResolution = ImageSensorPixelResolution;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__CameraIntrinsics::__OVRPlugin__CameraIntrinsics() {}
// Ctor Parameters [CppParam { name: "IsValid", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "LastChangedTimeSeconds", ty: "double_t",
// modifiers: "", def_value: Some("{}") }, CppParam { name: "CameraStatusData", ty: "::GlobalNamespace::__OVRPlugin__CameraStatus", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "AttachedToNode", ty: "::GlobalNamespace::__OVRPlugin__Node", modifiers: "", def_value: Some("{}") }, CppParam { name: "RelativePose", ty: "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "",
// def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__CameraExtrinsics::__OVRPlugin__CameraExtrinsics(::GlobalNamespace::__OVRPlugin__Bool IsValid, double_t LastChangedTimeSeconds,
                                                                                          ::GlobalNamespace::__OVRPlugin__CameraStatus CameraStatusData,
                                                                                          ::GlobalNamespace::__OVRPlugin__Node AttachedToNode,
                                                                                          ::GlobalNamespace::__OVRPlugin__Posef RelativePose) noexcept {
  this->IsValid = IsValid;
  this->LastChangedTimeSeconds = LastChangedTimeSeconds;
  this->CameraStatusData = CameraStatusData;
  this->AttachedToNode = AttachedToNode;
  this->RelativePose = RelativePose;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__CameraExtrinsics::__OVRPlugin__CameraExtrinsics() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__LayerLayout::__OVRPlugin__LayerLayout(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__LayerLayout::__OVRPlugin__LayerLayout() {}
constexpr ::GlobalNamespace::__OVRPlugin__LayerLayout GlobalNamespace::__OVRPlugin__LayerLayout::Stereo{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__LayerLayout GlobalNamespace::__OVRPlugin__LayerLayout::Mono{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__LayerLayout GlobalNamespace::__OVRPlugin__LayerLayout::DoubleWide{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__LayerLayout GlobalNamespace::__OVRPlugin__LayerLayout::Array{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__LayerLayout GlobalNamespace::__OVRPlugin__LayerLayout::EnumSize{ static_cast<int32_t>(0xf) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__LayerFlags::__OVRPlugin__LayerFlags(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__LayerFlags::__OVRPlugin__LayerFlags() {}
constexpr ::GlobalNamespace::__OVRPlugin__LayerFlags GlobalNamespace::__OVRPlugin__LayerFlags::Static{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__LayerFlags GlobalNamespace::__OVRPlugin__LayerFlags::LoadingScreen{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__LayerFlags GlobalNamespace::__OVRPlugin__LayerFlags::SymmetricFov{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__LayerFlags GlobalNamespace::__OVRPlugin__LayerFlags::TextureOriginAtBottomLeft{ static_cast<int32_t>(0x8) };
constexpr ::GlobalNamespace::__OVRPlugin__LayerFlags GlobalNamespace::__OVRPlugin__LayerFlags::ChromaticAberrationCorrection{ static_cast<int32_t>(0x10) };
constexpr ::GlobalNamespace::__OVRPlugin__LayerFlags GlobalNamespace::__OVRPlugin__LayerFlags::NoAllocation{ static_cast<int32_t>(0x20) };
constexpr ::GlobalNamespace::__OVRPlugin__LayerFlags GlobalNamespace::__OVRPlugin__LayerFlags::ProtectedContent{ static_cast<int32_t>(0x40) };
constexpr ::GlobalNamespace::__OVRPlugin__LayerFlags GlobalNamespace::__OVRPlugin__LayerFlags::AndroidSurfaceSwapChain{ static_cast<int32_t>(0x80) };
constexpr ::GlobalNamespace::__OVRPlugin__LayerFlags GlobalNamespace::__OVRPlugin__LayerFlags::BicubicFiltering{ static_cast<int32_t>(0x4000) };
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__LayerDesc.ToString
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (::GlobalNamespace::__OVRPlugin__LayerDesc::*)()>(&::GlobalNamespace::__OVRPlugin__LayerDesc::ToString)> {
  constexpr static std::size_t size = 0x400;
  constexpr static std::size_t addrs = 0x276cfc8;

  inline static ::MethodInfo const* methodInfo() {

    static auto* ___internal_method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LayerDesc>::get(),
                                                                                     ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LayerDesc>::get(), 3));
    return ___internal_method;
  }
};
inline ::StringW GlobalNamespace::__OVRPlugin__LayerDesc::ToString() {
  auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(il2cpp_functions::object_get_class(reinterpret_cast<Il2CppObject*>(this)),
                                                                             ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LayerDesc>::get(), 3)));
  return ::cordl_internals::RunMethodRethrow<::StringW, false>(this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "Shape", ty: "::GlobalNamespace::__OVRPlugin__OverlayShape", modifiers: "", def_value: Some("{}") }, CppParam { name: "Layout", ty:
// "::GlobalNamespace::__OVRPlugin__LayerLayout", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureSize", ty: "::GlobalNamespace::__OVRPlugin__Sizei", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "MipLevels", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "SampleCount", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam {
// name: "Format", ty: "::GlobalNamespace::__OVRPlugin__EyeTextureFormat", modifiers: "", def_value: Some("{}") }, CppParam { name: "LayerFlags", ty: "int32_t", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Fov", ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__Fovf,::Array<::GlobalNamespace::__OVRPlugin__Fovf>*>", modifiers: "", def_value: Some("nullptr") }, CppParam { name:
// "VisibleRect", ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__Rectf,::Array<::GlobalNamespace::__OVRPlugin__Rectf>*>", modifiers: "", def_value: Some("nullptr") }, CppParam { name:
// "MaxViewportSize", ty: "::GlobalNamespace::__OVRPlugin__Sizei", modifiers: "", def_value: Some("{}") }, CppParam { name: "DepthFormat", ty: "::GlobalNamespace::__OVRPlugin__EyeTextureFormat",
// modifiers: "", def_value: Some("{}") }, CppParam { name: "MotionVectorFormat", ty: "::GlobalNamespace::__OVRPlugin__EyeTextureFormat", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "MotionVectorDepthFormat", ty: "::GlobalNamespace::__OVRPlugin__EyeTextureFormat", modifiers: "", def_value: Some("{}") }, CppParam { name: "MotionVectorTextureSize", ty:
// "::GlobalNamespace::__OVRPlugin__Sizei", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__LayerDesc::__OVRPlugin__LayerDesc(
    ::GlobalNamespace::__OVRPlugin__OverlayShape Shape, ::GlobalNamespace::__OVRPlugin__LayerLayout Layout, ::GlobalNamespace::__OVRPlugin__Sizei TextureSize, int32_t MipLevels, int32_t SampleCount,
    ::GlobalNamespace::__OVRPlugin__EyeTextureFormat Format, int32_t LayerFlags, ::ArrayW<::GlobalNamespace::__OVRPlugin__Fovf, ::Array<::GlobalNamespace::__OVRPlugin__Fovf>*> Fov,
    ::ArrayW<::GlobalNamespace::__OVRPlugin__Rectf, ::Array<::GlobalNamespace::__OVRPlugin__Rectf>*> VisibleRect, ::GlobalNamespace::__OVRPlugin__Sizei MaxViewportSize,
    ::GlobalNamespace::__OVRPlugin__EyeTextureFormat DepthFormat, ::GlobalNamespace::__OVRPlugin__EyeTextureFormat MotionVectorFormat,
    ::GlobalNamespace::__OVRPlugin__EyeTextureFormat MotionVectorDepthFormat, ::GlobalNamespace::__OVRPlugin__Sizei MotionVectorTextureSize) noexcept {
  this->Shape = Shape;
  this->Layout = Layout;
  this->TextureSize = TextureSize;
  this->MipLevels = MipLevels;
  this->SampleCount = SampleCount;
  this->Format = Format;
  this->LayerFlags = LayerFlags;
  this->Fov = Fov;
  this->VisibleRect = VisibleRect;
  this->MaxViewportSize = MaxViewportSize;
  this->DepthFormat = DepthFormat;
  this->MotionVectorFormat = MotionVectorFormat;
  this->MotionVectorDepthFormat = MotionVectorDepthFormat;
  this->MotionVectorTextureSize = MotionVectorTextureSize;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__LayerDesc::__OVRPlugin__LayerDesc() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__LayerDescInternal._ctor
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__LayerDescInternal::*)(::GlobalNamespace::__OVRPlugin__LayerDesc)>(
    &::GlobalNamespace::__OVRPlugin__LayerDescInternal::_ctor)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x276d3c8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LayerDescInternal>::get(), ".ctor", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerDesc>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__LayerDescInternal.ToLayerDesc
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__LayerDesc (::GlobalNamespace::__OVRPlugin__LayerDescInternal::*)()>(
    &::GlobalNamespace::__OVRPlugin__LayerDescInternal::ToLayerDesc)> {
  constexpr static std::size_t size = 0x150;
  constexpr static std::size_t addrs = 0x276d4a4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LayerDescInternal>::get(),
                                                                               "ToLayerDesc", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__LayerDescInternal::_ctor(::GlobalNamespace::__OVRPlugin__LayerDesc layerDesc) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LayerDescInternal>::get(), ".ctor", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerDesc>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(this, ___internal_method, layerDesc);
}
inline ::GlobalNamespace::__OVRPlugin__LayerDesc GlobalNamespace::__OVRPlugin__LayerDescInternal::ToLayerDesc() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LayerDescInternal>::get(),
                                                                             "ToLayerDesc", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__LayerDesc, false>(this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "Shape", ty: "::GlobalNamespace::__OVRPlugin__OverlayShape", modifiers: "", def_value: Some("{}") }, CppParam { name: "Layout", ty:
// "::GlobalNamespace::__OVRPlugin__LayerLayout", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureSize", ty: "::GlobalNamespace::__OVRPlugin__Sizei", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "MipLevels", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "SampleCount", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam {
// name: "Format", ty: "::GlobalNamespace::__OVRPlugin__EyeTextureFormat", modifiers: "", def_value: Some("{}") }, CppParam { name: "LayerFlags", ty: "int32_t", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Fov0", ty: "::GlobalNamespace::__OVRPlugin__Fovf", modifiers: "", def_value: Some("{}") }, CppParam { name: "Fov1", ty: "::GlobalNamespace::__OVRPlugin__Fovf", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "VisibleRect0", ty: "::GlobalNamespace::__OVRPlugin__Rectf", modifiers: "", def_value: Some("{}") }, CppParam { name: "VisibleRect1", ty:
// "::GlobalNamespace::__OVRPlugin__Rectf", modifiers: "", def_value: Some("{}") }, CppParam { name: "MaxViewportSize", ty: "::GlobalNamespace::__OVRPlugin__Sizei", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "DepthFormat", ty: "::GlobalNamespace::__OVRPlugin__EyeTextureFormat", modifiers: "", def_value: Some("{}") }, CppParam { name: "MotionVectorFormat", ty:
// "::GlobalNamespace::__OVRPlugin__EyeTextureFormat", modifiers: "", def_value: Some("{}") }, CppParam { name: "MotionVectorDepthFormat", ty: "::GlobalNamespace::__OVRPlugin__EyeTextureFormat",
// modifiers: "", def_value: Some("{}") }, CppParam { name: "MotionVectorTextureSize", ty: "::GlobalNamespace::__OVRPlugin__Sizei", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__LayerDescInternal::__OVRPlugin__LayerDescInternal(
    ::GlobalNamespace::__OVRPlugin__OverlayShape Shape, ::GlobalNamespace::__OVRPlugin__LayerLayout Layout, ::GlobalNamespace::__OVRPlugin__Sizei TextureSize, int32_t MipLevels, int32_t SampleCount,
    ::GlobalNamespace::__OVRPlugin__EyeTextureFormat Format, int32_t LayerFlags, ::GlobalNamespace::__OVRPlugin__Fovf Fov0, ::GlobalNamespace::__OVRPlugin__Fovf Fov1,
    ::GlobalNamespace::__OVRPlugin__Rectf VisibleRect0, ::GlobalNamespace::__OVRPlugin__Rectf VisibleRect1, ::GlobalNamespace::__OVRPlugin__Sizei MaxViewportSize,
    ::GlobalNamespace::__OVRPlugin__EyeTextureFormat DepthFormat, ::GlobalNamespace::__OVRPlugin__EyeTextureFormat MotionVectorFormat,
    ::GlobalNamespace::__OVRPlugin__EyeTextureFormat MotionVectorDepthFormat, ::GlobalNamespace::__OVRPlugin__Sizei MotionVectorTextureSize) noexcept {
  this->Shape = Shape;
  this->Layout = Layout;
  this->TextureSize = TextureSize;
  this->MipLevels = MipLevels;
  this->SampleCount = SampleCount;
  this->Format = Format;
  this->LayerFlags = LayerFlags;
  this->Fov0 = Fov0;
  this->Fov1 = Fov1;
  this->VisibleRect0 = VisibleRect0;
  this->VisibleRect1 = VisibleRect1;
  this->MaxViewportSize = MaxViewportSize;
  this->DepthFormat = DepthFormat;
  this->MotionVectorFormat = MotionVectorFormat;
  this->MotionVectorDepthFormat = MotionVectorDepthFormat;
  this->MotionVectorTextureSize = MotionVectorTextureSize;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__LayerDescInternal::__OVRPlugin__LayerDescInternal() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__BlendFactor::__OVRPlugin__BlendFactor(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__BlendFactor::__OVRPlugin__BlendFactor() {}
constexpr ::GlobalNamespace::__OVRPlugin__BlendFactor GlobalNamespace::__OVRPlugin__BlendFactor::Zero{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__BlendFactor GlobalNamespace::__OVRPlugin__BlendFactor::One{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__BlendFactor GlobalNamespace::__OVRPlugin__BlendFactor::SrcAlpha{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__BlendFactor GlobalNamespace::__OVRPlugin__BlendFactor::OneMinusSrcAlpha{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__BlendFactor GlobalNamespace::__OVRPlugin__BlendFactor::DstAlpha{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__BlendFactor GlobalNamespace::__OVRPlugin__BlendFactor::OneMinusDstAlpha{ static_cast<int32_t>(0x5) };
// Ctor Parameters [CppParam { name: "LayerId", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureStage", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam
// { name: "ViewportRect", ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__Recti,::Array<::GlobalNamespace::__OVRPlugin__Recti>*>", modifiers: "", def_value: Some("nullptr") }, CppParam { name: "Pose",
// ty: "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }, CppParam { name: "LayerSubmitFlags", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__LayerSubmit::__OVRPlugin__LayerSubmit(int32_t LayerId, int32_t TextureStage,
                                                                                ::ArrayW<::GlobalNamespace::__OVRPlugin__Recti, ::Array<::GlobalNamespace::__OVRPlugin__Recti>*> ViewportRect,
                                                                                ::GlobalNamespace::__OVRPlugin__Posef Pose, int32_t LayerSubmitFlags) noexcept {
  this->LayerId = LayerId;
  this->TextureStage = TextureStage;
  this->ViewportRect = ViewportRect;
  this->Pose = Pose;
  this->LayerSubmitFlags = LayerSubmitFlags;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__LayerSubmit::__OVRPlugin__LayerSubmit() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__TrackingConfidence::__OVRPlugin__TrackingConfidence(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__TrackingConfidence::__OVRPlugin__TrackingConfidence() {}
constexpr ::GlobalNamespace::__OVRPlugin__TrackingConfidence GlobalNamespace::__OVRPlugin__TrackingConfidence::Low{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__TrackingConfidence GlobalNamespace::__OVRPlugin__TrackingConfidence::High{ static_cast<int32_t>(0x3f800000) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Hand::__OVRPlugin__Hand(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Hand::__OVRPlugin__Hand() {}
constexpr ::GlobalNamespace::__OVRPlugin__Hand GlobalNamespace::__OVRPlugin__Hand::None{ static_cast<int32_t>(0xffffffff) };
constexpr ::GlobalNamespace::__OVRPlugin__Hand GlobalNamespace::__OVRPlugin__Hand::HandLeft{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__Hand GlobalNamespace::__OVRPlugin__Hand::HandRight{ static_cast<int32_t>(0x1) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HandStatus::__OVRPlugin__HandStatus(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__HandStatus::__OVRPlugin__HandStatus() {}
constexpr ::GlobalNamespace::__OVRPlugin__HandStatus GlobalNamespace::__OVRPlugin__HandStatus::HandTracked{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__HandStatus GlobalNamespace::__OVRPlugin__HandStatus::InputStateValid{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__HandStatus GlobalNamespace::__OVRPlugin__HandStatus::SystemGestureInProgress{ static_cast<int32_t>(0x40) };
constexpr ::GlobalNamespace::__OVRPlugin__HandStatus GlobalNamespace::__OVRPlugin__HandStatus::DominantHand{ static_cast<int32_t>(0x80) };
constexpr ::GlobalNamespace::__OVRPlugin__HandStatus GlobalNamespace::__OVRPlugin__HandStatus::MenuPressed{ static_cast<int32_t>(0x100) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__BoneId::__OVRPlugin__BoneId(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__BoneId::__OVRPlugin__BoneId() {}
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Invalid{ static_cast<int32_t>(0xffffffff) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_Start{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_WristRoot{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_ForearmStub{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_Thumb0{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_Thumb1{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_Thumb2{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_Thumb3{ static_cast<int32_t>(0x5) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_Index1{ static_cast<int32_t>(0x6) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_Index2{ static_cast<int32_t>(0x7) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_Index3{ static_cast<int32_t>(0x8) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_Middle1{ static_cast<int32_t>(0x9) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_Middle2{ static_cast<int32_t>(0xa) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_Middle3{ static_cast<int32_t>(0xb) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_Ring1{ static_cast<int32_t>(0xc) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_Ring2{ static_cast<int32_t>(0xd) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_Ring3{ static_cast<int32_t>(0xe) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_Pinky0{ static_cast<int32_t>(0xf) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_Pinky1{ static_cast<int32_t>(0x10) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_Pinky2{ static_cast<int32_t>(0x11) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_Pinky3{ static_cast<int32_t>(0x12) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_MaxSkinnable{ static_cast<int32_t>(0x13) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_ThumbTip{ static_cast<int32_t>(0x13) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_IndexTip{ static_cast<int32_t>(0x14) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_MiddleTip{ static_cast<int32_t>(0x15) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_RingTip{ static_cast<int32_t>(0x16) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_PinkyTip{ static_cast<int32_t>(0x17) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Hand_End{ static_cast<int32_t>(0x18) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_Start{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_Root{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_Hips{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_SpineLower{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_SpineMiddle{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_SpineUpper{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_Chest{ static_cast<int32_t>(0x5) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_Neck{ static_cast<int32_t>(0x6) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_Head{ static_cast<int32_t>(0x7) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftShoulder{ static_cast<int32_t>(0x8) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftScapula{ static_cast<int32_t>(0x9) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftArmUpper{ static_cast<int32_t>(0xa) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftArmLower{ static_cast<int32_t>(0xb) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandWristTwist{ static_cast<int32_t>(0xc) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightShoulder{ static_cast<int32_t>(0xd) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightScapula{ static_cast<int32_t>(0xe) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightArmUpper{ static_cast<int32_t>(0xf) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightArmLower{ static_cast<int32_t>(0x10) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandWristTwist{ static_cast<int32_t>(0x11) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandPalm{ static_cast<int32_t>(0x12) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandWrist{ static_cast<int32_t>(0x13) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandThumbMetacarpal{ static_cast<int32_t>(0x14) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandThumbProximal{ static_cast<int32_t>(0x15) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandThumbDistal{ static_cast<int32_t>(0x16) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandThumbTip{ static_cast<int32_t>(0x17) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandIndexMetacarpal{ static_cast<int32_t>(0x18) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandIndexProximal{ static_cast<int32_t>(0x19) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandIndexIntermediate{ static_cast<int32_t>(0x1a) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandIndexDistal{ static_cast<int32_t>(0x1b) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandIndexTip{ static_cast<int32_t>(0x1c) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandMiddleMetacarpal{ static_cast<int32_t>(0x1d) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandMiddleProximal{ static_cast<int32_t>(0x1e) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandMiddleIntermediate{ static_cast<int32_t>(0x1f) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandMiddleDistal{ static_cast<int32_t>(0x20) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandMiddleTip{ static_cast<int32_t>(0x21) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandRingMetacarpal{ static_cast<int32_t>(0x22) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandRingProximal{ static_cast<int32_t>(0x23) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandRingIntermediate{ static_cast<int32_t>(0x24) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandRingDistal{ static_cast<int32_t>(0x25) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandRingTip{ static_cast<int32_t>(0x26) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandLittleMetacarpal{ static_cast<int32_t>(0x27) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandLittleProximal{ static_cast<int32_t>(0x28) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandLittleIntermediate{ static_cast<int32_t>(0x29) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandLittleDistal{ static_cast<int32_t>(0x2a) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandLittleTip{ static_cast<int32_t>(0x2b) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandPalm{ static_cast<int32_t>(0x2c) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandWrist{ static_cast<int32_t>(0x2d) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandThumbMetacarpal{ static_cast<int32_t>(0x2e) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandThumbProximal{ static_cast<int32_t>(0x2f) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandThumbDistal{ static_cast<int32_t>(0x30) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandThumbTip{ static_cast<int32_t>(0x31) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandIndexMetacarpal{ static_cast<int32_t>(0x32) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandIndexProximal{ static_cast<int32_t>(0x33) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandIndexIntermediate{ static_cast<int32_t>(0x34) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandIndexDistal{ static_cast<int32_t>(0x35) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandIndexTip{ static_cast<int32_t>(0x36) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandMiddleMetacarpal{ static_cast<int32_t>(0x37) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandMiddleProximal{ static_cast<int32_t>(0x38) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandMiddleIntermediate{ static_cast<int32_t>(0x39) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandMiddleDistal{ static_cast<int32_t>(0x3a) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandMiddleTip{ static_cast<int32_t>(0x3b) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandRingMetacarpal{ static_cast<int32_t>(0x3c) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandRingProximal{ static_cast<int32_t>(0x3d) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandRingIntermediate{ static_cast<int32_t>(0x3e) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandRingDistal{ static_cast<int32_t>(0x3f) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandRingTip{ static_cast<int32_t>(0x40) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandLittleMetacarpal{ static_cast<int32_t>(0x41) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandLittleProximal{ static_cast<int32_t>(0x42) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandLittleIntermediate{ static_cast<int32_t>(0x43) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandLittleDistal{ static_cast<int32_t>(0x44) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandLittleTip{ static_cast<int32_t>(0x45) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Body_End{ static_cast<int32_t>(0x46) };
constexpr ::GlobalNamespace::__OVRPlugin__BoneId GlobalNamespace::__OVRPlugin__BoneId::Max{ static_cast<int32_t>(0x46) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HandFinger::__OVRPlugin__HandFinger(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__HandFinger::__OVRPlugin__HandFinger() {}
constexpr ::GlobalNamespace::__OVRPlugin__HandFinger GlobalNamespace::__OVRPlugin__HandFinger::Thumb{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__HandFinger GlobalNamespace::__OVRPlugin__HandFinger::Index{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__HandFinger GlobalNamespace::__OVRPlugin__HandFinger::Middle{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__HandFinger GlobalNamespace::__OVRPlugin__HandFinger::Ring{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__HandFinger GlobalNamespace::__OVRPlugin__HandFinger::Pinky{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__HandFinger GlobalNamespace::__OVRPlugin__HandFinger::Max{ static_cast<int32_t>(0x5) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HandFingerPinch::__OVRPlugin__HandFingerPinch(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__HandFingerPinch::__OVRPlugin__HandFingerPinch() {}
constexpr ::GlobalNamespace::__OVRPlugin__HandFingerPinch GlobalNamespace::__OVRPlugin__HandFingerPinch::Thumb{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__HandFingerPinch GlobalNamespace::__OVRPlugin__HandFingerPinch::Index{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__HandFingerPinch GlobalNamespace::__OVRPlugin__HandFingerPinch::Middle{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__HandFingerPinch GlobalNamespace::__OVRPlugin__HandFingerPinch::Ring{ static_cast<int32_t>(0x8) };
constexpr ::GlobalNamespace::__OVRPlugin__HandFingerPinch GlobalNamespace::__OVRPlugin__HandFingerPinch::Pinky{ static_cast<int32_t>(0x10) };
// Ctor Parameters [CppParam { name: "Status", ty: "::GlobalNamespace::__OVRPlugin__HandStatus", modifiers: "", def_value: Some("{}") }, CppParam { name: "RootPose", ty:
// "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations", ty:
// "::ArrayW<::GlobalNamespace::__OVRPlugin__Quatf,::Array<::GlobalNamespace::__OVRPlugin__Quatf>*>", modifiers: "", def_value: Some("nullptr") }, CppParam { name: "Pinches", ty:
// "::GlobalNamespace::__OVRPlugin__HandFingerPinch", modifiers: "", def_value: Some("{}") }, CppParam { name: "PinchStrength", ty: "::ArrayW<float_t,::Array<float_t>*>", modifiers: "", def_value:
// Some("nullptr") }, CppParam { name: "PointerPose", ty: "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }, CppParam { name: "HandScale", ty: "float_t", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "HandConfidence", ty: "::GlobalNamespace::__OVRPlugin__TrackingConfidence", modifiers: "", def_value: Some("{}") }, CppParam { name: "FingerConfidences",
// ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__TrackingConfidence,::Array<::GlobalNamespace::__OVRPlugin__TrackingConfidence>*>", modifiers: "", def_value: Some("nullptr") }, CppParam { name:
// "RequestedTimeStamp", ty: "double_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "SampleTimeStamp", ty: "double_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HandState::__OVRPlugin__HandState(
    ::GlobalNamespace::__OVRPlugin__HandStatus Status, ::GlobalNamespace::__OVRPlugin__Posef RootPose,
    ::ArrayW<::GlobalNamespace::__OVRPlugin__Quatf, ::Array<::GlobalNamespace::__OVRPlugin__Quatf>*> BoneRotations, ::GlobalNamespace::__OVRPlugin__HandFingerPinch Pinches,
    ::ArrayW<float_t, ::Array<float_t>*> PinchStrength, ::GlobalNamespace::__OVRPlugin__Posef PointerPose, float_t HandScale, ::GlobalNamespace::__OVRPlugin__TrackingConfidence HandConfidence,
    ::ArrayW<::GlobalNamespace::__OVRPlugin__TrackingConfidence, ::Array<::GlobalNamespace::__OVRPlugin__TrackingConfidence>*> FingerConfidences, double_t RequestedTimeStamp,
    double_t SampleTimeStamp) noexcept {
  this->Status = Status;
  this->RootPose = RootPose;
  this->BoneRotations = BoneRotations;
  this->Pinches = Pinches;
  this->PinchStrength = PinchStrength;
  this->PointerPose = PointerPose;
  this->HandScale = HandScale;
  this->HandConfidence = HandConfidence;
  this->FingerConfidences = FingerConfidences;
  this->RequestedTimeStamp = RequestedTimeStamp;
  this->SampleTimeStamp = SampleTimeStamp;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__HandState::__OVRPlugin__HandState() {}
// Ctor Parameters [CppParam { name: "Status", ty: "::GlobalNamespace::__OVRPlugin__HandStatus", modifiers: "", def_value: Some("{}") }, CppParam { name: "RootPose", ty:
// "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_0", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "BoneRotations_1", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_2", ty:
// "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_3", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "BoneRotations_4", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_5", ty:
// "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_6", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "BoneRotations_7", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_8", ty:
// "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_9", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "BoneRotations_10", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_11", ty:
// "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_12", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "BoneRotations_13", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_14", ty:
// "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_15", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "BoneRotations_16", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_17", ty:
// "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_18", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "BoneRotations_19", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_20", ty:
// "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_21", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "BoneRotations_22", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_23", ty:
// "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "Pinches", ty: "::GlobalNamespace::__OVRPlugin__HandFingerPinch", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "PinchStrength_0", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "PinchStrength_1", ty: "float_t", modifiers: "", def_value: Some("{}") },
// CppParam { name: "PinchStrength_2", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "PinchStrength_3", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam {
// name: "PinchStrength_4", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "PointerPose", ty: "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") },
// CppParam { name: "HandScale", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "HandConfidence", ty: "::GlobalNamespace::__OVRPlugin__TrackingConfidence", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "FingerConfidences_0", ty: "::GlobalNamespace::__OVRPlugin__TrackingConfidence", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "FingerConfidences_1", ty: "::GlobalNamespace::__OVRPlugin__TrackingConfidence", modifiers: "", def_value: Some("{}") }, CppParam { name: "FingerConfidences_2", ty:
// "::GlobalNamespace::__OVRPlugin__TrackingConfidence", modifiers: "", def_value: Some("{}") }, CppParam { name: "FingerConfidences_3", ty: "::GlobalNamespace::__OVRPlugin__TrackingConfidence",
// modifiers: "", def_value: Some("{}") }, CppParam { name: "FingerConfidences_4", ty: "::GlobalNamespace::__OVRPlugin__TrackingConfidence", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "RequestedTimeStamp", ty: "double_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "SampleTimeStamp", ty: "double_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HandStateInternal::__OVRPlugin__HandStateInternal(
    ::GlobalNamespace::__OVRPlugin__HandStatus Status, ::GlobalNamespace::__OVRPlugin__Posef RootPose, ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_0,
    ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_1, ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_2, ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_3,
    ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_4, ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_5, ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_6,
    ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_7, ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_8, ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_9,
    ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_10, ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_11, ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_12,
    ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_13, ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_14, ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_15,
    ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_16, ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_17, ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_18,
    ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_19, ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_20, ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_21,
    ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_22, ::GlobalNamespace::__OVRPlugin__Quatf BoneRotations_23, ::GlobalNamespace::__OVRPlugin__HandFingerPinch Pinches, float_t PinchStrength_0,
    float_t PinchStrength_1, float_t PinchStrength_2, float_t PinchStrength_3, float_t PinchStrength_4, ::GlobalNamespace::__OVRPlugin__Posef PointerPose, float_t HandScale,
    ::GlobalNamespace::__OVRPlugin__TrackingConfidence HandConfidence, ::GlobalNamespace::__OVRPlugin__TrackingConfidence FingerConfidences_0,
    ::GlobalNamespace::__OVRPlugin__TrackingConfidence FingerConfidences_1, ::GlobalNamespace::__OVRPlugin__TrackingConfidence FingerConfidences_2,
    ::GlobalNamespace::__OVRPlugin__TrackingConfidence FingerConfidences_3, ::GlobalNamespace::__OVRPlugin__TrackingConfidence FingerConfidences_4, double_t RequestedTimeStamp,
    double_t SampleTimeStamp) noexcept {
  this->Status = Status;
  this->RootPose = RootPose;
  this->BoneRotations_0 = BoneRotations_0;
  this->BoneRotations_1 = BoneRotations_1;
  this->BoneRotations_2 = BoneRotations_2;
  this->BoneRotations_3 = BoneRotations_3;
  this->BoneRotations_4 = BoneRotations_4;
  this->BoneRotations_5 = BoneRotations_5;
  this->BoneRotations_6 = BoneRotations_6;
  this->BoneRotations_7 = BoneRotations_7;
  this->BoneRotations_8 = BoneRotations_8;
  this->BoneRotations_9 = BoneRotations_9;
  this->BoneRotations_10 = BoneRotations_10;
  this->BoneRotations_11 = BoneRotations_11;
  this->BoneRotations_12 = BoneRotations_12;
  this->BoneRotations_13 = BoneRotations_13;
  this->BoneRotations_14 = BoneRotations_14;
  this->BoneRotations_15 = BoneRotations_15;
  this->BoneRotations_16 = BoneRotations_16;
  this->BoneRotations_17 = BoneRotations_17;
  this->BoneRotations_18 = BoneRotations_18;
  this->BoneRotations_19 = BoneRotations_19;
  this->BoneRotations_20 = BoneRotations_20;
  this->BoneRotations_21 = BoneRotations_21;
  this->BoneRotations_22 = BoneRotations_22;
  this->BoneRotations_23 = BoneRotations_23;
  this->Pinches = Pinches;
  this->PinchStrength_0 = PinchStrength_0;
  this->PinchStrength_1 = PinchStrength_1;
  this->PinchStrength_2 = PinchStrength_2;
  this->PinchStrength_3 = PinchStrength_3;
  this->PinchStrength_4 = PinchStrength_4;
  this->PointerPose = PointerPose;
  this->HandScale = HandScale;
  this->HandConfidence = HandConfidence;
  this->FingerConfidences_0 = FingerConfidences_0;
  this->FingerConfidences_1 = FingerConfidences_1;
  this->FingerConfidences_2 = FingerConfidences_2;
  this->FingerConfidences_3 = FingerConfidences_3;
  this->FingerConfidences_4 = FingerConfidences_4;
  this->RequestedTimeStamp = RequestedTimeStamp;
  this->SampleTimeStamp = SampleTimeStamp;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__HandStateInternal::__OVRPlugin__HandStateInternal() {}
// Ctor Parameters [CppParam { name: "BoneIndex", ty: "int16_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "StartPoint", ty: "::GlobalNamespace::__OVRPlugin__Vector3f", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "EndPoint", ty: "::GlobalNamespace::__OVRPlugin__Vector3f", modifiers: "", def_value: Some("{}") }, CppParam { name: "Radius", ty: "float_t", modifiers:
// "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule::__OVRPlugin__BoneCapsule(int16_t BoneIndex, ::GlobalNamespace::__OVRPlugin__Vector3f StartPoint,
                                                                                ::GlobalNamespace::__OVRPlugin__Vector3f EndPoint, float_t Radius) noexcept {
  this->BoneIndex = BoneIndex;
  this->StartPoint = StartPoint;
  this->EndPoint = EndPoint;
  this->Radius = Radius;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule::__OVRPlugin__BoneCapsule() {}
// Ctor Parameters [CppParam { name: "Id", ty: "::GlobalNamespace::__OVRPlugin__BoneId", modifiers: "", def_value: Some("{}") }, CppParam { name: "ParentBoneIndex", ty: "int16_t", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "Pose", ty: "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Bone::__OVRPlugin__Bone(::GlobalNamespace::__OVRPlugin__BoneId Id, int16_t ParentBoneIndex, ::GlobalNamespace::__OVRPlugin__Posef Pose) noexcept {
  this->Id = Id;
  this->ParentBoneIndex = ParentBoneIndex;
  this->Pose = Pose;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Bone::__OVRPlugin__Bone() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonConstants::__OVRPlugin__SkeletonConstants(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonConstants::__OVRPlugin__SkeletonConstants() {}
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonConstants GlobalNamespace::__OVRPlugin__SkeletonConstants::MaxHandBones{ static_cast<int32_t>(0x18) };
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonConstants GlobalNamespace::__OVRPlugin__SkeletonConstants::MaxBodyBones{ static_cast<int32_t>(0x46) };
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonConstants GlobalNamespace::__OVRPlugin__SkeletonConstants::MaxBones{ static_cast<int32_t>(0x46) };
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonConstants GlobalNamespace::__OVRPlugin__SkeletonConstants::MaxBoneCapsules{ static_cast<int32_t>(0x13) };
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonConstants GlobalNamespace::__OVRPlugin__SkeletonConstants::MaxNumMicrogestures{ static_cast<int32_t>(0x5) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonType::__OVRPlugin__SkeletonType(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonType::__OVRPlugin__SkeletonType() {}
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonType GlobalNamespace::__OVRPlugin__SkeletonType::None{ static_cast<int32_t>(0xffffffff) };
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonType GlobalNamespace::__OVRPlugin__SkeletonType::HandLeft{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonType GlobalNamespace::__OVRPlugin__SkeletonType::HandRight{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonType GlobalNamespace::__OVRPlugin__SkeletonType::Body{ static_cast<int32_t>(0x2) };
// Ctor Parameters [CppParam { name: "Type", ty: "::GlobalNamespace::__OVRPlugin__SkeletonType", modifiers: "", def_value: Some("{}") }, CppParam { name: "NumBones", ty: "uint32_t", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "NumBoneCapsules", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones", ty:
// "::ArrayW<::GlobalNamespace::__OVRPlugin__Bone,::Array<::GlobalNamespace::__OVRPlugin__Bone>*>", modifiers: "", def_value: Some("nullptr") }, CppParam { name: "BoneCapsules", ty:
// "::ArrayW<::GlobalNamespace::__OVRPlugin__BoneCapsule,::Array<::GlobalNamespace::__OVRPlugin__BoneCapsule>*>", modifiers: "", def_value: Some("nullptr") }]
constexpr ::GlobalNamespace::__OVRPlugin__Skeleton::__OVRPlugin__Skeleton(
    ::GlobalNamespace::__OVRPlugin__SkeletonType Type, uint32_t NumBones, uint32_t NumBoneCapsules,
    ::ArrayW<::GlobalNamespace::__OVRPlugin__Bone, ::Array<::GlobalNamespace::__OVRPlugin__Bone>*> Bones,
    ::ArrayW<::GlobalNamespace::__OVRPlugin__BoneCapsule, ::Array<::GlobalNamespace::__OVRPlugin__BoneCapsule>*> BoneCapsules) noexcept {
  this->Type = Type;
  this->NumBones = NumBones;
  this->NumBoneCapsules = NumBoneCapsules;
  this->Bones = Bones;
  this->BoneCapsules = BoneCapsules;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Skeleton::__OVRPlugin__Skeleton() {}
// Ctor Parameters [CppParam { name: "Type", ty: "::GlobalNamespace::__OVRPlugin__SkeletonType", modifiers: "", def_value: Some("{}") }, CppParam { name: "NumBones", ty: "uint32_t", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "NumBoneCapsules", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones", ty:
// "::ArrayW<::GlobalNamespace::__OVRPlugin__Bone,::Array<::GlobalNamespace::__OVRPlugin__Bone>*>", modifiers: "", def_value: Some("nullptr") }, CppParam { name: "BoneCapsules", ty:
// "::ArrayW<::GlobalNamespace::__OVRPlugin__BoneCapsule,::Array<::GlobalNamespace::__OVRPlugin__BoneCapsule>*>", modifiers: "", def_value: Some("nullptr") }]
constexpr ::GlobalNamespace::__OVRPlugin__Skeleton2::__OVRPlugin__Skeleton2(
    ::GlobalNamespace::__OVRPlugin__SkeletonType Type, uint32_t NumBones, uint32_t NumBoneCapsules,
    ::ArrayW<::GlobalNamespace::__OVRPlugin__Bone, ::Array<::GlobalNamespace::__OVRPlugin__Bone>*> Bones,
    ::ArrayW<::GlobalNamespace::__OVRPlugin__BoneCapsule, ::Array<::GlobalNamespace::__OVRPlugin__BoneCapsule>*> BoneCapsules) noexcept {
  this->Type = Type;
  this->NumBones = NumBones;
  this->NumBoneCapsules = NumBoneCapsules;
  this->Bones = Bones;
  this->BoneCapsules = BoneCapsules;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Skeleton2::__OVRPlugin__Skeleton2() {}
// Ctor Parameters [CppParam { name: "Type", ty: "::GlobalNamespace::__OVRPlugin__SkeletonType", modifiers: "", def_value: Some("{}") }, CppParam { name: "NumBones", ty: "uint32_t", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "NumBoneCapsules", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_0", ty: "::GlobalNamespace::__OVRPlugin__Bone",
// modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_1", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_2", ty:
// "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_3", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Bones_4", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_5", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "Bones_6", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_7", ty:
// "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_8", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Bones_9", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_10", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "Bones_11", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_12", ty:
// "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_13", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Bones_14", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_15", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "Bones_16", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_17", ty:
// "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_18", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Bones_19", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_20", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "Bones_21", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_22", ty:
// "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_23", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Bones_24", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_25", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "Bones_26", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_27", ty:
// "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_28", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Bones_29", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_30", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "Bones_31", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_32", ty:
// "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_33", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Bones_34", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_35", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "Bones_36", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_37", ty:
// "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_38", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Bones_39", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_40", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "Bones_41", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_42", ty:
// "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_43", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Bones_44", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_45", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "Bones_46", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_47", ty:
// "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_48", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Bones_49", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_50", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "Bones_51", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_52", ty:
// "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_53", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Bones_54", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_55", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "Bones_56", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_57", ty:
// "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_58", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Bones_59", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_60", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "Bones_61", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_62", ty:
// "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_63", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Bones_64", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_65", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "Bones_66", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_67", ty:
// "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_68", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Bones_69", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_0", ty:
// "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_1", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "BoneCapsules_2", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_3", ty:
// "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_4", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "BoneCapsules_5", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_6", ty:
// "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_7", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "BoneCapsules_8", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_9", ty:
// "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_10", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "BoneCapsules_11", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_12", ty:
// "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_13", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "BoneCapsules_14", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_15", ty:
// "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_16", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "BoneCapsules_17", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_18", ty:
// "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Skeleton2Internal::__OVRPlugin__Skeleton2Internal(
    ::GlobalNamespace::__OVRPlugin__SkeletonType Type, uint32_t NumBones, uint32_t NumBoneCapsules, ::GlobalNamespace::__OVRPlugin__Bone Bones_0, ::GlobalNamespace::__OVRPlugin__Bone Bones_1,
    ::GlobalNamespace::__OVRPlugin__Bone Bones_2, ::GlobalNamespace::__OVRPlugin__Bone Bones_3, ::GlobalNamespace::__OVRPlugin__Bone Bones_4, ::GlobalNamespace::__OVRPlugin__Bone Bones_5,
    ::GlobalNamespace::__OVRPlugin__Bone Bones_6, ::GlobalNamespace::__OVRPlugin__Bone Bones_7, ::GlobalNamespace::__OVRPlugin__Bone Bones_8, ::GlobalNamespace::__OVRPlugin__Bone Bones_9,
    ::GlobalNamespace::__OVRPlugin__Bone Bones_10, ::GlobalNamespace::__OVRPlugin__Bone Bones_11, ::GlobalNamespace::__OVRPlugin__Bone Bones_12, ::GlobalNamespace::__OVRPlugin__Bone Bones_13,
    ::GlobalNamespace::__OVRPlugin__Bone Bones_14, ::GlobalNamespace::__OVRPlugin__Bone Bones_15, ::GlobalNamespace::__OVRPlugin__Bone Bones_16, ::GlobalNamespace::__OVRPlugin__Bone Bones_17,
    ::GlobalNamespace::__OVRPlugin__Bone Bones_18, ::GlobalNamespace::__OVRPlugin__Bone Bones_19, ::GlobalNamespace::__OVRPlugin__Bone Bones_20, ::GlobalNamespace::__OVRPlugin__Bone Bones_21,
    ::GlobalNamespace::__OVRPlugin__Bone Bones_22, ::GlobalNamespace::__OVRPlugin__Bone Bones_23, ::GlobalNamespace::__OVRPlugin__Bone Bones_24, ::GlobalNamespace::__OVRPlugin__Bone Bones_25,
    ::GlobalNamespace::__OVRPlugin__Bone Bones_26, ::GlobalNamespace::__OVRPlugin__Bone Bones_27, ::GlobalNamespace::__OVRPlugin__Bone Bones_28, ::GlobalNamespace::__OVRPlugin__Bone Bones_29,
    ::GlobalNamespace::__OVRPlugin__Bone Bones_30, ::GlobalNamespace::__OVRPlugin__Bone Bones_31, ::GlobalNamespace::__OVRPlugin__Bone Bones_32, ::GlobalNamespace::__OVRPlugin__Bone Bones_33,
    ::GlobalNamespace::__OVRPlugin__Bone Bones_34, ::GlobalNamespace::__OVRPlugin__Bone Bones_35, ::GlobalNamespace::__OVRPlugin__Bone Bones_36, ::GlobalNamespace::__OVRPlugin__Bone Bones_37,
    ::GlobalNamespace::__OVRPlugin__Bone Bones_38, ::GlobalNamespace::__OVRPlugin__Bone Bones_39, ::GlobalNamespace::__OVRPlugin__Bone Bones_40, ::GlobalNamespace::__OVRPlugin__Bone Bones_41,
    ::GlobalNamespace::__OVRPlugin__Bone Bones_42, ::GlobalNamespace::__OVRPlugin__Bone Bones_43, ::GlobalNamespace::__OVRPlugin__Bone Bones_44, ::GlobalNamespace::__OVRPlugin__Bone Bones_45,
    ::GlobalNamespace::__OVRPlugin__Bone Bones_46, ::GlobalNamespace::__OVRPlugin__Bone Bones_47, ::GlobalNamespace::__OVRPlugin__Bone Bones_48, ::GlobalNamespace::__OVRPlugin__Bone Bones_49,
    ::GlobalNamespace::__OVRPlugin__Bone Bones_50, ::GlobalNamespace::__OVRPlugin__Bone Bones_51, ::GlobalNamespace::__OVRPlugin__Bone Bones_52, ::GlobalNamespace::__OVRPlugin__Bone Bones_53,
    ::GlobalNamespace::__OVRPlugin__Bone Bones_54, ::GlobalNamespace::__OVRPlugin__Bone Bones_55, ::GlobalNamespace::__OVRPlugin__Bone Bones_56, ::GlobalNamespace::__OVRPlugin__Bone Bones_57,
    ::GlobalNamespace::__OVRPlugin__Bone Bones_58, ::GlobalNamespace::__OVRPlugin__Bone Bones_59, ::GlobalNamespace::__OVRPlugin__Bone Bones_60, ::GlobalNamespace::__OVRPlugin__Bone Bones_61,
    ::GlobalNamespace::__OVRPlugin__Bone Bones_62, ::GlobalNamespace::__OVRPlugin__Bone Bones_63, ::GlobalNamespace::__OVRPlugin__Bone Bones_64, ::GlobalNamespace::__OVRPlugin__Bone Bones_65,
    ::GlobalNamespace::__OVRPlugin__Bone Bones_66, ::GlobalNamespace::__OVRPlugin__Bone Bones_67, ::GlobalNamespace::__OVRPlugin__Bone Bones_68, ::GlobalNamespace::__OVRPlugin__Bone Bones_69,
    ::GlobalNamespace::__OVRPlugin__BoneCapsule BoneCapsules_0, ::GlobalNamespace::__OVRPlugin__BoneCapsule BoneCapsules_1, ::GlobalNamespace::__OVRPlugin__BoneCapsule BoneCapsules_2,
    ::GlobalNamespace::__OVRPlugin__BoneCapsule BoneCapsules_3, ::GlobalNamespace::__OVRPlugin__BoneCapsule BoneCapsules_4, ::GlobalNamespace::__OVRPlugin__BoneCapsule BoneCapsules_5,
    ::GlobalNamespace::__OVRPlugin__BoneCapsule BoneCapsules_6, ::GlobalNamespace::__OVRPlugin__BoneCapsule BoneCapsules_7, ::GlobalNamespace::__OVRPlugin__BoneCapsule BoneCapsules_8,
    ::GlobalNamespace::__OVRPlugin__BoneCapsule BoneCapsules_9, ::GlobalNamespace::__OVRPlugin__BoneCapsule BoneCapsules_10, ::GlobalNamespace::__OVRPlugin__BoneCapsule BoneCapsules_11,
    ::GlobalNamespace::__OVRPlugin__BoneCapsule BoneCapsules_12, ::GlobalNamespace::__OVRPlugin__BoneCapsule BoneCapsules_13, ::GlobalNamespace::__OVRPlugin__BoneCapsule BoneCapsules_14,
    ::GlobalNamespace::__OVRPlugin__BoneCapsule BoneCapsules_15, ::GlobalNamespace::__OVRPlugin__BoneCapsule BoneCapsules_16, ::GlobalNamespace::__OVRPlugin__BoneCapsule BoneCapsules_17,
    ::GlobalNamespace::__OVRPlugin__BoneCapsule BoneCapsules_18) noexcept {
  this->Type = Type;
  this->NumBones = NumBones;
  this->NumBoneCapsules = NumBoneCapsules;
  this->Bones_0 = Bones_0;
  this->Bones_1 = Bones_1;
  this->Bones_2 = Bones_2;
  this->Bones_3 = Bones_3;
  this->Bones_4 = Bones_4;
  this->Bones_5 = Bones_5;
  this->Bones_6 = Bones_6;
  this->Bones_7 = Bones_7;
  this->Bones_8 = Bones_8;
  this->Bones_9 = Bones_9;
  this->Bones_10 = Bones_10;
  this->Bones_11 = Bones_11;
  this->Bones_12 = Bones_12;
  this->Bones_13 = Bones_13;
  this->Bones_14 = Bones_14;
  this->Bones_15 = Bones_15;
  this->Bones_16 = Bones_16;
  this->Bones_17 = Bones_17;
  this->Bones_18 = Bones_18;
  this->Bones_19 = Bones_19;
  this->Bones_20 = Bones_20;
  this->Bones_21 = Bones_21;
  this->Bones_22 = Bones_22;
  this->Bones_23 = Bones_23;
  this->Bones_24 = Bones_24;
  this->Bones_25 = Bones_25;
  this->Bones_26 = Bones_26;
  this->Bones_27 = Bones_27;
  this->Bones_28 = Bones_28;
  this->Bones_29 = Bones_29;
  this->Bones_30 = Bones_30;
  this->Bones_31 = Bones_31;
  this->Bones_32 = Bones_32;
  this->Bones_33 = Bones_33;
  this->Bones_34 = Bones_34;
  this->Bones_35 = Bones_35;
  this->Bones_36 = Bones_36;
  this->Bones_37 = Bones_37;
  this->Bones_38 = Bones_38;
  this->Bones_39 = Bones_39;
  this->Bones_40 = Bones_40;
  this->Bones_41 = Bones_41;
  this->Bones_42 = Bones_42;
  this->Bones_43 = Bones_43;
  this->Bones_44 = Bones_44;
  this->Bones_45 = Bones_45;
  this->Bones_46 = Bones_46;
  this->Bones_47 = Bones_47;
  this->Bones_48 = Bones_48;
  this->Bones_49 = Bones_49;
  this->Bones_50 = Bones_50;
  this->Bones_51 = Bones_51;
  this->Bones_52 = Bones_52;
  this->Bones_53 = Bones_53;
  this->Bones_54 = Bones_54;
  this->Bones_55 = Bones_55;
  this->Bones_56 = Bones_56;
  this->Bones_57 = Bones_57;
  this->Bones_58 = Bones_58;
  this->Bones_59 = Bones_59;
  this->Bones_60 = Bones_60;
  this->Bones_61 = Bones_61;
  this->Bones_62 = Bones_62;
  this->Bones_63 = Bones_63;
  this->Bones_64 = Bones_64;
  this->Bones_65 = Bones_65;
  this->Bones_66 = Bones_66;
  this->Bones_67 = Bones_67;
  this->Bones_68 = Bones_68;
  this->Bones_69 = Bones_69;
  this->BoneCapsules_0 = BoneCapsules_0;
  this->BoneCapsules_1 = BoneCapsules_1;
  this->BoneCapsules_2 = BoneCapsules_2;
  this->BoneCapsules_3 = BoneCapsules_3;
  this->BoneCapsules_4 = BoneCapsules_4;
  this->BoneCapsules_5 = BoneCapsules_5;
  this->BoneCapsules_6 = BoneCapsules_6;
  this->BoneCapsules_7 = BoneCapsules_7;
  this->BoneCapsules_8 = BoneCapsules_8;
  this->BoneCapsules_9 = BoneCapsules_9;
  this->BoneCapsules_10 = BoneCapsules_10;
  this->BoneCapsules_11 = BoneCapsules_11;
  this->BoneCapsules_12 = BoneCapsules_12;
  this->BoneCapsules_13 = BoneCapsules_13;
  this->BoneCapsules_14 = BoneCapsules_14;
  this->BoneCapsules_15 = BoneCapsules_15;
  this->BoneCapsules_16 = BoneCapsules_16;
  this->BoneCapsules_17 = BoneCapsules_17;
  this->BoneCapsules_18 = BoneCapsules_18;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Skeleton2Internal::__OVRPlugin__Skeleton2Internal() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__MeshConstants::__OVRPlugin__MeshConstants(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__MeshConstants::__OVRPlugin__MeshConstants() {}
constexpr ::GlobalNamespace::__OVRPlugin__MeshConstants GlobalNamespace::__OVRPlugin__MeshConstants::MaxVertices{ static_cast<int32_t>(0xbb8) };
constexpr ::GlobalNamespace::__OVRPlugin__MeshConstants GlobalNamespace::__OVRPlugin__MeshConstants::MaxIndices{ static_cast<int32_t>(0x4650) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__MeshType::__OVRPlugin__MeshType(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__MeshType::__OVRPlugin__MeshType() {}
constexpr ::GlobalNamespace::__OVRPlugin__MeshType GlobalNamespace::__OVRPlugin__MeshType::None{ static_cast<int32_t>(0xffffffff) };
constexpr ::GlobalNamespace::__OVRPlugin__MeshType GlobalNamespace::__OVRPlugin__MeshType::HandLeft{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__MeshType GlobalNamespace::__OVRPlugin__MeshType::HandRight{ static_cast<int32_t>(0x1) };
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Mesh._ctor
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__Mesh::*)()>(&::GlobalNamespace::__OVRPlugin__Mesh::_ctor)> {
  constexpr static std::size_t size = 0x8;
  constexpr static std::size_t addrs = 0x276d5f4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Mesh*>::get(), ".ctor",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
constexpr ::GlobalNamespace::__OVRPlugin__MeshType& GlobalNamespace::__OVRPlugin__Mesh::__get_Type() {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___Type;
}
constexpr ::GlobalNamespace::__OVRPlugin__MeshType const& GlobalNamespace::__OVRPlugin__Mesh::__get_Type() const {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___Type;
}
constexpr void GlobalNamespace::__OVRPlugin__Mesh::__set_Type(::GlobalNamespace::__OVRPlugin__MeshType value) {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  this->___Type = value;
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__Mesh::__get_NumVertices() {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___NumVertices;
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__Mesh::__get_NumVertices() const {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___NumVertices;
}
constexpr void GlobalNamespace::__OVRPlugin__Mesh::__set_NumVertices(uint32_t value) {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  this->___NumVertices = value;
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__Mesh::__get_NumIndices() {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___NumIndices;
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__Mesh::__get_NumIndices() const {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___NumIndices;
}
constexpr void GlobalNamespace::__OVRPlugin__Mesh::__set_NumIndices(uint32_t value) {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  this->___NumIndices = value;
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f, ::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>& GlobalNamespace::__OVRPlugin__Mesh::__get_VertexPositions() {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___VertexPositions;
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f, ::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*> const& GlobalNamespace::__OVRPlugin__Mesh::__get_VertexPositions() const {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___VertexPositions;
}
constexpr void GlobalNamespace::__OVRPlugin__Mesh::__set_VertexPositions(::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f, ::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*> value) {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  il2cpp_functions::gc_wbarrier_set_field(this, static_cast<void**>(static_cast<void*>(&this->___VertexPositions)), cordl_internals::convert(std::forward<decltype(value)>(value)));
}
constexpr ::ArrayW<int16_t, ::Array<int16_t>*>& GlobalNamespace::__OVRPlugin__Mesh::__get_Indices() {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___Indices;
}
constexpr ::ArrayW<int16_t, ::Array<int16_t>*> const& GlobalNamespace::__OVRPlugin__Mesh::__get_Indices() const {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___Indices;
}
constexpr void GlobalNamespace::__OVRPlugin__Mesh::__set_Indices(::ArrayW<int16_t, ::Array<int16_t>*> value) {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  il2cpp_functions::gc_wbarrier_set_field(this, static_cast<void**>(static_cast<void*>(&this->___Indices)), cordl_internals::convert(std::forward<decltype(value)>(value)));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f, ::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>& GlobalNamespace::__OVRPlugin__Mesh::__get_VertexNormals() {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___VertexNormals;
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f, ::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*> const& GlobalNamespace::__OVRPlugin__Mesh::__get_VertexNormals() const {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___VertexNormals;
}
constexpr void GlobalNamespace::__OVRPlugin__Mesh::__set_VertexNormals(::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f, ::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*> value) {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  il2cpp_functions::gc_wbarrier_set_field(this, static_cast<void**>(static_cast<void*>(&this->___VertexNormals)), cordl_internals::convert(std::forward<decltype(value)>(value)));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector2f, ::Array<::GlobalNamespace::__OVRPlugin__Vector2f>*>& GlobalNamespace::__OVRPlugin__Mesh::__get_VertexUV0() {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___VertexUV0;
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector2f, ::Array<::GlobalNamespace::__OVRPlugin__Vector2f>*> const& GlobalNamespace::__OVRPlugin__Mesh::__get_VertexUV0() const {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___VertexUV0;
}
constexpr void GlobalNamespace::__OVRPlugin__Mesh::__set_VertexUV0(::ArrayW<::GlobalNamespace::__OVRPlugin__Vector2f, ::Array<::GlobalNamespace::__OVRPlugin__Vector2f>*> value) {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  il2cpp_functions::gc_wbarrier_set_field(this, static_cast<void**>(static_cast<void*>(&this->___VertexUV0)), cordl_internals::convert(std::forward<decltype(value)>(value)));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector4s, ::Array<::GlobalNamespace::__OVRPlugin__Vector4s>*>& GlobalNamespace::__OVRPlugin__Mesh::__get_BlendIndices() {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___BlendIndices;
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector4s, ::Array<::GlobalNamespace::__OVRPlugin__Vector4s>*> const& GlobalNamespace::__OVRPlugin__Mesh::__get_BlendIndices() const {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___BlendIndices;
}
constexpr void GlobalNamespace::__OVRPlugin__Mesh::__set_BlendIndices(::ArrayW<::GlobalNamespace::__OVRPlugin__Vector4s, ::Array<::GlobalNamespace::__OVRPlugin__Vector4s>*> value) {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  il2cpp_functions::gc_wbarrier_set_field(this, static_cast<void**>(static_cast<void*>(&this->___BlendIndices)), cordl_internals::convert(std::forward<decltype(value)>(value)));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector4f, ::Array<::GlobalNamespace::__OVRPlugin__Vector4f>*>& GlobalNamespace::__OVRPlugin__Mesh::__get_BlendWeights() {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___BlendWeights;
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector4f, ::Array<::GlobalNamespace::__OVRPlugin__Vector4f>*> const& GlobalNamespace::__OVRPlugin__Mesh::__get_BlendWeights() const {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  return this->___BlendWeights;
}
constexpr void GlobalNamespace::__OVRPlugin__Mesh::__set_BlendWeights(::ArrayW<::GlobalNamespace::__OVRPlugin__Vector4f, ::Array<::GlobalNamespace::__OVRPlugin__Vector4f>*> value) {
  CORDL_FIELD_NULL_CHECK(static_cast<void const*>(this));
  il2cpp_functions::gc_wbarrier_set_field(this, static_cast<void**>(static_cast<void*>(&this->___BlendWeights)), cordl_internals::convert(std::forward<decltype(value)>(value)));
}
inline ::GlobalNamespace::__OVRPlugin__Mesh* GlobalNamespace::__OVRPlugin__Mesh::New_ctor() {
  return THROW_UNLESS(::il2cpp_utils::New<::GlobalNamespace::__OVRPlugin__Mesh*>());
}
inline void GlobalNamespace::__OVRPlugin__Mesh::_ctor() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Mesh*>::get(), ".ctor",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<void, false>(this, ___internal_method);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Mesh::__OVRPlugin__Mesh() {}
// Ctor Parameters [CppParam { name: "value__", ty: "uint64_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceLocationFlags::__OVRPlugin__SpaceLocationFlags(uint64_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__SpaceLocationFlags::__OVRPlugin__SpaceLocationFlags() {}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceLocationFlags GlobalNamespace::__OVRPlugin__SpaceLocationFlags::OrientationValid{ static_cast<uint64_t>(0x1u) };
constexpr ::GlobalNamespace::__OVRPlugin__SpaceLocationFlags GlobalNamespace::__OVRPlugin__SpaceLocationFlags::PositionValid{ static_cast<uint64_t>(0x2u) };
constexpr ::GlobalNamespace::__OVRPlugin__SpaceLocationFlags GlobalNamespace::__OVRPlugin__SpaceLocationFlags::OrientationTracked{ static_cast<uint64_t>(0x4u) };
constexpr ::GlobalNamespace::__OVRPlugin__SpaceLocationFlags GlobalNamespace::__OVRPlugin__SpaceLocationFlags::PositionTracked{ static_cast<uint64_t>(0x8u) };
// Ctor Parameters [CppParam { name: "locationFlags", ty: "::GlobalNamespace::__OVRPlugin__SpaceLocationFlags", modifiers: "", def_value: Some("{}") }, CppParam { name: "pose", ty:
// "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceLocationf::__OVRPlugin__SpaceLocationf(::GlobalNamespace::__OVRPlugin__SpaceLocationFlags locationFlags,
                                                                                      ::GlobalNamespace::__OVRPlugin__Posef pose) noexcept {
  this->locationFlags = locationFlags;
  this->pose = pose;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__SpaceLocationf::__OVRPlugin__SpaceLocationf() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__BodyJointLocation.get_OrientationValid
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (::GlobalNamespace::__OVRPlugin__BodyJointLocation::*)()>(
    &::GlobalNamespace::__OVRPlugin__BodyJointLocation::get_OrientationValid)> {
  constexpr static std::size_t size = 0xc;
  constexpr static std::size_t addrs = 0x276d5fc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__BodyJointLocation>::get(),
                                                                               "get_OrientationValid", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__BodyJointLocation.get_PositionValid
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (::GlobalNamespace::__OVRPlugin__BodyJointLocation::*)()>(
    &::GlobalNamespace::__OVRPlugin__BodyJointLocation::get_PositionValid)> {
  constexpr static std::size_t size = 0xc;
  constexpr static std::size_t addrs = 0x276d608;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__BodyJointLocation>::get(),
                                                                               "get_PositionValid", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__BodyJointLocation.get_OrientationTracked
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (::GlobalNamespace::__OVRPlugin__BodyJointLocation::*)()>(
    &::GlobalNamespace::__OVRPlugin__BodyJointLocation::get_OrientationTracked)> {
  constexpr static std::size_t size = 0xc;
  constexpr static std::size_t addrs = 0x276d614;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__BodyJointLocation>::get(),
                                                                               "get_OrientationTracked", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__BodyJointLocation.get_PositionTracked
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (::GlobalNamespace::__OVRPlugin__BodyJointLocation::*)()>(
    &::GlobalNamespace::__OVRPlugin__BodyJointLocation::get_PositionTracked)> {
  constexpr static std::size_t size = 0xc;
  constexpr static std::size_t addrs = 0x276d620;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__BodyJointLocation>::get(),
                                                                               "get_PositionTracked", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
inline bool GlobalNamespace::__OVRPlugin__BodyJointLocation::get_OrientationValid() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__BodyJointLocation>::get(),
                                                                             "get_OrientationValid", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(this, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__BodyJointLocation::get_PositionValid() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__BodyJointLocation>::get(),
                                                                             "get_PositionValid", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(this, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__BodyJointLocation::get_OrientationTracked() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__BodyJointLocation>::get(),
                                                                             "get_OrientationTracked", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(this, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__BodyJointLocation::get_PositionTracked() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__BodyJointLocation>::get(),
                                                                             "get_PositionTracked", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "LocationFlags", ty: "::GlobalNamespace::__OVRPlugin__SpaceLocationFlags", modifiers: "", def_value: Some("{}") }, CppParam { name: "Pose", ty:
// "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation::__OVRPlugin__BodyJointLocation(::GlobalNamespace::__OVRPlugin__SpaceLocationFlags LocationFlags,
                                                                                            ::GlobalNamespace::__OVRPlugin__Posef Pose) noexcept {
  this->LocationFlags = LocationFlags;
  this->Pose = Pose;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation::__OVRPlugin__BodyJointLocation() {}
// Ctor Parameters [CppParam { name: "JointLocations", ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__BodyJointLocation,::Array<::GlobalNamespace::__OVRPlugin__BodyJointLocation>*>", modifiers: "",
// def_value: Some("nullptr") }, CppParam { name: "Confidence", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "SkeletonChangedCount", ty: "uint32_t", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "Time", ty: "double_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__BodyState::__OVRPlugin__BodyState(
    ::ArrayW<::GlobalNamespace::__OVRPlugin__BodyJointLocation, ::Array<::GlobalNamespace::__OVRPlugin__BodyJointLocation>*> JointLocations, float_t Confidence, uint32_t SkeletonChangedCount,
    double_t Time) noexcept {
  this->JointLocations = JointLocations;
  this->Confidence = Confidence;
  this->SkeletonChangedCount = SkeletonChangedCount;
  this->Time = Time;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__BodyState::__OVRPlugin__BodyState() {}
// Ctor Parameters [CppParam { name: "IsActive", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "Confidence", ty: "float_t", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "SkeletonChangedCount", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Time", ty: "double_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "JointLocation_0", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_1", ty:
// "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_2", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "JointLocation_3", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_4",
// ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_5", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation",
// modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_6", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "JointLocation_7", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_8", ty:
// "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_9", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "JointLocation_10", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "JointLocation_11", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_12", ty:
// "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_13", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "JointLocation_14", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "JointLocation_15", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_16", ty:
// "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_17", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "JointLocation_18", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "JointLocation_19", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_20", ty:
// "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_21", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "JointLocation_22", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "JointLocation_23", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_24", ty:
// "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_25", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "JointLocation_26", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "JointLocation_27", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_28", ty:
// "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_29", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "JointLocation_30", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "JointLocation_31", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_32", ty:
// "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_33", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "JointLocation_34", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "JointLocation_35", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_36", ty:
// "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_37", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "JointLocation_38", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "JointLocation_39", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_40", ty:
// "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_41", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "JointLocation_42", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "JointLocation_43", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_44", ty:
// "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_45", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "JointLocation_46", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "JointLocation_47", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_48", ty:
// "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_49", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "JointLocation_50", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "JointLocation_51", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_52", ty:
// "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_53", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "JointLocation_54", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "JointLocation_55", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_56", ty:
// "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_57", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "JointLocation_58", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "JointLocation_59", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_60", ty:
// "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_61", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "JointLocation_62", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "JointLocation_63", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_64", ty:
// "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_65", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "JointLocation_66", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "JointLocation_67", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_68", ty:
// "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_69", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers:
// "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__BodyStateInternal::__OVRPlugin__BodyStateInternal(
    ::GlobalNamespace::__OVRPlugin__Bool IsActive, float_t Confidence, uint32_t SkeletonChangedCount, double_t Time, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_0,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_1, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_2,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_3, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_4,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_5, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_6,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_7, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_8,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_9, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_10,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_11, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_12,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_13, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_14,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_15, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_16,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_17, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_18,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_19, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_20,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_21, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_22,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_23, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_24,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_25, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_26,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_27, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_28,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_29, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_30,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_31, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_32,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_33, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_34,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_35, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_36,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_37, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_38,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_39, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_40,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_41, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_42,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_43, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_44,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_45, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_46,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_47, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_48,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_49, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_50,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_51, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_52,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_53, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_54,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_55, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_56,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_57, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_58,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_59, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_60,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_61, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_62,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_63, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_64,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_65, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_66,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_67, ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_68,
    ::GlobalNamespace::__OVRPlugin__BodyJointLocation JointLocation_69) noexcept {
  this->IsActive = IsActive;
  this->Confidence = Confidence;
  this->SkeletonChangedCount = SkeletonChangedCount;
  this->Time = Time;
  this->JointLocation_0 = JointLocation_0;
  this->JointLocation_1 = JointLocation_1;
  this->JointLocation_2 = JointLocation_2;
  this->JointLocation_3 = JointLocation_3;
  this->JointLocation_4 = JointLocation_4;
  this->JointLocation_5 = JointLocation_5;
  this->JointLocation_6 = JointLocation_6;
  this->JointLocation_7 = JointLocation_7;
  this->JointLocation_8 = JointLocation_8;
  this->JointLocation_9 = JointLocation_9;
  this->JointLocation_10 = JointLocation_10;
  this->JointLocation_11 = JointLocation_11;
  this->JointLocation_12 = JointLocation_12;
  this->JointLocation_13 = JointLocation_13;
  this->JointLocation_14 = JointLocation_14;
  this->JointLocation_15 = JointLocation_15;
  this->JointLocation_16 = JointLocation_16;
  this->JointLocation_17 = JointLocation_17;
  this->JointLocation_18 = JointLocation_18;
  this->JointLocation_19 = JointLocation_19;
  this->JointLocation_20 = JointLocation_20;
  this->JointLocation_21 = JointLocation_21;
  this->JointLocation_22 = JointLocation_22;
  this->JointLocation_23 = JointLocation_23;
  this->JointLocation_24 = JointLocation_24;
  this->JointLocation_25 = JointLocation_25;
  this->JointLocation_26 = JointLocation_26;
  this->JointLocation_27 = JointLocation_27;
  this->JointLocation_28 = JointLocation_28;
  this->JointLocation_29 = JointLocation_29;
  this->JointLocation_30 = JointLocation_30;
  this->JointLocation_31 = JointLocation_31;
  this->JointLocation_32 = JointLocation_32;
  this->JointLocation_33 = JointLocation_33;
  this->JointLocation_34 = JointLocation_34;
  this->JointLocation_35 = JointLocation_35;
  this->JointLocation_36 = JointLocation_36;
  this->JointLocation_37 = JointLocation_37;
  this->JointLocation_38 = JointLocation_38;
  this->JointLocation_39 = JointLocation_39;
  this->JointLocation_40 = JointLocation_40;
  this->JointLocation_41 = JointLocation_41;
  this->JointLocation_42 = JointLocation_42;
  this->JointLocation_43 = JointLocation_43;
  this->JointLocation_44 = JointLocation_44;
  this->JointLocation_45 = JointLocation_45;
  this->JointLocation_46 = JointLocation_46;
  this->JointLocation_47 = JointLocation_47;
  this->JointLocation_48 = JointLocation_48;
  this->JointLocation_49 = JointLocation_49;
  this->JointLocation_50 = JointLocation_50;
  this->JointLocation_51 = JointLocation_51;
  this->JointLocation_52 = JointLocation_52;
  this->JointLocation_53 = JointLocation_53;
  this->JointLocation_54 = JointLocation_54;
  this->JointLocation_55 = JointLocation_55;
  this->JointLocation_56 = JointLocation_56;
  this->JointLocation_57 = JointLocation_57;
  this->JointLocation_58 = JointLocation_58;
  this->JointLocation_59 = JointLocation_59;
  this->JointLocation_60 = JointLocation_60;
  this->JointLocation_61 = JointLocation_61;
  this->JointLocation_62 = JointLocation_62;
  this->JointLocation_63 = JointLocation_63;
  this->JointLocation_64 = JointLocation_64;
  this->JointLocation_65 = JointLocation_65;
  this->JointLocation_66 = JointLocation_66;
  this->JointLocation_67 = JointLocation_67;
  this->JointLocation_68 = JointLocation_68;
  this->JointLocation_69 = JointLocation_69;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__BodyStateInternal::__OVRPlugin__BodyStateInternal() {}
// Ctor Parameters [CppParam { name: "IsActive", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "OrientationValid", ty:
// "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "PositionValid", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") },
// CppParam { name: "OrientationTracked", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "PositionTracked", ty:
// "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "PoseState", ty: "::GlobalNamespace::__OVRPlugin__PoseStatef", modifiers: "", def_value: Some("{}")
// }, CppParam { name: "ContrastParameters", ty: "::GlobalNamespace::__OVRPlugin__Vector4f", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__KeyboardState::__OVRPlugin__KeyboardState(::GlobalNamespace::__OVRPlugin__Bool IsActive, ::GlobalNamespace::__OVRPlugin__Bool OrientationValid,
                                                                                    ::GlobalNamespace::__OVRPlugin__Bool PositionValid, ::GlobalNamespace::__OVRPlugin__Bool OrientationTracked,
                                                                                    ::GlobalNamespace::__OVRPlugin__Bool PositionTracked, ::GlobalNamespace::__OVRPlugin__PoseStatef PoseState,
                                                                                    ::GlobalNamespace::__OVRPlugin__Vector4f ContrastParameters) noexcept {
  this->IsActive = IsActive;
  this->OrientationValid = OrientationValid;
  this->PositionValid = PositionValid;
  this->OrientationTracked = OrientationTracked;
  this->PositionTracked = PositionTracked;
  this->PoseState = PoseState;
  this->ContrastParameters = ContrastParameters;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__KeyboardState::__OVRPlugin__KeyboardState() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__KeyboardDescriptionConstants::__OVRPlugin__KeyboardDescriptionConstants(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__KeyboardDescriptionConstants::__OVRPlugin__KeyboardDescriptionConstants() {}
constexpr ::GlobalNamespace::__OVRPlugin__KeyboardDescriptionConstants GlobalNamespace::__OVRPlugin__KeyboardDescriptionConstants::NameMaxLength{ static_cast<int32_t>(0x80) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles::__OVRPlugin__TrackedKeyboardPresentationStyles(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles::__OVRPlugin__TrackedKeyboardPresentationStyles() {}
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles::Unknown{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles::Opaque{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles::KeyLabel{ static_cast<int32_t>(0x2) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags::__OVRPlugin__TrackedKeyboardFlags(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags::__OVRPlugin__TrackedKeyboardFlags() {}
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags::Exists{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags::Local{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags::Remote{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags::Connected{ static_cast<int32_t>(0x8) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags::__OVRPlugin__TrackedKeyboardQueryFlags(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags::__OVRPlugin__TrackedKeyboardQueryFlags() {}
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags::Local{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags::Remote{ static_cast<int32_t>(0x4) };
// Ctor Parameters [CppParam { name: "Name", ty: "::ArrayW<uint8_t,::Array<uint8_t>*>", modifiers: "", def_value: Some("nullptr") }, CppParam { name: "TrackedKeyboardId", ty: "uint64_t", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "Dimensions", ty: "::GlobalNamespace::__OVRPlugin__Vector3f", modifiers: "", def_value: Some("{}") }, CppParam { name: "KeyboardFlags", ty:
// "::GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags", modifiers: "", def_value: Some("{}") }, CppParam { name: "SupportedPresentationStyles", ty:
// "::GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__KeyboardDescription::__OVRPlugin__KeyboardDescription(
    ::ArrayW<uint8_t, ::Array<uint8_t>*> Name, uint64_t TrackedKeyboardId, ::GlobalNamespace::__OVRPlugin__Vector3f Dimensions, ::GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags KeyboardFlags,
    ::GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles SupportedPresentationStyles) noexcept {
  this->Name = Name;
  this->TrackedKeyboardId = TrackedKeyboardId;
  this->Dimensions = Dimensions;
  this->KeyboardFlags = KeyboardFlags;
  this->SupportedPresentationStyles = SupportedPresentationStyles;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__KeyboardDescription::__OVRPlugin__KeyboardDescription() {}
// Ctor Parameters [CppParam { name: "IsValid", ty: "bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "IsEyeFollowingBlendshapesValid", ty: "bool", modifiers: "", def_value: Some("{}")
// }]
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpressionStatus::__OVRPlugin__FaceExpressionStatus(bool IsValid, bool IsEyeFollowingBlendshapesValid) noexcept {
  this->IsValid = IsValid;
  this->IsEyeFollowingBlendshapesValid = IsEyeFollowingBlendshapesValid;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpressionStatus::__OVRPlugin__FaceExpressionStatus() {}
// Ctor Parameters [CppParam { name: "ExpressionWeights", ty: "::ArrayW<float_t,::Array<float_t>*>", modifiers: "", def_value: Some("nullptr") }, CppParam { name: "ExpressionWeightConfidences", ty:
// "::ArrayW<float_t,::Array<float_t>*>", modifiers: "", def_value: Some("nullptr") }, CppParam { name: "Status", ty: "::GlobalNamespace::__OVRPlugin__FaceExpressionStatus", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "Time", ty: "double_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__FaceState::__OVRPlugin__FaceState(::ArrayW<float_t, ::Array<float_t>*> ExpressionWeights, ::ArrayW<float_t, ::Array<float_t>*> ExpressionWeightConfidences,
                                                                            ::GlobalNamespace::__OVRPlugin__FaceExpressionStatus Status, double_t Time) noexcept {
  this->ExpressionWeights = ExpressionWeights;
  this->ExpressionWeightConfidences = ExpressionWeightConfidences;
  this->Status = Status;
  this->Time = Time;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__FaceState::__OVRPlugin__FaceState() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal.ToFaceExpressionStatus
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__FaceExpressionStatus (
    ::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal::*)()>(&::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal::ToFaceExpressionStatus)> {
  constexpr static std::size_t size = 0x1c;
  constexpr static std::size_t addrs = 0x276d62c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal>::get(), "ToFaceExpressionStatus",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
inline ::GlobalNamespace::__OVRPlugin__FaceExpressionStatus GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal::ToFaceExpressionStatus() {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal>::get(), "ToFaceExpressionStatus",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__FaceExpressionStatus, false>(this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "IsValid", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "IsEyeFollowingBlendshapesValid", ty:
// "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal::__OVRPlugin__FaceExpressionStatusInternal(::GlobalNamespace::__OVRPlugin__Bool IsValid,
                                                                                                                  ::GlobalNamespace::__OVRPlugin__Bool IsEyeFollowingBlendshapesValid) noexcept {
  this->IsValid = IsValid;
  this->IsEyeFollowingBlendshapesValid = IsEyeFollowingBlendshapesValid;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal::__OVRPlugin__FaceExpressionStatusInternal() {}
// Ctor Parameters [CppParam { name: "ExpressionWeights_0", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_1", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_2", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_3", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_4", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_5", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_6", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_7", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_8", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_9", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_10", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_11", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_12", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_13", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_14", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_15", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_16", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_17", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_18", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_19", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_20", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_21", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_22", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_23", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_24", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_25", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_26", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_27", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_28", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_29", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_30", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_31", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_32", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_33", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_34", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_35", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_36", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_37", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_38", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_39", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_40", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_41", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_42", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_43", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_44", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_45", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_46", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_47", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_48", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_49", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_50", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_51", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_52", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_53", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_54", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_55", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_56", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_57", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_58", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_59", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_60", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_61", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_62", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeightConfidences_0", ty: "float_t", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "ExpressionWeightConfidences_1", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Status", ty:
// "::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal", modifiers: "", def_value: Some("{}") }, CppParam { name: "Time", ty: "double_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__FaceStateInternal::__OVRPlugin__FaceStateInternal(
    float_t ExpressionWeights_0, float_t ExpressionWeights_1, float_t ExpressionWeights_2, float_t ExpressionWeights_3, float_t ExpressionWeights_4, float_t ExpressionWeights_5,
    float_t ExpressionWeights_6, float_t ExpressionWeights_7, float_t ExpressionWeights_8, float_t ExpressionWeights_9, float_t ExpressionWeights_10, float_t ExpressionWeights_11,
    float_t ExpressionWeights_12, float_t ExpressionWeights_13, float_t ExpressionWeights_14, float_t ExpressionWeights_15, float_t ExpressionWeights_16, float_t ExpressionWeights_17,
    float_t ExpressionWeights_18, float_t ExpressionWeights_19, float_t ExpressionWeights_20, float_t ExpressionWeights_21, float_t ExpressionWeights_22, float_t ExpressionWeights_23,
    float_t ExpressionWeights_24, float_t ExpressionWeights_25, float_t ExpressionWeights_26, float_t ExpressionWeights_27, float_t ExpressionWeights_28, float_t ExpressionWeights_29,
    float_t ExpressionWeights_30, float_t ExpressionWeights_31, float_t ExpressionWeights_32, float_t ExpressionWeights_33, float_t ExpressionWeights_34, float_t ExpressionWeights_35,
    float_t ExpressionWeights_36, float_t ExpressionWeights_37, float_t ExpressionWeights_38, float_t ExpressionWeights_39, float_t ExpressionWeights_40, float_t ExpressionWeights_41,
    float_t ExpressionWeights_42, float_t ExpressionWeights_43, float_t ExpressionWeights_44, float_t ExpressionWeights_45, float_t ExpressionWeights_46, float_t ExpressionWeights_47,
    float_t ExpressionWeights_48, float_t ExpressionWeights_49, float_t ExpressionWeights_50, float_t ExpressionWeights_51, float_t ExpressionWeights_52, float_t ExpressionWeights_53,
    float_t ExpressionWeights_54, float_t ExpressionWeights_55, float_t ExpressionWeights_56, float_t ExpressionWeights_57, float_t ExpressionWeights_58, float_t ExpressionWeights_59,
    float_t ExpressionWeights_60, float_t ExpressionWeights_61, float_t ExpressionWeights_62, float_t ExpressionWeightConfidences_0, float_t ExpressionWeightConfidences_1,
    ::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal Status, double_t Time) noexcept {
  this->ExpressionWeights_0 = ExpressionWeights_0;
  this->ExpressionWeights_1 = ExpressionWeights_1;
  this->ExpressionWeights_2 = ExpressionWeights_2;
  this->ExpressionWeights_3 = ExpressionWeights_3;
  this->ExpressionWeights_4 = ExpressionWeights_4;
  this->ExpressionWeights_5 = ExpressionWeights_5;
  this->ExpressionWeights_6 = ExpressionWeights_6;
  this->ExpressionWeights_7 = ExpressionWeights_7;
  this->ExpressionWeights_8 = ExpressionWeights_8;
  this->ExpressionWeights_9 = ExpressionWeights_9;
  this->ExpressionWeights_10 = ExpressionWeights_10;
  this->ExpressionWeights_11 = ExpressionWeights_11;
  this->ExpressionWeights_12 = ExpressionWeights_12;
  this->ExpressionWeights_13 = ExpressionWeights_13;
  this->ExpressionWeights_14 = ExpressionWeights_14;
  this->ExpressionWeights_15 = ExpressionWeights_15;
  this->ExpressionWeights_16 = ExpressionWeights_16;
  this->ExpressionWeights_17 = ExpressionWeights_17;
  this->ExpressionWeights_18 = ExpressionWeights_18;
  this->ExpressionWeights_19 = ExpressionWeights_19;
  this->ExpressionWeights_20 = ExpressionWeights_20;
  this->ExpressionWeights_21 = ExpressionWeights_21;
  this->ExpressionWeights_22 = ExpressionWeights_22;
  this->ExpressionWeights_23 = ExpressionWeights_23;
  this->ExpressionWeights_24 = ExpressionWeights_24;
  this->ExpressionWeights_25 = ExpressionWeights_25;
  this->ExpressionWeights_26 = ExpressionWeights_26;
  this->ExpressionWeights_27 = ExpressionWeights_27;
  this->ExpressionWeights_28 = ExpressionWeights_28;
  this->ExpressionWeights_29 = ExpressionWeights_29;
  this->ExpressionWeights_30 = ExpressionWeights_30;
  this->ExpressionWeights_31 = ExpressionWeights_31;
  this->ExpressionWeights_32 = ExpressionWeights_32;
  this->ExpressionWeights_33 = ExpressionWeights_33;
  this->ExpressionWeights_34 = ExpressionWeights_34;
  this->ExpressionWeights_35 = ExpressionWeights_35;
  this->ExpressionWeights_36 = ExpressionWeights_36;
  this->ExpressionWeights_37 = ExpressionWeights_37;
  this->ExpressionWeights_38 = ExpressionWeights_38;
  this->ExpressionWeights_39 = ExpressionWeights_39;
  this->ExpressionWeights_40 = ExpressionWeights_40;
  this->ExpressionWeights_41 = ExpressionWeights_41;
  this->ExpressionWeights_42 = ExpressionWeights_42;
  this->ExpressionWeights_43 = ExpressionWeights_43;
  this->ExpressionWeights_44 = ExpressionWeights_44;
  this->ExpressionWeights_45 = ExpressionWeights_45;
  this->ExpressionWeights_46 = ExpressionWeights_46;
  this->ExpressionWeights_47 = ExpressionWeights_47;
  this->ExpressionWeights_48 = ExpressionWeights_48;
  this->ExpressionWeights_49 = ExpressionWeights_49;
  this->ExpressionWeights_50 = ExpressionWeights_50;
  this->ExpressionWeights_51 = ExpressionWeights_51;
  this->ExpressionWeights_52 = ExpressionWeights_52;
  this->ExpressionWeights_53 = ExpressionWeights_53;
  this->ExpressionWeights_54 = ExpressionWeights_54;
  this->ExpressionWeights_55 = ExpressionWeights_55;
  this->ExpressionWeights_56 = ExpressionWeights_56;
  this->ExpressionWeights_57 = ExpressionWeights_57;
  this->ExpressionWeights_58 = ExpressionWeights_58;
  this->ExpressionWeights_59 = ExpressionWeights_59;
  this->ExpressionWeights_60 = ExpressionWeights_60;
  this->ExpressionWeights_61 = ExpressionWeights_61;
  this->ExpressionWeights_62 = ExpressionWeights_62;
  this->ExpressionWeightConfidences_0 = ExpressionWeightConfidences_0;
  this->ExpressionWeightConfidences_1 = ExpressionWeightConfidences_1;
  this->Status = Status;
  this->Time = Time;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__FaceStateInternal::__OVRPlugin__FaceStateInternal() {}
// Ctor Parameters [CppParam { name: "ExpressionWeights_0", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_1", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_2", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_3", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_4", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_5", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_6", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_7", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_8", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_9", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_10", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_11", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_12", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_13", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_14", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_15", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_16", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_17", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_18", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_19", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_20", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_21", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_22", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_23", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_24", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_25", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_26", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_27", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_28", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_29", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_30", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_31", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_32", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_33", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_34", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_35", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_36", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_37", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_38", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_39", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_40", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_41", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_42", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_43", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_44", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_45", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_46", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_47", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_48", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_49", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_50", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_51", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_52", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_53", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_54", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_55", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_56", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_57", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_58", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_59", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_60", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_61", ty: "float_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "ExpressionWeights_62", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeightConfidences_0", ty: "float_t", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "ExpressionWeightConfidences_1", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Status", ty:
// "::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal", modifiers: "", def_value: Some("{}") }, CppParam { name: "Time", ty: "double_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__FaceState2Internal::__OVRPlugin__FaceState2Internal(
    float_t ExpressionWeights_0, float_t ExpressionWeights_1, float_t ExpressionWeights_2, float_t ExpressionWeights_3, float_t ExpressionWeights_4, float_t ExpressionWeights_5,
    float_t ExpressionWeights_6, float_t ExpressionWeights_7, float_t ExpressionWeights_8, float_t ExpressionWeights_9, float_t ExpressionWeights_10, float_t ExpressionWeights_11,
    float_t ExpressionWeights_12, float_t ExpressionWeights_13, float_t ExpressionWeights_14, float_t ExpressionWeights_15, float_t ExpressionWeights_16, float_t ExpressionWeights_17,
    float_t ExpressionWeights_18, float_t ExpressionWeights_19, float_t ExpressionWeights_20, float_t ExpressionWeights_21, float_t ExpressionWeights_22, float_t ExpressionWeights_23,
    float_t ExpressionWeights_24, float_t ExpressionWeights_25, float_t ExpressionWeights_26, float_t ExpressionWeights_27, float_t ExpressionWeights_28, float_t ExpressionWeights_29,
    float_t ExpressionWeights_30, float_t ExpressionWeights_31, float_t ExpressionWeights_32, float_t ExpressionWeights_33, float_t ExpressionWeights_34, float_t ExpressionWeights_35,
    float_t ExpressionWeights_36, float_t ExpressionWeights_37, float_t ExpressionWeights_38, float_t ExpressionWeights_39, float_t ExpressionWeights_40, float_t ExpressionWeights_41,
    float_t ExpressionWeights_42, float_t ExpressionWeights_43, float_t ExpressionWeights_44, float_t ExpressionWeights_45, float_t ExpressionWeights_46, float_t ExpressionWeights_47,
    float_t ExpressionWeights_48, float_t ExpressionWeights_49, float_t ExpressionWeights_50, float_t ExpressionWeights_51, float_t ExpressionWeights_52, float_t ExpressionWeights_53,
    float_t ExpressionWeights_54, float_t ExpressionWeights_55, float_t ExpressionWeights_56, float_t ExpressionWeights_57, float_t ExpressionWeights_58, float_t ExpressionWeights_59,
    float_t ExpressionWeights_60, float_t ExpressionWeights_61, float_t ExpressionWeights_62, float_t ExpressionWeightConfidences_0, float_t ExpressionWeightConfidences_1,
    ::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal Status, double_t Time) noexcept {
  this->ExpressionWeights_0 = ExpressionWeights_0;
  this->ExpressionWeights_1 = ExpressionWeights_1;
  this->ExpressionWeights_2 = ExpressionWeights_2;
  this->ExpressionWeights_3 = ExpressionWeights_3;
  this->ExpressionWeights_4 = ExpressionWeights_4;
  this->ExpressionWeights_5 = ExpressionWeights_5;
  this->ExpressionWeights_6 = ExpressionWeights_6;
  this->ExpressionWeights_7 = ExpressionWeights_7;
  this->ExpressionWeights_8 = ExpressionWeights_8;
  this->ExpressionWeights_9 = ExpressionWeights_9;
  this->ExpressionWeights_10 = ExpressionWeights_10;
  this->ExpressionWeights_11 = ExpressionWeights_11;
  this->ExpressionWeights_12 = ExpressionWeights_12;
  this->ExpressionWeights_13 = ExpressionWeights_13;
  this->ExpressionWeights_14 = ExpressionWeights_14;
  this->ExpressionWeights_15 = ExpressionWeights_15;
  this->ExpressionWeights_16 = ExpressionWeights_16;
  this->ExpressionWeights_17 = ExpressionWeights_17;
  this->ExpressionWeights_18 = ExpressionWeights_18;
  this->ExpressionWeights_19 = ExpressionWeights_19;
  this->ExpressionWeights_20 = ExpressionWeights_20;
  this->ExpressionWeights_21 = ExpressionWeights_21;
  this->ExpressionWeights_22 = ExpressionWeights_22;
  this->ExpressionWeights_23 = ExpressionWeights_23;
  this->ExpressionWeights_24 = ExpressionWeights_24;
  this->ExpressionWeights_25 = ExpressionWeights_25;
  this->ExpressionWeights_26 = ExpressionWeights_26;
  this->ExpressionWeights_27 = ExpressionWeights_27;
  this->ExpressionWeights_28 = ExpressionWeights_28;
  this->ExpressionWeights_29 = ExpressionWeights_29;
  this->ExpressionWeights_30 = ExpressionWeights_30;
  this->ExpressionWeights_31 = ExpressionWeights_31;
  this->ExpressionWeights_32 = ExpressionWeights_32;
  this->ExpressionWeights_33 = ExpressionWeights_33;
  this->ExpressionWeights_34 = ExpressionWeights_34;
  this->ExpressionWeights_35 = ExpressionWeights_35;
  this->ExpressionWeights_36 = ExpressionWeights_36;
  this->ExpressionWeights_37 = ExpressionWeights_37;
  this->ExpressionWeights_38 = ExpressionWeights_38;
  this->ExpressionWeights_39 = ExpressionWeights_39;
  this->ExpressionWeights_40 = ExpressionWeights_40;
  this->ExpressionWeights_41 = ExpressionWeights_41;
  this->ExpressionWeights_42 = ExpressionWeights_42;
  this->ExpressionWeights_43 = ExpressionWeights_43;
  this->ExpressionWeights_44 = ExpressionWeights_44;
  this->ExpressionWeights_45 = ExpressionWeights_45;
  this->ExpressionWeights_46 = ExpressionWeights_46;
  this->ExpressionWeights_47 = ExpressionWeights_47;
  this->ExpressionWeights_48 = ExpressionWeights_48;
  this->ExpressionWeights_49 = ExpressionWeights_49;
  this->ExpressionWeights_50 = ExpressionWeights_50;
  this->ExpressionWeights_51 = ExpressionWeights_51;
  this->ExpressionWeights_52 = ExpressionWeights_52;
  this->ExpressionWeights_53 = ExpressionWeights_53;
  this->ExpressionWeights_54 = ExpressionWeights_54;
  this->ExpressionWeights_55 = ExpressionWeights_55;
  this->ExpressionWeights_56 = ExpressionWeights_56;
  this->ExpressionWeights_57 = ExpressionWeights_57;
  this->ExpressionWeights_58 = ExpressionWeights_58;
  this->ExpressionWeights_59 = ExpressionWeights_59;
  this->ExpressionWeights_60 = ExpressionWeights_60;
  this->ExpressionWeights_61 = ExpressionWeights_61;
  this->ExpressionWeights_62 = ExpressionWeights_62;
  this->ExpressionWeightConfidences_0 = ExpressionWeightConfidences_0;
  this->ExpressionWeightConfidences_1 = ExpressionWeightConfidences_1;
  this->Status = Status;
  this->Time = Time;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__FaceState2Internal::__OVRPlugin__FaceState2Internal() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__FaceRegionConfidence::__OVRPlugin__FaceRegionConfidence(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__FaceRegionConfidence::__OVRPlugin__FaceRegionConfidence() {}
constexpr ::GlobalNamespace::__OVRPlugin__FaceRegionConfidence GlobalNamespace::__OVRPlugin__FaceRegionConfidence::Lower{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceRegionConfidence GlobalNamespace::__OVRPlugin__FaceRegionConfidence::Upper{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceRegionConfidence GlobalNamespace::__OVRPlugin__FaceRegionConfidence::Max{ static_cast<int32_t>(0x2) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression::__OVRPlugin__FaceExpression(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression::__OVRPlugin__FaceExpression() {}
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Invalid{ static_cast<int32_t>(0xffffffff) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Brow_Lowerer_L{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Brow_Lowerer_R{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Cheek_Puff_L{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Cheek_Puff_R{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Cheek_Raiser_L{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Cheek_Raiser_R{ static_cast<int32_t>(0x5) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Cheek_Suck_L{ static_cast<int32_t>(0x6) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Cheek_Suck_R{ static_cast<int32_t>(0x7) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Chin_Raiser_B{ static_cast<int32_t>(0x8) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Chin_Raiser_T{ static_cast<int32_t>(0x9) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Dimpler_L{ static_cast<int32_t>(0xa) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Dimpler_R{ static_cast<int32_t>(0xb) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Eyes_Closed_L{ static_cast<int32_t>(0xc) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Eyes_Closed_R{ static_cast<int32_t>(0xd) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Eyes_Look_Down_L{ static_cast<int32_t>(0xe) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Eyes_Look_Down_R{ static_cast<int32_t>(0xf) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Eyes_Look_Left_L{ static_cast<int32_t>(0x10) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Eyes_Look_Left_R{ static_cast<int32_t>(0x11) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Eyes_Look_Right_L{ static_cast<int32_t>(0x12) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Eyes_Look_Right_R{ static_cast<int32_t>(0x13) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Eyes_Look_Up_L{ static_cast<int32_t>(0x14) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Eyes_Look_Up_R{ static_cast<int32_t>(0x15) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Inner_Brow_Raiser_L{ static_cast<int32_t>(0x16) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Inner_Brow_Raiser_R{ static_cast<int32_t>(0x17) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Jaw_Drop{ static_cast<int32_t>(0x18) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Jaw_Sideways_Left{ static_cast<int32_t>(0x19) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Jaw_Sideways_Right{ static_cast<int32_t>(0x1a) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Jaw_Thrust{ static_cast<int32_t>(0x1b) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lid_Tightener_L{ static_cast<int32_t>(0x1c) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lid_Tightener_R{ static_cast<int32_t>(0x1d) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Corner_Depressor_L{ static_cast<int32_t>(0x1e) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Corner_Depressor_R{ static_cast<int32_t>(0x1f) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Corner_Puller_L{ static_cast<int32_t>(0x20) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Corner_Puller_R{ static_cast<int32_t>(0x21) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Funneler_LB{ static_cast<int32_t>(0x22) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Funneler_LT{ static_cast<int32_t>(0x23) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Funneler_RB{ static_cast<int32_t>(0x24) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Funneler_RT{ static_cast<int32_t>(0x25) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Pressor_L{ static_cast<int32_t>(0x26) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Pressor_R{ static_cast<int32_t>(0x27) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Pucker_L{ static_cast<int32_t>(0x28) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Pucker_R{ static_cast<int32_t>(0x29) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Stretcher_L{ static_cast<int32_t>(0x2a) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Stretcher_R{ static_cast<int32_t>(0x2b) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Suck_LB{ static_cast<int32_t>(0x2c) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Suck_LT{ static_cast<int32_t>(0x2d) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Suck_RB{ static_cast<int32_t>(0x2e) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Suck_RT{ static_cast<int32_t>(0x2f) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Tightener_L{ static_cast<int32_t>(0x30) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Tightener_R{ static_cast<int32_t>(0x31) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lips_Toward{ static_cast<int32_t>(0x32) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lower_Lip_Depressor_L{ static_cast<int32_t>(0x33) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Lower_Lip_Depressor_R{ static_cast<int32_t>(0x34) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Mouth_Left{ static_cast<int32_t>(0x35) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Mouth_Right{ static_cast<int32_t>(0x36) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Nose_Wrinkler_L{ static_cast<int32_t>(0x37) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Nose_Wrinkler_R{ static_cast<int32_t>(0x38) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Outer_Brow_Raiser_L{ static_cast<int32_t>(0x39) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Outer_Brow_Raiser_R{ static_cast<int32_t>(0x3a) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Upper_Lid_Raiser_L{ static_cast<int32_t>(0x3b) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Upper_Lid_Raiser_R{ static_cast<int32_t>(0x3c) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Upper_Lip_Raiser_L{ static_cast<int32_t>(0x3d) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Upper_Lip_Raiser_R{ static_cast<int32_t>(0x3e) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression GlobalNamespace::__OVRPlugin__FaceExpression::Max{ static_cast<int32_t>(0x3f) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__FaceConstants::__OVRPlugin__FaceConstants(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__FaceConstants::__OVRPlugin__FaceConstants() {}
constexpr ::GlobalNamespace::__OVRPlugin__FaceConstants GlobalNamespace::__OVRPlugin__FaceConstants::MaxFaceExpressions{ static_cast<int32_t>(0x3f) };
constexpr ::GlobalNamespace::__OVRPlugin__FaceConstants GlobalNamespace::__OVRPlugin__FaceConstants::MaxFaceRegionConfidences{ static_cast<int32_t>(0x2) };
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__EyeGazeState.get_IsValid
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (::GlobalNamespace::__OVRPlugin__EyeGazeState::*)()>(
    &::GlobalNamespace::__OVRPlugin__EyeGazeState::get_IsValid)> {
  constexpr static std::size_t size = 0x10;
  constexpr static std::size_t addrs = 0x276d648;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__EyeGazeState>::get(),
                                                                               "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
inline bool GlobalNamespace::__OVRPlugin__EyeGazeState::get_IsValid() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__EyeGazeState>::get(), "get_IsValid",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "Pose", ty: "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }, CppParam { name: "Confidence", ty: "float_t", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "_isValid", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__EyeGazeState::__OVRPlugin__EyeGazeState(::GlobalNamespace::__OVRPlugin__Posef Pose, float_t Confidence,
                                                                                  ::GlobalNamespace::__OVRPlugin__Bool _isValid) noexcept {
  this->Pose = Pose;
  this->Confidence = Confidence;
  this->_isValid = _isValid;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__EyeGazeState::__OVRPlugin__EyeGazeState() {}
// Ctor Parameters [CppParam { name: "EyeGazes", ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__EyeGazeState,::Array<::GlobalNamespace::__OVRPlugin__EyeGazeState>*>", modifiers: "", def_value:
// Some("nullptr") }, CppParam { name: "Time", ty: "double_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__EyeGazesState::__OVRPlugin__EyeGazesState(
    ::ArrayW<::GlobalNamespace::__OVRPlugin__EyeGazeState, ::Array<::GlobalNamespace::__OVRPlugin__EyeGazeState>*> EyeGazes, double_t Time) noexcept {
  this->EyeGazes = EyeGazes;
  this->Time = Time;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__EyeGazesState::__OVRPlugin__EyeGazesState() {}
// Ctor Parameters [CppParam { name: "EyeGazes_0", ty: "::GlobalNamespace::__OVRPlugin__EyeGazeState", modifiers: "", def_value: Some("{}") }, CppParam { name: "EyeGazes_1", ty:
// "::GlobalNamespace::__OVRPlugin__EyeGazeState", modifiers: "", def_value: Some("{}") }, CppParam { name: "Time", ty: "double_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__EyeGazesStateInternal::__OVRPlugin__EyeGazesStateInternal(::GlobalNamespace::__OVRPlugin__EyeGazeState EyeGazes_0,
                                                                                                    ::GlobalNamespace::__OVRPlugin__EyeGazeState EyeGazes_1, double_t Time) noexcept {
  this->EyeGazes_0 = EyeGazes_0;
  this->EyeGazes_1 = EyeGazes_1;
  this->Time = Time;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__EyeGazesStateInternal::__OVRPlugin__EyeGazesStateInternal() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__ColorSpace::__OVRPlugin__ColorSpace(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__ColorSpace::__OVRPlugin__ColorSpace() {}
constexpr ::GlobalNamespace::__OVRPlugin__ColorSpace GlobalNamespace::__OVRPlugin__ColorSpace::Unknown{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__ColorSpace GlobalNamespace::__OVRPlugin__ColorSpace::Unmanaged{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__ColorSpace GlobalNamespace::__OVRPlugin__ColorSpace::Rec_2020{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__ColorSpace GlobalNamespace::__OVRPlugin__ColorSpace::Rec_709{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__ColorSpace GlobalNamespace::__OVRPlugin__ColorSpace::Rift_CV1{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__ColorSpace GlobalNamespace::__OVRPlugin__ColorSpace::Rift_S{ static_cast<int32_t>(0x5) };
constexpr ::GlobalNamespace::__OVRPlugin__ColorSpace GlobalNamespace::__OVRPlugin__ColorSpace::Quest{ static_cast<int32_t>(0x6) };
constexpr ::GlobalNamespace::__OVRPlugin__ColorSpace GlobalNamespace::__OVRPlugin__ColorSpace::P3{ static_cast<int32_t>(0x7) };
constexpr ::GlobalNamespace::__OVRPlugin__ColorSpace GlobalNamespace::__OVRPlugin__ColorSpace::Adobe_RGB{ static_cast<int32_t>(0x8) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__EventType::__OVRPlugin__EventType(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__EventType::__OVRPlugin__EventType() {}
constexpr ::GlobalNamespace::__OVRPlugin__EventType GlobalNamespace::__OVRPlugin__EventType::Unknown{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__EventType GlobalNamespace::__OVRPlugin__EventType::DisplayRefreshRateChanged{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__EventType GlobalNamespace::__OVRPlugin__EventType::SpatialAnchorCreateComplete{ static_cast<int32_t>(0x31) };
constexpr ::GlobalNamespace::__OVRPlugin__EventType GlobalNamespace::__OVRPlugin__EventType::SpaceSetComponentStatusComplete{ static_cast<int32_t>(0x32) };
constexpr ::GlobalNamespace::__OVRPlugin__EventType GlobalNamespace::__OVRPlugin__EventType::SpaceQueryResults{ static_cast<int32_t>(0x33) };
constexpr ::GlobalNamespace::__OVRPlugin__EventType GlobalNamespace::__OVRPlugin__EventType::SpaceQueryComplete{ static_cast<int32_t>(0x34) };
constexpr ::GlobalNamespace::__OVRPlugin__EventType GlobalNamespace::__OVRPlugin__EventType::SpaceSaveComplete{ static_cast<int32_t>(0x35) };
constexpr ::GlobalNamespace::__OVRPlugin__EventType GlobalNamespace::__OVRPlugin__EventType::SpaceEraseComplete{ static_cast<int32_t>(0x36) };
constexpr ::GlobalNamespace::__OVRPlugin__EventType GlobalNamespace::__OVRPlugin__EventType::SpaceShareResult{ static_cast<int32_t>(0x38) };
constexpr ::GlobalNamespace::__OVRPlugin__EventType GlobalNamespace::__OVRPlugin__EventType::SpaceListSaveResult{ static_cast<int32_t>(0x39) };
constexpr ::GlobalNamespace::__OVRPlugin__EventType GlobalNamespace::__OVRPlugin__EventType::SceneCaptureComplete{ static_cast<int32_t>(0x64) };
constexpr ::GlobalNamespace::__OVRPlugin__EventType GlobalNamespace::__OVRPlugin__EventType::VirtualKeyboardCommitText{ static_cast<int32_t>(0xc9) };
constexpr ::GlobalNamespace::__OVRPlugin__EventType GlobalNamespace::__OVRPlugin__EventType::VirtualKeyboardBackspace{ static_cast<int32_t>(0xca) };
constexpr ::GlobalNamespace::__OVRPlugin__EventType GlobalNamespace::__OVRPlugin__EventType::VirtualKeyboardEnter{ static_cast<int32_t>(0xcb) };
constexpr ::GlobalNamespace::__OVRPlugin__EventType GlobalNamespace::__OVRPlugin__EventType::VirtualKeyboardShown{ static_cast<int32_t>(0xcc) };
constexpr ::GlobalNamespace::__OVRPlugin__EventType GlobalNamespace::__OVRPlugin__EventType::VirtualKeyboardHidden{ static_cast<int32_t>(0xcd) };
// Ctor Parameters [CppParam { name: "EventType", ty: "::GlobalNamespace::__OVRPlugin__EventType", modifiers: "", def_value: Some("{}") }, CppParam { name: "EventData", ty:
// "::ArrayW<uint8_t,::Array<uint8_t>*>", modifiers: "", def_value: Some("nullptr") }]
constexpr ::GlobalNamespace::__OVRPlugin__EventDataBuffer::__OVRPlugin__EventDataBuffer(::GlobalNamespace::__OVRPlugin__EventType EventType, ::ArrayW<uint8_t, ::Array<uint8_t>*> EventData) noexcept {
  this->EventType = EventType;
  this->EventData = EventData;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__EventDataBuffer::__OVRPlugin__EventDataBuffer() {}
// Ctor Parameters [CppParam { name: "ModelName", ty: "::StringW", modifiers: "", def_value: Some("nullptr") }, CppParam { name: "ModelKey", ty: "uint64_t", modifiers: "", def_value: Some("{}") },
// CppParam { name: "VendorId", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ModelVersion", ty: "uint32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__RenderModelProperties::__OVRPlugin__RenderModelProperties(::StringW ModelName, uint64_t ModelKey, uint32_t VendorId, uint32_t ModelVersion) noexcept {
  this->ModelName = ModelName;
  this->ModelKey = ModelKey;
  this->VendorId = VendorId;
  this->ModelVersion = ModelVersion;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__RenderModelProperties::__OVRPlugin__RenderModelProperties() {}
// Ctor Parameters [CppParam { name: "ModelName", ty: "::ArrayW<uint8_t,::Array<uint8_t>*>", modifiers: "", def_value: Some("nullptr") }, CppParam { name: "ModelKey", ty: "uint64_t", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "VendorId", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ModelVersion", ty: "uint32_t", modifiers: "", def_value: Some("{}")
// }]
constexpr ::GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal::__OVRPlugin__RenderModelPropertiesInternal(::ArrayW<uint8_t, ::Array<uint8_t>*> ModelName, uint64_t ModelKey,
                                                                                                                    uint32_t VendorId, uint32_t ModelVersion) noexcept {
  this->ModelName = ModelName;
  this->ModelKey = ModelKey;
  this->VendorId = VendorId;
  this->ModelVersion = ModelVersion;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal::__OVRPlugin__RenderModelPropertiesInternal() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__RenderModelFlags::__OVRPlugin__RenderModelFlags(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__RenderModelFlags::__OVRPlugin__RenderModelFlags() {}
constexpr ::GlobalNamespace::__OVRPlugin__RenderModelFlags GlobalNamespace::__OVRPlugin__RenderModelFlags::SupportsGltf20Subset1{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__RenderModelFlags GlobalNamespace::__OVRPlugin__RenderModelFlags::SupportsGltf20Subset2{ static_cast<int32_t>(0x2) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType::__OVRPlugin__VirtualKeyboardLocationType(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType::__OVRPlugin__VirtualKeyboardLocationType() {}
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType::Custom{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType::Far{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType::Direct{ static_cast<int32_t>(0x2) };
// Ctor Parameters [CppParam { name: "locationType", ty: "::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType", modifiers: "", def_value: Some("{}") }, CppParam { name: "pose", ty:
// "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo::__OVRPlugin__VirtualKeyboardSpaceCreateInfo(::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType locationType,
                                                                                                                      ::GlobalNamespace::__OVRPlugin__Posef pose) noexcept {
  this->locationType = locationType;
  this->pose = pose;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo::__OVRPlugin__VirtualKeyboardSpaceCreateInfo() {}
// Ctor Parameters [CppParam { name: "locationType", ty: "::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType", modifiers: "", def_value: Some("{}") }, CppParam { name: "pose", ty:
// "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }, CppParam { name: "scale", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo::__OVRPlugin__VirtualKeyboardLocationInfo(::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType locationType,
                                                                                                                ::GlobalNamespace::__OVRPlugin__Posef pose, float_t scale) noexcept {
  this->locationType = locationType;
  this->pose = pose;
  this->scale = scale;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo::__OVRPlugin__VirtualKeyboardLocationInfo() {}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardCreateInfo::__OVRPlugin__VirtualKeyboardCreateInfo() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::__OVRPlugin__VirtualKeyboardInputSource(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::__OVRPlugin__VirtualKeyboardInputSource() {}
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::Invalid{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::ControllerRayLeft{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::ControllerRayRight{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::HandRayLeft{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::HandRayRight{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::ControllerDirectLeft{ static_cast<int32_t>(0x5) };
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::ControllerDirectRight{ static_cast<int32_t>(0x6) };
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::HandDirectIndexTipLeft{ static_cast<int32_t>(0x7) };
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::HandDirectIndexTipRight{ static_cast<int32_t>(0x8) };
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::EnumSize{ static_cast<int32_t>(0x7fffffff) };
// Ctor Parameters [CppParam { name: "value__", ty: "uint64_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputStateFlags::__OVRPlugin__VirtualKeyboardInputStateFlags(uint64_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputStateFlags::__OVRPlugin__VirtualKeyboardInputStateFlags() {}
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputStateFlags GlobalNamespace::__OVRPlugin__VirtualKeyboardInputStateFlags::IsPressed{ static_cast<uint64_t>(0x1u) };
// Ctor Parameters [CppParam { name: "inputSource", ty: "::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource", modifiers: "", def_value: Some("{}") }, CppParam { name: "inputPose", ty:
// "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }, CppParam { name: "inputState", ty: "::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputStateFlags", modifiers: "",
// def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo::__OVRPlugin__VirtualKeyboardInputInfo(::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource inputSource,
                                                                                                          ::GlobalNamespace::__OVRPlugin__Posef inputPose,
                                                                                                          ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputStateFlags inputState) noexcept {
  this->inputSource = inputSource;
  this->inputPose = inputPose;
  this->inputState = inputState;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo::__OVRPlugin__VirtualKeyboardInputInfo() {}
// Ctor Parameters [CppParam { name: "AnimationIndex", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Fraction", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState::__OVRPlugin__VirtualKeyboardModelAnimationState(int32_t AnimationIndex, float_t Fraction) noexcept {
  this->AnimationIndex = AnimationIndex;
  this->Fraction = Fraction;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState::__OVRPlugin__VirtualKeyboardModelAnimationState() {}
// Ctor Parameters [CppParam { name: "States", ty:
// "::ArrayW<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState,::Array<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState>*>", modifiers: "", def_value:
// Some("nullptr") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStates::__OVRPlugin__VirtualKeyboardModelAnimationStates(
    ::ArrayW<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState, ::Array<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState>*> States) noexcept {
  this->States = States;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStates::__OVRPlugin__VirtualKeyboardModelAnimationStates() {}
// Ctor Parameters [CppParam { name: "StateCapacityInput", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "StateCountOutput", ty: "uint32_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "StatesBuffer", ty: "void*", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal(uint32_t StateCapacityInput, uint32_t StateCountOutput,
                                                                                                                                                void* StatesBuffer) noexcept {
  this->StateCapacityInput = StateCapacityInput;
  this->StateCountOutput = StateCountOutput;
  this->StatesBuffer = StatesBuffer;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal() {}
// Ctor Parameters [CppParam { name: "TextureIds", ty: "::ArrayW<uint64_t,::Array<uint64_t>*>", modifiers: "", def_value: Some("nullptr") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIds::__OVRPlugin__VirtualKeyboardTextureIds(::ArrayW<uint64_t, ::Array<uint64_t>*> TextureIds) noexcept {
  this->TextureIds = TextureIds;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIds::__OVRPlugin__VirtualKeyboardTextureIds() {}
// Ctor Parameters [CppParam { name: "TextureIdCapacityInput", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureIdCountOutput", ty: "uint32_t", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "TextureIdsBuffer", ty: "void*", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIdsInternal::__OVRPlugin__VirtualKeyboardTextureIdsInternal(uint32_t TextureIdCapacityInput, uint32_t TextureIdCountOutput,
                                                                                                                            void* TextureIdsBuffer) noexcept {
  this->TextureIdCapacityInput = TextureIdCapacityInput;
  this->TextureIdCountOutput = TextureIdCountOutput;
  this->TextureIdsBuffer = TextureIdsBuffer;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIdsInternal::__OVRPlugin__VirtualKeyboardTextureIdsInternal() {}
// Ctor Parameters [CppParam { name: "TextureWidth", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureHeight", ty: "uint32_t", modifiers: "", def_value: Some("{}") },
// CppParam { name: "BufferCapacityInput", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "BufferCountOutput", ty: "uint32_t", modifiers: "", def_value: Some("{}") },
// CppParam { name: "Buffer", ty: "void*", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData::__OVRPlugin__VirtualKeyboardTextureData(uint32_t TextureWidth, uint32_t TextureHeight, uint32_t BufferCapacityInput,
                                                                                                              uint32_t BufferCountOutput, void* Buffer) noexcept {
  this->TextureWidth = TextureWidth;
  this->TextureHeight = TextureHeight;
  this->BufferCapacityInput = BufferCapacityInput;
  this->BufferCountOutput = BufferCountOutput;
  this->Buffer = Buffer;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData::__OVRPlugin__VirtualKeyboardTextureData() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility.get_Visible
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility::*)()>(
    &::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility::get_Visible)> {
  constexpr static std::size_t size = 0x10;
  constexpr static std::size_t addrs = 0x276d658;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility>::get(), "get_Visible",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility.set_Visible
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility::*)(bool)>(
    &::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility::set_Visible)> {
  constexpr static std::size_t size = 0xc;
  constexpr static std::size_t addrs = 0x276d668;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility>::get(), "set_Visible",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
    return ___internal_method;
  }
};
inline bool GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility::get_Visible() {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility>::get(), "get_Visible",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(this, ___internal_method);
}
inline void GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility::set_Visible(bool value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility>::get(), "set_Visible",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(this, ___internal_method, value);
}
// Ctor Parameters [CppParam { name: "_visible", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility::__OVRPlugin__VirtualKeyboardModelVisibility(::GlobalNamespace::__OVRPlugin__Bool _visible) noexcept {
  this->_visible = _visible;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility::__OVRPlugin__VirtualKeyboardModelVisibility() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType::__OVRPlugin__InsightPassthroughColorMapType(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType::__OVRPlugin__InsightPassthroughColorMapType() {}
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType::None{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType::MonoToRgba{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType::MonoToMono{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType::BrightnessContrastSaturation{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType::ColorLut{ static_cast<int32_t>(0x6) };
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType::InterpolatedColorLut{ static_cast<int32_t>(0x7) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags::__OVRPlugin__InsightPassthroughStyleFlags(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags::__OVRPlugin__InsightPassthroughStyleFlags() {}
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags::HasTextureOpacityFactor{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags::HasEdgeColor{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags::HasTextureColorMap{ static_cast<int32_t>(0x4) };
// Ctor Parameters [CppParam { name: "Flags", ty: "::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureOpacityFactor", ty:
// "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "EdgeColor", ty: "::GlobalNamespace::__OVRPlugin__Colorf", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "TextureColorMapType", ty: "::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureColorMapDataSize", ty: "uint32_t",
// modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureColorMapData", ty: "void*", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle::__OVRPlugin__InsightPassthroughStyle(::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags Flags,
                                                                                                        float_t TextureOpacityFactor, ::GlobalNamespace::__OVRPlugin__Colorf EdgeColor,
                                                                                                        ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType TextureColorMapType,
                                                                                                        uint32_t TextureColorMapDataSize, void* TextureColorMapData) noexcept {
  this->Flags = Flags;
  this->TextureOpacityFactor = TextureOpacityFactor;
  this->EdgeColor = EdgeColor;
  this->TextureColorMapType = TextureColorMapType;
  this->TextureColorMapDataSize = TextureColorMapDataSize;
  this->TextureColorMapData = TextureColorMapData;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle::__OVRPlugin__InsightPassthroughStyle() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2.CopyTo
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::*)(
    ByRef<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle>)>(&::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::CopyTo)> {
  constexpr static std::size_t size = 0x24;
  constexpr static std::size_t addrs = 0x276d674;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2>::get(), "CopyTo", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::CopyTo(ByRef<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle> target) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2>::get(), "CopyTo", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle>>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(this, ___internal_method, target);
}
// Ctor Parameters [CppParam { name: "Flags", ty: "::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureOpacityFactor", ty:
// "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "EdgeColor", ty: "::GlobalNamespace::__OVRPlugin__Colorf", modifiers: "", def_value: Some("{}") }, CppParam { name:
// "TextureColorMapType", ty: "::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureColorMapDataSize", ty: "uint32_t",
// modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureColorMapData", ty: "void*", modifiers: "", def_value: Some("{}") }, CppParam { name: "LutSource", ty: "uint64_t", modifiers: "",
// def_value: Some("{}") }, CppParam { name: "LutTarget", ty: "uint64_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LutWeight", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__OVRPlugin__InsightPassthroughStyle2(::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags Flags,
                                                                                                          float_t TextureOpacityFactor, ::GlobalNamespace::__OVRPlugin__Colorf EdgeColor,
                                                                                                          ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType TextureColorMapType,
                                                                                                          uint32_t TextureColorMapDataSize, void* TextureColorMapData, uint64_t LutSource,
                                                                                                          uint64_t LutTarget, float_t LutWeight) noexcept {
  this->Flags = Flags;
  this->TextureOpacityFactor = TextureOpacityFactor;
  this->EdgeColor = EdgeColor;
  this->TextureColorMapType = TextureColorMapType;
  this->TextureColorMapDataSize = TextureColorMapDataSize;
  this->TextureColorMapData = TextureColorMapData;
  this->LutSource = LutSource;
  this->LutTarget = LutTarget;
  this->LutWeight = LutWeight;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__OVRPlugin__InsightPassthroughStyle2() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels::__OVRPlugin__PassthroughColorLutChannels(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels::__OVRPlugin__PassthroughColorLutChannels() {}
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels::Rgb{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels::Rgba{ static_cast<int32_t>(0x2) };
// Ctor Parameters [CppParam { name: "BufferSize", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Buffer", ty: "void*", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughColorLutData::__OVRPlugin__PassthroughColorLutData(uint32_t BufferSize, void* Buffer) noexcept {
  this->BufferSize = BufferSize;
  this->Buffer = Buffer;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughColorLutData::__OVRPlugin__PassthroughColorLutData() {}
// Ctor Parameters [CppParam { name: "LeftHandIntensity", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RightHandIntensity", ty: "float_t", modifiers: "", def_value:
// Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity(float_t LeftHandIntensity,
                                                                                                                                          float_t RightHandIntensity) noexcept {
  this->LeftHandIntensity = LeftHandIntensity;
  this->RightHandIntensity = RightHandIntensity;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags::__OVRPlugin__PassthroughCapabilityFlags(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags::__OVRPlugin__PassthroughCapabilityFlags() {}
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags::Passthrough{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags::Color{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags::Depth{ static_cast<int32_t>(0x4) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields::__OVRPlugin__PassthroughCapabilityFields(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields::__OVRPlugin__PassthroughCapabilityFields() {}
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields::Flags{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields::MaxColorLutResolution{ static_cast<int32_t>(0x2) };
// Ctor Parameters [CppParam { name: "Fields", ty: "::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields", modifiers: "", def_value: Some("{}") }, CppParam { name: "Flags", ty:
// "::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags", modifiers: "", def_value: Some("{}") }, CppParam { name: "MaxColorLutResolution", ty: "uint32_t", modifiers: "", def_value: Some("{}")
// }]
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilities::__OVRPlugin__PassthroughCapabilities(::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields Fields,
                                                                                                        ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags Flags,
                                                                                                        uint32_t MaxColorLutResolution) noexcept {
  this->Fields = Fields;
  this->Flags = Flags;
  this->MaxColorLutResolution = MaxColorLutResolution;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilities::__OVRPlugin__PassthroughCapabilities() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceComponentType::__OVRPlugin__SpaceComponentType(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__SpaceComponentType::__OVRPlugin__SpaceComponentType() {}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceComponentType GlobalNamespace::__OVRPlugin__SpaceComponentType::Locatable{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__SpaceComponentType GlobalNamespace::__OVRPlugin__SpaceComponentType::Storable{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__SpaceComponentType GlobalNamespace::__OVRPlugin__SpaceComponentType::Sharable{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__SpaceComponentType GlobalNamespace::__OVRPlugin__SpaceComponentType::Bounded2D{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__SpaceComponentType GlobalNamespace::__OVRPlugin__SpaceComponentType::Bounded3D{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__SpaceComponentType GlobalNamespace::__OVRPlugin__SpaceComponentType::SemanticLabels{ static_cast<int32_t>(0x5) };
constexpr ::GlobalNamespace::__OVRPlugin__SpaceComponentType GlobalNamespace::__OVRPlugin__SpaceComponentType::RoomLayout{ static_cast<int32_t>(0x6) };
constexpr ::GlobalNamespace::__OVRPlugin__SpaceComponentType GlobalNamespace::__OVRPlugin__SpaceComponentType::SpaceContainer{ static_cast<int32_t>(0x7) };
constexpr ::GlobalNamespace::__OVRPlugin__SpaceComponentType GlobalNamespace::__OVRPlugin__SpaceComponentType::TriangleMesh{ static_cast<int32_t>(0x3b9ee4c8) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation::__OVRPlugin__SpaceStorageLocation(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation::__OVRPlugin__SpaceStorageLocation() {}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation GlobalNamespace::__OVRPlugin__SpaceStorageLocation::Invalid{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation GlobalNamespace::__OVRPlugin__SpaceStorageLocation::Local{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation GlobalNamespace::__OVRPlugin__SpaceStorageLocation::Cloud{ static_cast<int32_t>(0x2) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode::__OVRPlugin__SpaceStoragePersistenceMode(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode::__OVRPlugin__SpaceStoragePersistenceMode() {}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode::Invalid{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode::Indefinite{ static_cast<int32_t>(0x1) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryActionType::__OVRPlugin__SpaceQueryActionType(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryActionType::__OVRPlugin__SpaceQueryActionType() {}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryActionType GlobalNamespace::__OVRPlugin__SpaceQueryActionType::Load{ static_cast<int32_t>(0x0) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryType::__OVRPlugin__SpaceQueryType(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryType::__OVRPlugin__SpaceQueryType() {}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryType GlobalNamespace::__OVRPlugin__SpaceQueryType::Action{ static_cast<int32_t>(0x0) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryFilterType::__OVRPlugin__SpaceQueryFilterType(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryFilterType::__OVRPlugin__SpaceQueryFilterType() {}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryFilterType GlobalNamespace::__OVRPlugin__SpaceQueryFilterType::None{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryFilterType GlobalNamespace::__OVRPlugin__SpaceQueryFilterType::Ids{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryFilterType GlobalNamespace::__OVRPlugin__SpaceQueryFilterType::Components{ static_cast<int32_t>(0x2) };
// Ctor Parameters [CppParam { name: "BaseTracking", ty: "::GlobalNamespace::__OVRPlugin__TrackingOrigin", modifiers: "", def_value: Some("{}") }, CppParam { name: "PoseInSpace", ty:
// "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }, CppParam { name: "Time", ty: "double_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo::__OVRPlugin__SpatialAnchorCreateInfo(::GlobalNamespace::__OVRPlugin__TrackingOrigin BaseTracking,
                                                                                                        ::GlobalNamespace::__OVRPlugin__Posef PoseInSpace, double_t Time) noexcept {
  this->BaseTracking = BaseTracking;
  this->PoseInSpace = PoseInSpace;
  this->Time = Time;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo::__OVRPlugin__SpatialAnchorCreateInfo() {}
// Ctor Parameters [CppParam { name: "Ids", ty: "::ArrayW<::System::Guid,::Array<::System::Guid>*>", modifiers: "", def_value: Some("nullptr") }, CppParam { name: "NumIds", ty: "int32_t", modifiers:
// "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceFilterInfoIds::__OVRPlugin__SpaceFilterInfoIds(::ArrayW<::System::Guid, ::Array<::System::Guid>*> Ids, int32_t NumIds) noexcept {
  this->Ids = Ids;
  this->NumIds = NumIds;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__SpaceFilterInfoIds::__OVRPlugin__SpaceFilterInfoIds() {}
// Ctor Parameters [CppParam { name: "Components", ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType,::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>", modifiers: "",
// def_value: Some("nullptr") }, CppParam { name: "NumComponents", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceFilterInfoComponents::__OVRPlugin__SpaceFilterInfoComponents(
    ::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType, ::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*> Components, int32_t NumComponents) noexcept {
  this->Components = Components;
  this->NumComponents = NumComponents;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__SpaceFilterInfoComponents::__OVRPlugin__SpaceFilterInfoComponents() {}
// Ctor Parameters [CppParam { name: "QueryType", ty: "::GlobalNamespace::__OVRPlugin__SpaceQueryType", modifiers: "", def_value: Some("{}") }, CppParam { name: "MaxQuerySpaces", ty: "int32_t",
// modifiers: "", def_value: Some("{}") }, CppParam { name: "Timeout", ty: "double_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Location", ty:
// "::GlobalNamespace::__OVRPlugin__SpaceStorageLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "ActionType", ty: "::GlobalNamespace::__OVRPlugin__SpaceQueryActionType", modifiers:
// "", def_value: Some("{}") }, CppParam { name: "FilterType", ty: "::GlobalNamespace::__OVRPlugin__SpaceQueryFilterType", modifiers: "", def_value: Some("{}") }, CppParam { name: "IdInfo", ty:
// "::GlobalNamespace::__OVRPlugin__SpaceFilterInfoIds", modifiers: "", def_value: Some("{}") }, CppParam { name: "ComponentsInfo", ty: "::GlobalNamespace::__OVRPlugin__SpaceFilterInfoComponents",
// modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__OVRPlugin__SpaceQueryInfo(::GlobalNamespace::__OVRPlugin__SpaceQueryType QueryType, int32_t MaxQuerySpaces, double_t Timeout,
                                                                                      ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation Location,
                                                                                      ::GlobalNamespace::__OVRPlugin__SpaceQueryActionType ActionType,
                                                                                      ::GlobalNamespace::__OVRPlugin__SpaceQueryFilterType FilterType,
                                                                                      ::GlobalNamespace::__OVRPlugin__SpaceFilterInfoIds IdInfo,
                                                                                      ::GlobalNamespace::__OVRPlugin__SpaceFilterInfoComponents ComponentsInfo) noexcept {
  this->QueryType = QueryType;
  this->MaxQuerySpaces = MaxQuerySpaces;
  this->Timeout = Timeout;
  this->Location = Location;
  this->ActionType = ActionType;
  this->FilterType = FilterType;
  this->IdInfo = IdInfo;
  this->ComponentsInfo = ComponentsInfo;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__OVRPlugin__SpaceQueryInfo() {}
// Ctor Parameters [CppParam { name: "space", ty: "uint64_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "uuid", ty: "::System::Guid", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryResult::__OVRPlugin__SpaceQueryResult(uint64_t space, ::System::Guid uuid) noexcept {
  this->space = space;
  this->uuid = uuid;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryResult::__OVRPlugin__SpaceQueryResult() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode::__OVRPlugin__Media__MrcActivationMode(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode::__OVRPlugin__Media__MrcActivationMode() {}
constexpr ::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode GlobalNamespace::__OVRPlugin__Media__MrcActivationMode::Automatic{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode GlobalNamespace::__OVRPlugin__Media__MrcActivationMode::Disabled{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode GlobalNamespace::__OVRPlugin__Media__MrcActivationMode::EnumSize{ static_cast<int32_t>(0x7fffffff) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::__OVRPlugin__Media__PlatformCameraMode(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::__OVRPlugin__Media__PlatformCameraMode() {}
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::Disabled{ static_cast<int32_t>(0xffffffff) };
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::Initialized{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::UserControlled{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::SmartNavigated{ static_cast<int32_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::StabilizedPoV{ static_cast<int32_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::RemoteDroneControlled{ static_cast<int32_t>(0x4) };
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::RemoteSpatialMapped{ static_cast<int32_t>(0x5) };
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::SpectatorMode{ static_cast<int32_t>(0x6) };
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::MobileMRC{ static_cast<int32_t>(0x7) };
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::EnumSize{ static_cast<int32_t>(0x7fffffff) };
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType::__OVRPlugin__Media__InputVideoBufferType(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType::__OVRPlugin__Media__InputVideoBufferType() {}
constexpr ::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType::Memory{ static_cast<int32_t>(0x0) };
constexpr ::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType::TextureHandle{ static_cast<int32_t>(0x1) };
constexpr ::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType::EnumSize{ static_cast<int32_t>(0x7fffffff) };
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.Initialize
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::__OVRPlugin__Media::Initialize)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x276d698;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "Initialize",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.Shutdown
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::__OVRPlugin__Media::Shutdown)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x276d7c0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "Shutdown",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.GetInitialized
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::__OVRPlugin__Media::GetInitialized)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x276d8e8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "GetInitialized",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.Update
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::__OVRPlugin__Media::Update)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x276da38;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "Update",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.GetMrcActivationMode
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode (*)()>(
    &::GlobalNamespace::__OVRPlugin__Media::GetMrcActivationMode)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x276db60;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                                                                               "GetMrcActivationMode", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.SetMrcActivationMode
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode)>(
    &::GlobalNamespace::__OVRPlugin__Media::SetMrcActivationMode)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276dca8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "SetMrcActivationMode", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.SetPlatformInitialized
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::__OVRPlugin__Media::SetPlatformInitialized)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x276ddec;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                                                                               "SetPlatformInitialized", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.GetPlatformCameraMode
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode (*)()>(
    &::GlobalNamespace::__OVRPlugin__Media::GetPlatformCameraMode)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x276df14;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                                                                               "GetPlatformCameraMode", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.SetPlatformCameraMode
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode)>(
    &::GlobalNamespace::__OVRPlugin__Media::SetPlatformCameraMode)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276e05c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "SetPlatformCameraMode", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.IsMrcEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::__OVRPlugin__Media::IsMrcEnabled)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x276e1a0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "IsMrcEnabled",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.IsMrcActivated
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::__OVRPlugin__Media::IsMrcActivated)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x276e2ec;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "IsMrcActivated",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.UseMrcDebugCamera
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::__OVRPlugin__Media::UseMrcDebugCamera)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x276e438;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                                                                               "UseMrcDebugCamera", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.SetMrcInputVideoBufferType
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType)>(
    &::GlobalNamespace::__OVRPlugin__Media::SetMrcInputVideoBufferType)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276e584;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "SetMrcInputVideoBufferType", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.GetMrcInputVideoBufferType
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType (*)()>(
    &::GlobalNamespace::__OVRPlugin__Media::GetMrcInputVideoBufferType)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276e6c8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                                                                               "GetMrcInputVideoBufferType", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.SetMrcFrameSize
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t, int32_t)>(&::GlobalNamespace::__OVRPlugin__Media::SetMrcFrameSize)> {
  constexpr static std::size_t size = 0xd8;
  constexpr static std::size_t addrs = 0x276e80c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "SetMrcFrameSize", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.GetMrcFrameSize
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<int32_t>, ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__Media::GetMrcFrameSize)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x276e968;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "GetMrcFrameSize", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.SetMrcAudioSampleRate
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t)>(&::GlobalNamespace::__OVRPlugin__Media::SetMrcAudioSampleRate)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276eacc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "SetMrcAudioSampleRate",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.GetMrcAudioSampleRate
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)()>(&::GlobalNamespace::__OVRPlugin__Media::GetMrcAudioSampleRate)> {
  constexpr static std::size_t size = 0xc4;
  constexpr static std::size_t addrs = 0x276ec10;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                                                                               "GetMrcAudioSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.SetMrcFrameImageFlipped
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(bool)>(&::GlobalNamespace::__OVRPlugin__Media::SetMrcFrameImageFlipped)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x276ed50;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "SetMrcFrameImageFlipped",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.GetMrcFrameImageFlipped
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::__OVRPlugin__Media::GetMrcFrameImageFlipped)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x276ee98;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                                                                               "GetMrcFrameImageFlipped", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.EncodeMrcFrame
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(void*, void*, ::ArrayW<float_t, ::Array<float_t>*>, int32_t, int32_t, double_t, double_t, ByRef<int32_t>)>(
    &::GlobalNamespace::__OVRPlugin__Media::EncodeMrcFrame)> {
  constexpr static std::size_t size = 0x354;
  constexpr static std::size_t addrs = 0x276efe0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "EncodeMrcFrame", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<float_t, ::Array<float_t>*>>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.EncodeMrcFrame
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::RenderTexture*, ::ArrayW<float_t, ::Array<float_t>*>, int32_t, int32_t, double_t, double_t,
                                                                                           ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__Media::EncodeMrcFrame)> {
  constexpr static std::size_t size = 0x4e8;
  constexpr static std::size_t addrs = 0x276f644;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "EncodeMrcFrame", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::RenderTexture*>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<float_t, ::Array<float_t>*>>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.SyncMrcFrame
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t)>(&::GlobalNamespace::__OVRPlugin__Media::SyncMrcFrame)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276fb2c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "SyncMrcFrame", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.SetAvailableQueueIndexVulkan
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint32_t)>(&::GlobalNamespace::__OVRPlugin__Media::SetAvailableQueueIndexVulkan)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276fc70;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "SetAvailableQueueIndexVulkan",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.SetMrcHeadsetControllerPose
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(
    ::GlobalNamespace::__OVRPlugin__Posef, ::GlobalNamespace::__OVRPlugin__Posef, ::GlobalNamespace::__OVRPlugin__Posef)>(&::GlobalNamespace::__OVRPlugin__Media::SetMrcHeadsetControllerPose)> {
  constexpr static std::size_t size = 0x14c;
  constexpr static std::size_t addrs = 0x276fdb4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "SetMrcHeadsetControllerPose", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.IsCastingToRemoteClient
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::__OVRPlugin__Media::IsCastingToRemoteClient)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x276ffc4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                                                                               "IsCastingToRemoteClient", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media._ctor
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__Media::*)()>(&::GlobalNamespace::__OVRPlugin__Media::_ctor)> {
  constexpr static std::size_t size = 0x8;
  constexpr static std::size_t addrs = 0x2770114;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), ".ctor",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__Media::setStaticF_cachedTexture(::UnityEngine::Texture2D* value) {
  ::cordl_internals::setStaticField<::UnityEngine::Texture2D*, "cachedTexture", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get>(
      std::forward<::UnityEngine::Texture2D*>(value));
}
inline ::UnityEngine::Texture2D* GlobalNamespace::__OVRPlugin__Media::getStaticF_cachedTexture() {
  return ::cordl_internals::getStaticField<::UnityEngine::Texture2D*, "cachedTexture", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get>();
}
inline bool GlobalNamespace::__OVRPlugin__Media::Initialize() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "Initialize",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__Media::Shutdown() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "Shutdown",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__Media::GetInitialized() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "GetInitialized",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__Media::Update() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "Update",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode GlobalNamespace::__OVRPlugin__Media::GetMrcActivationMode() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                                                                             "GetMrcActivationMode", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__Media::SetMrcActivationMode(::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode mode) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "SetMrcActivationMode", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, mode);
}
inline bool GlobalNamespace::__OVRPlugin__Media::SetPlatformInitialized() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                                                                             "SetPlatformInitialized", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode GlobalNamespace::__OVRPlugin__Media::GetPlatformCameraMode() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                                                                             "GetPlatformCameraMode", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__Media::SetPlatformCameraMode(::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode mode) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "SetPlatformCameraMode", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, mode);
}
inline bool GlobalNamespace::__OVRPlugin__Media::IsMrcEnabled() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "IsMrcEnabled",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__Media::IsMrcActivated() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "IsMrcActivated",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__Media::UseMrcDebugCamera() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "UseMrcDebugCamera",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__Media::SetMrcInputVideoBufferType(::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType videoBufferType) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "SetMrcInputVideoBufferType", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, videoBufferType);
}
inline ::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType GlobalNamespace::__OVRPlugin__Media::GetMrcInputVideoBufferType() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                                                                             "GetMrcInputVideoBufferType", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__Media::SetMrcFrameSize(int32_t frameWidth, int32_t frameHeight) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "SetMrcFrameSize", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, frameWidth, frameHeight);
}
inline void GlobalNamespace::__OVRPlugin__Media::GetMrcFrameSize(ByRef<int32_t> frameWidth, ByRef<int32_t> frameHeight) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "GetMrcFrameSize", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, frameWidth, frameHeight);
}
inline bool GlobalNamespace::__OVRPlugin__Media::SetMrcAudioSampleRate(int32_t sampleRate) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "SetMrcAudioSampleRate",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, sampleRate);
}
inline int32_t GlobalNamespace::__OVRPlugin__Media::GetMrcAudioSampleRate() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                                                                             "GetMrcAudioSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__Media::SetMrcFrameImageFlipped(bool imageFlipped) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "SetMrcFrameImageFlipped",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, imageFlipped);
}
inline bool GlobalNamespace::__OVRPlugin__Media::GetMrcFrameImageFlipped() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                                                                             "GetMrcFrameImageFlipped", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__Media::EncodeMrcFrame(void* textureHandle, void* fgTextureHandle, ::ArrayW<float_t, ::Array<float_t>*> audioData, int32_t audioFrames, int32_t audioChannels,
                                                                double_t timestamp, double_t poseTime, ByRef<int32_t> outSyncId) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "EncodeMrcFrame", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<float_t, ::Array<float_t>*>>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, textureHandle, fgTextureHandle, audioData, audioFrames, audioChannels, timestamp, poseTime, outSyncId);
}
inline bool GlobalNamespace::__OVRPlugin__Media::EncodeMrcFrame(::UnityEngine::RenderTexture* frame, ::ArrayW<float_t, ::Array<float_t>*> audioData, int32_t audioFrames, int32_t audioChannels,
                                                                double_t timestamp, double_t poseTime, ByRef<int32_t> outSyncId) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "EncodeMrcFrame", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::RenderTexture*>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<float_t, ::Array<float_t>*>>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, frame, audioData, audioFrames, audioChannels, timestamp, poseTime, outSyncId);
}
inline bool GlobalNamespace::__OVRPlugin__Media::SyncMrcFrame(int32_t syncId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "SyncMrcFrame", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, syncId);
}
inline bool GlobalNamespace::__OVRPlugin__Media::SetAvailableQueueIndexVulkan(uint32_t queueIndexVk) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "SetAvailableQueueIndexVulkan",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, queueIndexVk);
}
inline bool GlobalNamespace::__OVRPlugin__Media::SetMrcHeadsetControllerPose(::GlobalNamespace::__OVRPlugin__Posef headsetPose, ::GlobalNamespace::__OVRPlugin__Posef leftControllerPose,
                                                                             ::GlobalNamespace::__OVRPlugin__Posef rightControllerPose) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), "SetMrcHeadsetControllerPose", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, headsetPose, leftControllerPose, rightControllerPose);
}
inline bool GlobalNamespace::__OVRPlugin__Media::IsCastingToRemoteClient() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                                                                             "IsCastingToRemoteClient", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Media* GlobalNamespace::__OVRPlugin__Media::New_ctor() {
  return THROW_UNLESS(::il2cpp_utils::New<::GlobalNamespace::__OVRPlugin__Media*>());
}
inline void GlobalNamespace::__OVRPlugin__Media::_ctor() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(), ".ctor",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<void, false>(this, ___internal_method);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Media::__OVRPlugin__Media() {}
// Ctor Parameters [CppParam { name: "uuidCapacityInput", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "uuidCountOutput", ty: "int32_t", modifiers: "", def_value: Some("{}")
// }, CppParam { name: "uuids", ty: "void*", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceContainerInternal::__OVRPlugin__SpaceContainerInternal(int32_t uuidCapacityInput, int32_t uuidCountOutput, void* uuids) noexcept {
  this->uuidCapacityInput = uuidCapacityInput;
  this->uuidCountOutput = uuidCountOutput;
  this->uuids = uuids;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__SpaceContainerInternal::__OVRPlugin__SpaceContainerInternal() {}
// Ctor Parameters [CppParam { name: "byteCapacityInput", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "byteCountOutput", ty: "int32_t", modifiers: "", def_value: Some("{}")
// }, CppParam { name: "labels", ty: "void*", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceSemanticLabelInternal::__OVRPlugin__SpaceSemanticLabelInternal(int32_t byteCapacityInput, int32_t byteCountOutput, void* labels) noexcept {
  this->byteCapacityInput = byteCapacityInput;
  this->byteCountOutput = byteCountOutput;
  this->labels = labels;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__SpaceSemanticLabelInternal::__OVRPlugin__SpaceSemanticLabelInternal() {}
// Ctor Parameters [CppParam { name: "floorUuid", ty: "::System::Guid", modifiers: "", def_value: Some("{}") }, CppParam { name: "ceilingUuid", ty: "::System::Guid", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "wallUuids", ty: "::ArrayW<::System::Guid,::Array<::System::Guid>*>", modifiers: "", def_value: Some("nullptr") }]
constexpr ::GlobalNamespace::__OVRPlugin__RoomLayout::__OVRPlugin__RoomLayout(::System::Guid floorUuid, ::System::Guid ceilingUuid,
                                                                              ::ArrayW<::System::Guid, ::Array<::System::Guid>*> wallUuids) noexcept {
  this->floorUuid = floorUuid;
  this->ceilingUuid = ceilingUuid;
  this->wallUuids = wallUuids;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__RoomLayout::__OVRPlugin__RoomLayout() {}
// Ctor Parameters [CppParam { name: "floorUuid", ty: "::System::Guid", modifiers: "", def_value: Some("{}") }, CppParam { name: "ceilingUuid", ty: "::System::Guid", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "wallUuidCapacityInput", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "wallUuidCountOutput", ty: "int32_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "wallUuids", ty: "void*", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__RoomLayoutInternal::__OVRPlugin__RoomLayoutInternal(::System::Guid floorUuid, ::System::Guid ceilingUuid, int32_t wallUuidCapacityInput,
                                                                                              int32_t wallUuidCountOutput, void* wallUuids) noexcept {
  this->floorUuid = floorUuid;
  this->ceilingUuid = ceilingUuid;
  this->wallUuidCapacityInput = wallUuidCapacityInput;
  this->wallUuidCountOutput = wallUuidCountOutput;
  this->wallUuids = wallUuids;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__RoomLayoutInternal::__OVRPlugin__RoomLayoutInternal() {}
// Ctor Parameters [CppParam { name: "vertexCapacityInput", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "vertexCountOutput", ty: "int32_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "vertices", ty: "void*", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PolygonalBoundary2DInternal::__OVRPlugin__PolygonalBoundary2DInternal(int32_t vertexCapacityInput, int32_t vertexCountOutput, void* vertices) noexcept {
  this->vertexCapacityInput = vertexCapacityInput;
  this->vertexCountOutput = vertexCountOutput;
  this->vertices = vertices;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__PolygonalBoundary2DInternal::__OVRPlugin__PolygonalBoundary2DInternal() {}
// Ctor Parameters [CppParam { name: "requestByteCount", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "request", ty: "::StringW", modifiers: "", def_value: Some("nullptr")
// }]
constexpr ::GlobalNamespace::__OVRPlugin__SceneCaptureRequestInternal::__OVRPlugin__SceneCaptureRequestInternal(int32_t requestByteCount, ::StringW request) noexcept {
  this->requestByteCount = requestByteCount;
  this->request = request;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__SceneCaptureRequestInternal::__OVRPlugin__SceneCaptureRequestInternal() {}
/// @brief Convert operator to "::System::IDisposable"
template <typename T> constexpr GlobalNamespace::__OVRPlugin__PinnedArray_1<T>::operator ::System::IDisposable*() {
  return static_cast<::System::IDisposable*>(static_cast<void*>(::cordl_internals::Box(this)));
}
template <typename T> inline void GlobalNamespace::__OVRPlugin__PinnedArray_1<T>::_ctor(::ArrayW<T, ::Array<T>*> array) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__PinnedArray_1<T>>::get(), ".ctor", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<T, ::Array<T>*>>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(this, ___internal_method, array);
}
template <typename T> inline void GlobalNamespace::__OVRPlugin__PinnedArray_1<T>::Dispose() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__PinnedArray_1<T>>::get(), "Dispose",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<void, false>(this, ___internal_method);
}
template <typename T> inline void* GlobalNamespace::__OVRPlugin__PinnedArray_1<T>::op_Implicit_void_(::GlobalNamespace::__OVRPlugin__PinnedArray_1<T> pinnedArray) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__PinnedArray_1<T>>::get(), "op_Implicit", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PinnedArray_1<T>>::get() })));
  return ::cordl_internals::RunMethodRethrow<void*, false>(nullptr, ___internal_method, pinnedArray);
}
// Ctor Parameters [CppParam { name: "_handle", ty: "::System::Runtime::InteropServices::GCHandle", modifiers: "", def_value: Some("{}") }]
template <typename T> constexpr ::GlobalNamespace::__OVRPlugin__PinnedArray_1<T>::__OVRPlugin__PinnedArray_1(::System::Runtime::InteropServices::GCHandle _handle) noexcept {
  this->_handle = _handle;
}
// Ctor Parameters []
template <typename T> constexpr ::GlobalNamespace::__OVRPlugin__PinnedArray_1<T>::__OVRPlugin__PinnedArray_1() {}
// Ctor Parameters [CppParam { name: "vertexCapacityInput", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "vertexCountOutput", ty: "int32_t", modifiers: "", def_value:
// Some("{}") }, CppParam { name: "vertices", ty: "void*", modifiers: "", def_value: Some("{}") }, CppParam { name: "indexCapacityInput", ty: "int32_t", modifiers: "", def_value: Some("{}") },
// CppParam { name: "indexCountOutput", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "indices", ty: "void*", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__TriangleMeshInternal::__OVRPlugin__TriangleMeshInternal(int32_t vertexCapacityInput, int32_t vertexCountOutput, void* vertices, int32_t indexCapacityInput,
                                                                                                  int32_t indexCountOutput, void* indices) noexcept {
  this->vertexCapacityInput = vertexCapacityInput;
  this->vertexCountOutput = vertexCountOutput;
  this->vertices = vertices;
  this->indexCapacityInput = indexCapacityInput;
  this->indexCountOutput = indexCountOutput;
  this->indices = indices;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__TriangleMeshInternal::__OVRPlugin__TriangleMeshInternal() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFields::__OVRPlugin__PassthroughPreferenceFields(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFields::__OVRPlugin__PassthroughPreferenceFields() {}
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFields GlobalNamespace::__OVRPlugin__PassthroughPreferenceFields::Flags{ static_cast<int32_t>(0x1) };
// Ctor Parameters [CppParam { name: "value__", ty: "int64_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFlags::__OVRPlugin__PassthroughPreferenceFlags(int64_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFlags::__OVRPlugin__PassthroughPreferenceFlags() {}
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFlags GlobalNamespace::__OVRPlugin__PassthroughPreferenceFlags::DefaultToActive{ static_cast<int64_t>(0x1) };
// Ctor Parameters [CppParam { name: "Fields", ty: "::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFields", modifiers: "", def_value: Some("{}") }, CppParam { name: "Flags", ty:
// "::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFlags", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughPreferences::__OVRPlugin__PassthroughPreferences(::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFields Fields,
                                                                                                      ::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFlags Flags) noexcept {
  this->Fields = Fields;
  this->Flags = Flags;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughPreferences::__OVRPlugin__PassthroughPreferences() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Ktx.LoadKtxFromMemory
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void* (*)(void*, uint32_t)>(&::GlobalNamespace::__OVRPlugin__Ktx::LoadKtxFromMemory)> {
  constexpr static std::size_t size = 0x174;
  constexpr static std::size_t addrs = 0x277011c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(), "LoadKtxFromMemory", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Ktx.GetKtxTextureWidth
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint32_t (*)(void*)>(&::GlobalNamespace::__OVRPlugin__Ktx::GetKtxTextureWidth)> {
  constexpr static std::size_t size = 0x13c;
  constexpr static std::size_t addrs = 0x2770324;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(), "GetKtxTextureWidth", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Ktx.GetKtxTextureHeight
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint32_t (*)(void*)>(&::GlobalNamespace::__OVRPlugin__Ktx::GetKtxTextureHeight)> {
  constexpr static std::size_t size = 0x13c;
  constexpr static std::size_t addrs = 0x27704e4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(), "GetKtxTextureHeight",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Ktx.TranscodeKtxTexture
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(void*, uint32_t)>(&::GlobalNamespace::__OVRPlugin__Ktx::TranscodeKtxTexture)> {
  constexpr static std::size_t size = 0x13c;
  constexpr static std::size_t addrs = 0x27706a4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(), "TranscodeKtxTexture", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Ktx.GetKtxTextureSize
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint32_t (*)(void*)>(&::GlobalNamespace::__OVRPlugin__Ktx::GetKtxTextureSize)> {
  constexpr static std::size_t size = 0x13c;
  constexpr static std::size_t addrs = 0x2770864;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(), "GetKtxTextureSize", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Ktx.GetKtxTextureData
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(void*, void*, uint32_t)>(&::GlobalNamespace::__OVRPlugin__Ktx::GetKtxTextureData)> {
  constexpr static std::size_t size = 0x144;
  constexpr static std::size_t addrs = 0x2770a24;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(), "GetKtxTextureData", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Ktx.DestroyKtxTexture
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(void*)>(&::GlobalNamespace::__OVRPlugin__Ktx::DestroyKtxTexture)> {
  constexpr static std::size_t size = 0x12c;
  constexpr static std::size_t addrs = 0x2770bfc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(), "DestroyKtxTexture", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Ktx._ctor
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__Ktx::*)()>(&::GlobalNamespace::__OVRPlugin__Ktx::_ctor)> {
  constexpr static std::size_t size = 0x8;
  constexpr static std::size_t addrs = 0x2770da4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(), ".ctor",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
inline void* GlobalNamespace::__OVRPlugin__Ktx::LoadKtxFromMemory(void* dataPtr, uint32_t length) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(), "LoadKtxFromMemory", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void*, false>(nullptr, ___internal_method, dataPtr, length);
}
inline uint32_t GlobalNamespace::__OVRPlugin__Ktx::GetKtxTextureWidth(void* texture) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(), "GetKtxTextureWidth", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
  return ::cordl_internals::RunMethodRethrow<uint32_t, false>(nullptr, ___internal_method, texture);
}
inline uint32_t GlobalNamespace::__OVRPlugin__Ktx::GetKtxTextureHeight(void* texture) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(), "GetKtxTextureHeight", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
  return ::cordl_internals::RunMethodRethrow<uint32_t, false>(nullptr, ___internal_method, texture);
}
inline bool GlobalNamespace::__OVRPlugin__Ktx::TranscodeKtxTexture(void* texture, uint32_t format) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(), "TranscodeKtxTexture", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, texture, format);
}
inline uint32_t GlobalNamespace::__OVRPlugin__Ktx::GetKtxTextureSize(void* texture) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(), "GetKtxTextureSize", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
  return ::cordl_internals::RunMethodRethrow<uint32_t, false>(nullptr, ___internal_method, texture);
}
inline bool GlobalNamespace::__OVRPlugin__Ktx::GetKtxTextureData(void* texture, void* textureData, uint32_t bufferSize) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(), "GetKtxTextureData", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, texture, textureData, bufferSize);
}
inline bool GlobalNamespace::__OVRPlugin__Ktx::DestroyKtxTexture(void* texture) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(), "DestroyKtxTexture", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, texture);
}
inline ::GlobalNamespace::__OVRPlugin__Ktx* GlobalNamespace::__OVRPlugin__Ktx::New_ctor() {
  return THROW_UNLESS(::il2cpp_utils::New<::GlobalNamespace::__OVRPlugin__Ktx*>());
}
inline void GlobalNamespace::__OVRPlugin__Ktx::_ctor() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(), ".ctor",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<void, false>(this, ___internal_method);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Ktx::__OVRPlugin__Ktx() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR.SetClientVersion
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::SetClientVersion)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x2770dac;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                                                                               "SetClientVersion", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR.HookGetInstanceProcAddr
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void* (*)(void*)>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::HookGetInstanceProcAddr)> {
  constexpr static std::size_t size = 0xc4;
  constexpr static std::size_t addrs = 0x2770f30;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(), "HookGetInstanceProcAddr",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR.OnInstanceCreate
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::OnInstanceCreate)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x2771070;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(), "OnInstanceCreate",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR.OnInstanceDestroy
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::OnInstanceDestroy)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x27711b4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(), "OnInstanceDestroy",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR.OnSessionCreate
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionCreate)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x27712f0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(), "OnSessionCreate",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR.OnAppSpaceChange
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::OnAppSpaceChange)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x277142c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(), "OnAppSpaceChange",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR.OnSessionStateChange
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int32_t, int32_t)>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionStateChange)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x2771568;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(), "OnSessionStateChange", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR.OnSessionBegin
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionBegin)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x27716c0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(), "OnSessionBegin",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR.OnSessionEnd
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionEnd)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x27717fc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(), "OnSessionEnd",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR.OnSessionExiting
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionExiting)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x2771938;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(), "OnSessionExiting",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR.OnSessionDestroy
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionDestroy)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x2771a74;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(), "OnSessionDestroy",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR._ctor
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__UnityOpenXR::*)()>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::_ctor)> {
  constexpr static std::size_t size = 0x8;
  constexpr static std::size_t addrs = 0x2771bb0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(), ".ctor",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__UnityOpenXR::setStaticF_Enabled(bool value) {
  ::cordl_internals::setStaticField<bool, "Enabled", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get>(std::forward<bool>(value));
}
inline bool GlobalNamespace::__OVRPlugin__UnityOpenXR::getStaticF_Enabled() {
  return ::cordl_internals::getStaticField<bool, "Enabled", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get>();
}
inline void GlobalNamespace::__OVRPlugin__UnityOpenXR::SetClientVersion() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                                                                             "SetClientVersion", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method);
}
inline void* GlobalNamespace::__OVRPlugin__UnityOpenXR::HookGetInstanceProcAddr(void* func) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(), "HookGetInstanceProcAddr",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
  return ::cordl_internals::RunMethodRethrow<void*, false>(nullptr, ___internal_method, func);
}
inline bool GlobalNamespace::__OVRPlugin__UnityOpenXR::OnInstanceCreate(uint64_t xrInstance) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(), "OnInstanceCreate",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, xrInstance);
}
inline void GlobalNamespace::__OVRPlugin__UnityOpenXR::OnInstanceDestroy(uint64_t xrInstance) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(), "OnInstanceDestroy",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrInstance);
}
inline void GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionCreate(uint64_t xrSession) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(), "OnSessionCreate",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSession);
}
inline void GlobalNamespace::__OVRPlugin__UnityOpenXR::OnAppSpaceChange(uint64_t xrSpace) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(), "OnAppSpaceChange",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSpace);
}
inline void GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionStateChange(int32_t oldState, int32_t newState) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(), "OnSessionStateChange", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, oldState, newState);
}
inline void GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionBegin(uint64_t xrSession) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(), "OnSessionBegin",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSession);
}
inline void GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionEnd(uint64_t xrSession) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(), "OnSessionEnd", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSession);
}
inline void GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionExiting(uint64_t xrSession) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(), "OnSessionExiting",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSession);
}
inline void GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionDestroy(uint64_t xrSession) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(), "OnSessionDestroy",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSession);
}
inline ::GlobalNamespace::__OVRPlugin__UnityOpenXR* GlobalNamespace::__OVRPlugin__UnityOpenXR::New_ctor() {
  return THROW_UNLESS(::il2cpp_utils::New<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>());
}
inline void GlobalNamespace::__OVRPlugin__UnityOpenXR::_ctor() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(), ".ctor",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<void, false>(this, ___internal_method);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__UnityOpenXR::__OVRPlugin__UnityOpenXR() {}
// Ctor Parameters [CppParam { name: "value__", ty: "int16_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Qpl__ResultType::__OVRPlugin__Qpl__ResultType(int16_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Qpl__ResultType::__OVRPlugin__Qpl__ResultType() {}
constexpr ::GlobalNamespace::__OVRPlugin__Qpl__ResultType GlobalNamespace::__OVRPlugin__Qpl__ResultType::Success{ static_cast<int16_t>(0x2) };
constexpr ::GlobalNamespace::__OVRPlugin__Qpl__ResultType GlobalNamespace::__OVRPlugin__Qpl__ResultType::Fail{ static_cast<int16_t>(0x3) };
constexpr ::GlobalNamespace::__OVRPlugin__Qpl__ResultType GlobalNamespace::__OVRPlugin__Qpl__ResultType::Cancel{ static_cast<int16_t>(0x4) };
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Qpl.MarkerStart
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int32_t, int32_t, int64_t)>(&::GlobalNamespace::__OVRPlugin__Qpl::MarkerStart)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x2771bb8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(), "MarkerStart", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Qpl.MarkerEnd
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int32_t, ::GlobalNamespace::__OVRPlugin__Qpl__ResultType, int32_t, int64_t)>(
    &::GlobalNamespace::__OVRPlugin__Qpl::MarkerEnd)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x2771d28;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(), "MarkerEnd", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Qpl__ResultType>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Qpl.MarkerPointCached
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int32_t, int32_t, int32_t, int64_t)>(&::GlobalNamespace::__OVRPlugin__Qpl::MarkerPointCached)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x2771eb4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(), "MarkerPointCached", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Qpl.MarkerAnnotation
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int32_t, ::StringW, ::StringW, int32_t)>(&::GlobalNamespace::__OVRPlugin__Qpl::MarkerAnnotation)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x2772040;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(), "MarkerAnnotation", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Qpl.CreateMarkerHandle
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__Qpl::CreateMarkerHandle)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x27721f8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(), "CreateMarkerHandle", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Qpl.DestroyMarkerHandle
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t)>(&::GlobalNamespace::__OVRPlugin__Qpl::DestroyMarkerHandle)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x2772370;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(), "DestroyMarkerHandle",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
/// @param instanceKey: int32_t (default: static_cast<int32_t>(0x0))
/// @param timestampMs: int64_t (default: static_cast<int64_t>(0xffffffffffffffff))
inline void GlobalNamespace::__OVRPlugin__Qpl::MarkerStart(int32_t markerId, int32_t instanceKey, int64_t timestampMs) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(), "MarkerStart", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, markerId, instanceKey, timestampMs);
}
/// @param resultTypeId: ::GlobalNamespace::__OVRPlugin__Qpl__ResultType (default: static_cast<int16_t>(0x2))
/// @param instanceKey: int32_t (default: static_cast<int32_t>(0x0))
/// @param timestampMs: int64_t (default: static_cast<int64_t>(0xffffffffffffffff))
inline void GlobalNamespace::__OVRPlugin__Qpl::MarkerEnd(int32_t markerId, ::GlobalNamespace::__OVRPlugin__Qpl__ResultType resultTypeId, int32_t instanceKey, int64_t timestampMs) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(), "MarkerEnd", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Qpl__ResultType>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, markerId, resultTypeId, instanceKey, timestampMs);
}
/// @param instanceKey: int32_t (default: static_cast<int32_t>(0x0))
/// @param timestampMs: int64_t (default: static_cast<int64_t>(0xffffffffffffffff))
inline void GlobalNamespace::__OVRPlugin__Qpl::MarkerPointCached(int32_t markerId, int32_t nameHandle, int32_t instanceKey, int64_t timestampMs) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(), "MarkerPointCached", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, markerId, nameHandle, instanceKey, timestampMs);
}
/// @param instanceKey: int32_t (default: static_cast<int32_t>(0x0))
inline void GlobalNamespace::__OVRPlugin__Qpl::MarkerAnnotation(int32_t markerId, ::StringW annotationKey, ::StringW annotationValue, int32_t instanceKey) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(), "MarkerAnnotation", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, markerId, annotationKey, annotationValue, instanceKey);
}
inline bool GlobalNamespace::__OVRPlugin__Qpl::CreateMarkerHandle(::StringW name, ByRef<int32_t> nameHandle) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(), "CreateMarkerHandle", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, name, nameHandle);
}
inline bool GlobalNamespace::__OVRPlugin__Qpl::DestroyMarkerHandle(int32_t nameHandle) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(), "DestroyMarkerHandle", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, nameHandle);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__Qpl::__OVRPlugin__Qpl() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_0_1_0.ovrp_GetEyeTextureSize
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Sizei (*)(::GlobalNamespace::__OVRPlugin__Eye)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_0_1_0::ovrp_GetEyeTextureSize)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27724b4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_0*>::get(), "ovrp_GetEyeTextureSize", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Eye>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_0_1_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_0_1_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Sizei GlobalNamespace::__OVRPlugin__OVRP_0_1_0::ovrp_GetEyeTextureSize(::GlobalNamespace::__OVRPlugin__Eye eyeId) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_0*>::get(), "ovrp_GetEyeTextureSize", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Eye>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Sizei, false>(nullptr, ___internal_method, eyeId);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_0_1_0::__OVRPlugin__OVRP_0_1_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_0_1_1.ovrp_SetOverlayQuad2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(
    ::GlobalNamespace::__OVRPlugin__Bool, ::GlobalNamespace::__OVRPlugin__Bool, void*, void*, ::GlobalNamespace::__OVRPlugin__Posef, ::GlobalNamespace::__OVRPlugin__Vector3f)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_0_1_1::ovrp_SetOverlayQuad2)> {
  constexpr static std::size_t size = 0xe4;
  constexpr static std::size_t addrs = 0x27725b4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_1*>::get(), "ovrp_SetOverlayQuad2", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector3f>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_0_1_1::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_1*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_0_1_1::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_1*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_0_1_1::ovrp_SetOverlayQuad2(::GlobalNamespace::__OVRPlugin__Bool onTop, ::GlobalNamespace::__OVRPlugin__Bool headLocked,
                                                                                                           void* texture, void* device, ::GlobalNamespace::__OVRPlugin__Posef pose,
                                                                                                           ::GlobalNamespace::__OVRPlugin__Vector3f scale) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_1*>::get(), "ovrp_SetOverlayQuad2", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector3f>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, onTop, headLocked, texture, device, pose, scale);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_0_1_1::__OVRPlugin__OVRP_0_1_1() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_0_1_2.ovrp_GetNodePose
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)(::GlobalNamespace::__OVRPlugin__Node)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_0_1_2::ovrp_GetNodePose)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277271c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_2*>::get(), "ovrp_GetNodePose", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_0_1_2.ovrp_SetControllerVibration
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(uint32_t, float_t, float_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_0_1_2::ovrp_SetControllerVibration)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x27727a0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_2*>::get(), "ovrp_SetControllerVibration", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_0_1_2::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_2*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_0_1_2::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_2*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::__OVRPlugin__OVRP_0_1_2::ovrp_GetNodePose(::GlobalNamespace::__OVRPlugin__Node nodeId) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_2*>::get(), "ovrp_GetNodePose", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_0_1_2::ovrp_SetControllerVibration(uint32_t controllerMask, float_t frequency, float_t amplitude) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_2*>::get(), "ovrp_SetControllerVibration", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, controllerMask, frequency, amplitude);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_0_1_2::__OVRPlugin__OVRP_0_1_2() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_0_1_3.ovrp_GetNodeVelocity
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)(::GlobalNamespace::__OVRPlugin__Node)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_0_1_3::ovrp_GetNodeVelocity)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27728b8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_3*>::get(), "ovrp_GetNodeVelocity", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_0_1_3.ovrp_GetNodeAcceleration
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)(::GlobalNamespace::__OVRPlugin__Node)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_0_1_3::ovrp_GetNodeAcceleration)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277293c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_3*>::get(), "ovrp_GetNodeAcceleration", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_0_1_3::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_3*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_0_1_3::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_3*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::__OVRPlugin__OVRP_0_1_3::ovrp_GetNodeVelocity(::GlobalNamespace::__OVRPlugin__Node nodeId) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_3*>::get(), "ovrp_GetNodeVelocity", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::__OVRPlugin__OVRP_0_1_3::ovrp_GetNodeAcceleration(::GlobalNamespace::__OVRPlugin__Node nodeId) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_3*>::get(), "ovrp_GetNodeAcceleration", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method, nodeId);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_0_1_3::__OVRPlugin__OVRP_0_1_3() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_0_5_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_5_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_0_5_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_5_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_0_5_0::__OVRPlugin__OVRP_0_5_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_0_0.ovrp_GetTrackingOriginType
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__TrackingOrigin (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_0_0::ovrp_GetTrackingOriginType)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2772ac8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_0_0*>::get(),
                                                                               "ovrp_GetTrackingOriginType", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_0_0.ovrp_SetTrackingOriginType
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__TrackingOrigin)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_0_0::ovrp_SetTrackingOriginType)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2772b30;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_0_0*>::get(), "ovrp_SetTrackingOriginType", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_0_0.ovrp_GetTrackingCalibratedOrigin
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_0_0::ovrp_GetTrackingCalibratedOrigin)> {
  constexpr static std::size_t size = 0x74;
  constexpr static std::size_t addrs = 0x2772bac;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_0_0*>::get(),
                                                                               "ovrp_GetTrackingCalibratedOrigin", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_0_0.ovrp_RecenterTrackingOrigin
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(uint32_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_0_0::ovrp_RecenterTrackingOrigin)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2772c20;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_0_0*>::get(), "ovrp_RecenterTrackingOrigin",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_0_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_0_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_0_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_0_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__TrackingOrigin GlobalNamespace::__OVRPlugin__OVRP_1_0_0::ovrp_GetTrackingOriginType() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_0_0*>::get(),
                                                                             "ovrp_GetTrackingOriginType", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__TrackingOrigin, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_0_0::ovrp_SetTrackingOriginType(::GlobalNamespace::__OVRPlugin__TrackingOrigin originType) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_0_0*>::get(), "ovrp_SetTrackingOriginType", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, originType);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::__OVRPlugin__OVRP_1_0_0::ovrp_GetTrackingCalibratedOrigin() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_0_0*>::get(),
                                                                             "ovrp_GetTrackingCalibratedOrigin", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_0_0::ovrp_RecenterTrackingOrigin(uint32_t flags) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_0_0*>::get(), "ovrp_RecenterTrackingOrigin",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, flags);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_0_0::__OVRPlugin__OVRP_1_0_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetInitialized
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetInitialized)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2772d20;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetInitialized", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0._ovrp_GetVersion
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void* (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::_ovrp_GetVersion)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2772d88;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "_ovrp_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetVersion
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetVersion)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2772df0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0._ovrp_GetNativeSDKVersion
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void* (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::_ovrp_GetNativeSDKVersion)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2772e74;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "_ovrp_GetNativeSDKVersion", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetNativeSDKVersion
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetNativeSDKVersion)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2772edc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetNativeSDKVersion", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetAudioOutId
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void* (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAudioOutId)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2772f60;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetAudioOutId", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetAudioInId
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void* (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAudioInId)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2772fc8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetAudioInId", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetEyeTextureScale
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetEyeTextureScale)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x2773030;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetEyeTextureScale", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_SetEyeTextureScale
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(float_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetEyeTextureScale)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2773094;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_SetEyeTextureScale",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetTrackingOrientationSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetTrackingOrientationSupported)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2773110;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetTrackingOrientationSupported", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetTrackingOrientationEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetTrackingOrientationEnabled)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2773178;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetTrackingOrientationEnabled", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_SetTrackingOrientationEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__Bool)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetTrackingOrientationEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27731e0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_SetTrackingOrientationEnabled", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetTrackingPositionSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetTrackingPositionSupported)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277325c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetTrackingPositionSupported", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetTrackingPositionEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetTrackingPositionEnabled)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x27732c4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetTrackingPositionEnabled", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_SetTrackingPositionEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__Bool)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetTrackingPositionEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277332c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_SetTrackingPositionEnabled", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetNodePresent
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__Node)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetNodePresent)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27733a8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_GetNodePresent", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetNodeOrientationTracked
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__Node)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetNodeOrientationTracked)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2773424;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_GetNodeOrientationTracked", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetNodePositionTracked
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__Node)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetNodePositionTracked)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27734a0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_GetNodePositionTracked", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetNodeFrustum
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Frustumf (*)(::GlobalNamespace::__OVRPlugin__Node)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetNodeFrustum)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277351c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_GetNodeFrustum", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetControllerState
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__ControllerState (*)(uint32_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetControllerState)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2773598;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_GetControllerState",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetSystemCpuLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemCpuLevel)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277361c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetSystemCpuLevel", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_SetSystemCpuLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(int32_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetSystemCpuLevel)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2773684;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_SetSystemCpuLevel",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetSystemGpuLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemGpuLevel)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2773700;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetSystemGpuLevel", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_SetSystemGpuLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(int32_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetSystemGpuLevel)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2773768;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_SetSystemGpuLevel",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetSystemPowerSavingMode
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemPowerSavingMode)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x27737e4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetSystemPowerSavingMode", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetSystemDisplayFrequency
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemDisplayFrequency)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x277384c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetSystemDisplayFrequency", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetSystemVSyncCount
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemVSyncCount)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x27738b0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetSystemVSyncCount", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetSystemVolume
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemVolume)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x2773918;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetSystemVolume", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetSystemBatteryStatus
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__BatteryStatus (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemBatteryStatus)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277397c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetSystemBatteryStatus", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetSystemBatteryLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemBatteryLevel)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x27739e4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetSystemBatteryLevel", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetSystemBatteryTemperature
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemBatteryTemperature)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x2773a48;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetSystemBatteryTemperature", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0._ovrp_GetSystemProductName
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void* (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::_ovrp_GetSystemProductName)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2773aac;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "_ovrp_GetSystemProductName", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetSystemProductName
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemProductName)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2773b14;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetSystemProductName", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_ShowSystemUI
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__PlatformUI)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_ShowSystemUI)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2773b98;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_ShowSystemUI", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PlatformUI>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetAppMonoscopic
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAppMonoscopic)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2773c14;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetAppMonoscopic", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_SetAppMonoscopic
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__Bool)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetAppMonoscopic)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2773c7c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_SetAppMonoscopic", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetAppHasVrFocus
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAppHasVrFocus)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2773cf8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetAppHasVrFocus", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetAppShouldQuit
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAppShouldQuit)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2773d60;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetAppShouldQuit", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetAppShouldRecenter
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAppShouldRecenter)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2773dc8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetAppShouldRecenter", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0._ovrp_GetAppLatencyTimings
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void* (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::_ovrp_GetAppLatencyTimings)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2773e30;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "_ovrp_GetAppLatencyTimings", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetAppLatencyTimings
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAppLatencyTimings)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2773e98;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetAppLatencyTimings", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetUserPresent
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetUserPresent)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2773f1c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetUserPresent", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetUserIPD
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetUserIPD)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x2773f84;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetUserIPD", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_SetUserIPD
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(float_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetUserIPD)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2773fe8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_SetUserIPD",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetUserEyeDepth
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetUserEyeDepth)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x2774064;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetUserEyeDepth", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_SetUserEyeDepth
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(float_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetUserEyeDepth)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27740c8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_SetUserEyeDepth",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetUserEyeHeight
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetUserEyeHeight)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x2774144;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                               "ovrp_GetUserEyeHeight", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_SetUserEyeHeight
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(float_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetUserEyeHeight)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27741a8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_SetUserEyeHeight",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_1_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_1_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetInitialized() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetInitialized", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline void* GlobalNamespace::__OVRPlugin__OVRP_1_1_0::_ovrp_GetVersion() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "_ovrp_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<void*, false>(nullptr, ___internal_method);
}
inline ::StringW GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetVersion() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::StringW, false>(nullptr, ___internal_method);
}
inline void* GlobalNamespace::__OVRPlugin__OVRP_1_1_0::_ovrp_GetNativeSDKVersion() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "_ovrp_GetNativeSDKVersion", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<void*, false>(nullptr, ___internal_method);
}
inline ::StringW GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetNativeSDKVersion() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetNativeSDKVersion", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::StringW, false>(nullptr, ___internal_method);
}
inline void* GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAudioOutId() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetAudioOutId", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<void*, false>(nullptr, ___internal_method);
}
inline void* GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAudioInId() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetAudioInId", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<void*, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetEyeTextureScale() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetEyeTextureScale", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetEyeTextureScale(float_t value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_SetEyeTextureScale",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetTrackingOrientationSupported() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetTrackingOrientationSupported", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetTrackingOrientationEnabled() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetTrackingOrientationEnabled", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetTrackingOrientationEnabled(::GlobalNamespace::__OVRPlugin__Bool value) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_SetTrackingOrientationEnabled",
                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetTrackingPositionSupported() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetTrackingPositionSupported", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetTrackingPositionEnabled() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetTrackingPositionEnabled", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetTrackingPositionEnabled(::GlobalNamespace::__OVRPlugin__Bool value) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_SetTrackingPositionEnabled",
                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetNodePresent(::GlobalNamespace::__OVRPlugin__Node nodeId) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_GetNodePresent", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetNodeOrientationTracked(::GlobalNamespace::__OVRPlugin__Node nodeId) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_GetNodeOrientationTracked",
                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetNodePositionTracked(::GlobalNamespace::__OVRPlugin__Node nodeId) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_GetNodePositionTracked", std::vector<Il2CppClass*>{},
                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__Frustumf GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetNodeFrustum(::GlobalNamespace::__OVRPlugin__Node nodeId) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_GetNodeFrustum", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Frustumf, false>(nullptr, ___internal_method, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__ControllerState GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetControllerState(uint32_t controllerMask) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_GetControllerState",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__ControllerState, false>(nullptr, ___internal_method, controllerMask);
}
inline int32_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemCpuLevel() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetSystemCpuLevel", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetSystemCpuLevel(int32_t value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_SetSystemCpuLevel",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline int32_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemGpuLevel() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetSystemGpuLevel", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetSystemGpuLevel(int32_t value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_SetSystemGpuLevel",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemPowerSavingMode() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetSystemPowerSavingMode", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemDisplayFrequency() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetSystemDisplayFrequency", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline int32_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemVSyncCount() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetSystemVSyncCount", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemVolume() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetSystemVolume", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__BatteryStatus GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemBatteryStatus() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetSystemBatteryStatus", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__BatteryStatus, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemBatteryLevel() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetSystemBatteryLevel", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemBatteryTemperature() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetSystemBatteryTemperature", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline void* GlobalNamespace::__OVRPlugin__OVRP_1_1_0::_ovrp_GetSystemProductName() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "_ovrp_GetSystemProductName", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<void*, false>(nullptr, ___internal_method);
}
inline ::StringW GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemProductName() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetSystemProductName", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::StringW, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_ShowSystemUI(::GlobalNamespace::__OVRPlugin__PlatformUI ui) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_ShowSystemUI", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PlatformUI>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, ui);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAppMonoscopic() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetAppMonoscopic", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetAppMonoscopic(::GlobalNamespace::__OVRPlugin__Bool value) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_SetAppMonoscopic", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAppHasVrFocus() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetAppHasVrFocus", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAppShouldQuit() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetAppShouldQuit", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAppShouldRecenter() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetAppShouldRecenter", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline void* GlobalNamespace::__OVRPlugin__OVRP_1_1_0::_ovrp_GetAppLatencyTimings() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "_ovrp_GetAppLatencyTimings", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<void*, false>(nullptr, ___internal_method);
}
inline ::StringW GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAppLatencyTimings() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetAppLatencyTimings", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::StringW, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetUserPresent() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetUserPresent", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetUserIPD() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetUserIPD", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetUserIPD(float_t value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_SetUserIPD",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline float_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetUserEyeDepth() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetUserEyeDepth", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetUserEyeDepth(float_t value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_SetUserEyeDepth",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline float_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetUserEyeHeight() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                                                                             "ovrp_GetUserEyeHeight", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetUserEyeHeight(float_t value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(), "ovrp_SetUserEyeHeight",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::__OVRPlugin__OVRP_1_1_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_2_0.ovrp_SetSystemVSyncCount
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(int32_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_2_0::ovrp_SetSystemVSyncCount)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27742a8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_2_0*>::get(), "ovrp_SetSystemVSyncCount",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_2_0.ovrpi_SetTrackingCalibratedOrigin
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_2_0::ovrpi_SetTrackingCalibratedOrigin)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2774324;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_2_0*>::get(),
                                                                               "ovrpi_SetTrackingCalibratedOrigin", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_2_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_2_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_2_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_2_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_2_0::ovrp_SetSystemVSyncCount(int32_t vsyncCount) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_2_0*>::get(), "ovrp_SetSystemVSyncCount",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, vsyncCount);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_2_0::ovrpi_SetTrackingCalibratedOrigin() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_2_0*>::get(),
                                                                             "ovrpi_SetTrackingCalibratedOrigin", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_2_0::__OVRPlugin__OVRP_1_2_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_3_0.ovrp_GetEyeOcclusionMeshEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_3_0::ovrp_GetEyeOcclusionMeshEnabled)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2774410;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_3_0*>::get(),
                                                                               "ovrp_GetEyeOcclusionMeshEnabled", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_3_0.ovrp_SetEyeOcclusionMeshEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__Bool)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_3_0::ovrp_SetEyeOcclusionMeshEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2774478;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_3_0*>::get(), "ovrp_SetEyeOcclusionMeshEnabled", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_3_0.ovrp_GetSystemHeadphonesPresent
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_3_0::ovrp_GetSystemHeadphonesPresent)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x27744f4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_3_0*>::get(),
                                                                               "ovrp_GetSystemHeadphonesPresent", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_3_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_3_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_3_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_3_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_3_0::ovrp_GetEyeOcclusionMeshEnabled() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_3_0*>::get(),
                                                                             "ovrp_GetEyeOcclusionMeshEnabled", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_3_0::ovrp_SetEyeOcclusionMeshEnabled(::GlobalNamespace::__OVRPlugin__Bool value) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_3_0*>::get(), "ovrp_SetEyeOcclusionMeshEnabled",
                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_3_0::ovrp_GetSystemHeadphonesPresent() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_3_0*>::get(),
                                                                             "ovrp_GetSystemHeadphonesPresent", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_3_0::__OVRPlugin__OVRP_1_3_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_5_0.ovrp_GetSystemRegion
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__SystemRegion (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_5_0::ovrp_GetSystemRegion)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x27745e0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_5_0*>::get(),
                                                                               "ovrp_GetSystemRegion", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_5_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_5_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_5_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_5_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__SystemRegion GlobalNamespace::__OVRPlugin__OVRP_1_5_0::ovrp_GetSystemRegion() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_5_0*>::get(),
                                                                             "ovrp_GetSystemRegion", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__SystemRegion, false>(nullptr, ___internal_method);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_5_0::__OVRPlugin__OVRP_1_5_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_6_0.ovrp_GetTrackingIPDEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetTrackingIPDEnabled)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x27746cc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                                                                               "ovrp_GetTrackingIPDEnabled", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_6_0.ovrp_SetTrackingIPDEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__Bool)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_SetTrackingIPDEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2774734;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(), "ovrp_SetTrackingIPDEnabled", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_6_0.ovrp_GetControllerHapticsDesc
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__HapticsDesc (*)(uint32_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetControllerHapticsDesc)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27747b0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(), "ovrp_GetControllerHapticsDesc",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_6_0.ovrp_GetControllerHapticsState
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__HapticsState (*)(uint32_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetControllerHapticsState)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2774834;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(), "ovrp_GetControllerHapticsState",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_6_0.ovrp_SetControllerHaptics
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(uint32_t, ::GlobalNamespace::__OVRPlugin__HapticsBuffer)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_SetControllerHaptics)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x27748b0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((
        ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(), "ovrp_SetControllerHaptics", std::vector<Il2CppClass*>{},
                                   ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                                                     ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsBuffer>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_6_0.ovrp_SetOverlayQuad3
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(
    uint32_t, void*, void*, void*, ::GlobalNamespace::__OVRPlugin__Posef, ::GlobalNamespace::__OVRPlugin__Vector3f, int32_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_SetOverlayQuad3)> {
  constexpr static std::size_t size = 0xec;
  constexpr static std::size_t addrs = 0x2774944;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(), "ovrp_SetOverlayQuad3", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector3f>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_6_0.ovrp_GetEyeRecommendedResolutionScale
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetEyeRecommendedResolutionScale)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x2774a30;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                                                                               "ovrp_GetEyeRecommendedResolutionScale", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_6_0.ovrp_GetAppCpuStartToGpuEndTime
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetAppCpuStartToGpuEndTime)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x2774a94;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                                                                               "ovrp_GetAppCpuStartToGpuEndTime", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_6_0.ovrp_GetSystemRecommendedMSAALevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetSystemRecommendedMSAALevel)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2774af8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                                                                               "ovrp_GetSystemRecommendedMSAALevel", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_6_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_6_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetTrackingIPDEnabled() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                                                                             "ovrp_GetTrackingIPDEnabled", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_SetTrackingIPDEnabled(::GlobalNamespace::__OVRPlugin__Bool value) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(), "ovrp_SetTrackingIPDEnabled", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__HapticsDesc GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetControllerHapticsDesc(uint32_t controllerMask) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(), "ovrp_GetControllerHapticsDesc",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__HapticsDesc, false>(nullptr, ___internal_method, controllerMask);
}
inline ::GlobalNamespace::__OVRPlugin__HapticsState GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetControllerHapticsState(uint32_t controllerMask) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(), "ovrp_GetControllerHapticsState",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__HapticsState, false>(nullptr, ___internal_method, controllerMask);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_SetControllerHaptics(uint32_t controllerMask, ::GlobalNamespace::__OVRPlugin__HapticsBuffer hapticsBuffer) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(), "ovrp_SetControllerHaptics", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsBuffer>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, controllerMask, hapticsBuffer);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_SetOverlayQuad3(uint32_t flags, void* textureLeft, void* textureRight, void* device,
                                                                                                           ::GlobalNamespace::__OVRPlugin__Posef pose, ::GlobalNamespace::__OVRPlugin__Vector3f scale,
                                                                                                           int32_t layerIndex) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(), "ovrp_SetOverlayQuad3", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector3f>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, flags, textureLeft, textureRight, device, pose, scale, layerIndex);
}
inline float_t GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetEyeRecommendedResolutionScale() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                                                                             "ovrp_GetEyeRecommendedResolutionScale", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetAppCpuStartToGpuEndTime() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                                                                             "ovrp_GetAppCpuStartToGpuEndTime", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline int32_t GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetSystemRecommendedMSAALevel() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                                                                             "ovrp_GetSystemRecommendedMSAALevel", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_6_0::__OVRPlugin__OVRP_1_6_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_7_0.ovrp_GetAppChromaticCorrection
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_7_0::ovrp_GetAppChromaticCorrection)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2774be4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_7_0*>::get(),
                                                                               "ovrp_GetAppChromaticCorrection", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_7_0.ovrp_SetAppChromaticCorrection
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__Bool)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_7_0::ovrp_SetAppChromaticCorrection)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2774c4c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_7_0*>::get(), "ovrp_SetAppChromaticCorrection", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_7_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_7_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_7_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_7_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_7_0::ovrp_GetAppChromaticCorrection() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_7_0*>::get(),
                                                                             "ovrp_GetAppChromaticCorrection", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_7_0::ovrp_SetAppChromaticCorrection(::GlobalNamespace::__OVRPlugin__Bool value) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_7_0*>::get(), "ovrp_SetAppChromaticCorrection",
                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_7_0::__OVRPlugin__OVRP_1_7_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0.ovrp_GetBoundaryConfigured
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetBoundaryConfigured)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2774d4c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                                                                               "ovrp_GetBoundaryConfigured", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0.ovrp_TestBoundaryNode
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__BoundaryTestResult (*)(
    ::GlobalNamespace::__OVRPlugin__Node, ::GlobalNamespace::__OVRPlugin__BoundaryType)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_TestBoundaryNode)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x2774db4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(), "ovrp_TestBoundaryNode", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0.ovrp_TestBoundaryPoint
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__BoundaryTestResult (*)(
    ::GlobalNamespace::__OVRPlugin__Vector3f, ::GlobalNamespace::__OVRPlugin__BoundaryType)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_TestBoundaryPoint)> {
  constexpr static std::size_t size = 0xac;
  constexpr static std::size_t addrs = 0x2774e48;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(), "ovrp_TestBoundaryPoint", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector3f>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0.ovrp_GetBoundaryGeometry
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__BoundaryGeometry (*)(::GlobalNamespace::__OVRPlugin__BoundaryType)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetBoundaryGeometry)> {
  constexpr static std::size_t size = 0xa0;
  constexpr static std::size_t addrs = 0x2774ef4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(), "ovrp_GetBoundaryGeometry", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0.ovrp_GetBoundaryDimensions
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Vector3f (*)(::GlobalNamespace::__OVRPlugin__BoundaryType)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetBoundaryDimensions)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2774f94;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(), "ovrp_GetBoundaryDimensions", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0.ovrp_GetBoundaryVisible
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetBoundaryVisible)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2775010;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                                                                               "ovrp_GetBoundaryVisible", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0.ovrp_SetBoundaryVisible
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__Bool)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_SetBoundaryVisible)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2775078;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(), "ovrp_SetBoundaryVisible", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0.ovrp_Update2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(int32_t, int32_t, double_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_Update2)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x27750f4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(), "ovrp_Update2", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0.ovrp_GetNodePose2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)(int32_t, ::GlobalNamespace::__OVRPlugin__Node)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetNodePose2)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x2775188;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(), "ovrp_GetNodePose2", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0.ovrp_GetNodeVelocity2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)(int32_t, ::GlobalNamespace::__OVRPlugin__Node)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetNodeVelocity2)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277521c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(), "ovrp_GetNodeVelocity2", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0.ovrp_GetNodeAcceleration2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)(int32_t, ::GlobalNamespace::__OVRPlugin__Node)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetNodeAcceleration2)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x27752b0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((
        ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(), "ovrp_GetNodeAcceleration2", std::vector<Il2CppClass*>{},
                                   ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                     ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_8_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_8_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetBoundaryConfigured() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                                                                             "ovrp_GetBoundaryConfigured", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__BoundaryTestResult GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_TestBoundaryNode(::GlobalNamespace::__OVRPlugin__Node nodeId,
                                                                                                                          ::GlobalNamespace::__OVRPlugin__BoundaryType boundaryType) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(), "ovrp_TestBoundaryNode", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__BoundaryTestResult, false>(nullptr, ___internal_method, nodeId, boundaryType);
}
inline ::GlobalNamespace::__OVRPlugin__BoundaryTestResult GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_TestBoundaryPoint(::GlobalNamespace::__OVRPlugin__Vector3f point,
                                                                                                                           ::GlobalNamespace::__OVRPlugin__BoundaryType boundaryType) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(), "ovrp_TestBoundaryPoint", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector3f>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__BoundaryTestResult, false>(nullptr, ___internal_method, point, boundaryType);
}
inline ::GlobalNamespace::__OVRPlugin__BoundaryGeometry GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetBoundaryGeometry(::GlobalNamespace::__OVRPlugin__BoundaryType boundaryType) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(), "ovrp_GetBoundaryGeometry", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__BoundaryGeometry, false>(nullptr, ___internal_method, boundaryType);
}
inline ::GlobalNamespace::__OVRPlugin__Vector3f GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetBoundaryDimensions(::GlobalNamespace::__OVRPlugin__BoundaryType boundaryType) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(), "ovrp_GetBoundaryDimensions", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Vector3f, false>(nullptr, ___internal_method, boundaryType);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetBoundaryVisible() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                                                                             "ovrp_GetBoundaryVisible", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_SetBoundaryVisible(::GlobalNamespace::__OVRPlugin__Bool value) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(), "ovrp_SetBoundaryVisible", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_Update2(int32_t stateId, int32_t frameIndex, double_t predictionSeconds) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(), "ovrp_Update2", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, stateId, frameIndex, predictionSeconds);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetNodePose2(int32_t stateId, ::GlobalNamespace::__OVRPlugin__Node nodeId) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(), "ovrp_GetNodePose2", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method, stateId, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetNodeVelocity2(int32_t stateId, ::GlobalNamespace::__OVRPlugin__Node nodeId) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(), "ovrp_GetNodeVelocity2", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method, stateId, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetNodeAcceleration2(int32_t stateId, ::GlobalNamespace::__OVRPlugin__Node nodeId) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(), "ovrp_GetNodeAcceleration2", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method, stateId, nodeId);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::__OVRPlugin__OVRP_1_8_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_9_0.ovrp_GetSystemHeadsetType
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__SystemHeadset (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_GetSystemHeadsetType)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x27753c8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(),
                                                                               "ovrp_GetSystemHeadsetType", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_9_0.ovrp_GetActiveController
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Controller (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_GetActiveController)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2775430;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(),
                                                                               "ovrp_GetActiveController", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_9_0.ovrp_GetConnectedControllers
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Controller (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_GetConnectedControllers)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2775498;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(),
                                                                               "ovrp_GetConnectedControllers", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_9_0.ovrp_GetBoundaryGeometry2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__BoundaryType, void*, ByRef<int32_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_GetBoundaryGeometry2)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x2775500;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(), "ovrp_GetBoundaryGeometry2", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_9_0.ovrp_GetAppPerfStats
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__AppPerfStats (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_GetAppPerfStats)> {
  constexpr static std::size_t size = 0x88;
  constexpr static std::size_t addrs = 0x2775594;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(),
                                                                               "ovrp_GetAppPerfStats", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_9_0.ovrp_ResetAppPerfStats
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_ResetAppPerfStats)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277561c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(),
                                                                               "ovrp_ResetAppPerfStats", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_9_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_9_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_GetSystemHeadsetType() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(),
                                                                             "ovrp_GetSystemHeadsetType", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__SystemHeadset, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Controller GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_GetActiveController() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(),
                                                                             "ovrp_GetActiveController", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Controller, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Controller GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_GetConnectedControllers() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(),
                                                                             "ovrp_GetConnectedControllers", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Controller, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_GetBoundaryGeometry2(::GlobalNamespace::__OVRPlugin__BoundaryType boundaryType, void* points,
                                                                                                                ByRef<int32_t> pointsCount) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(), "ovrp_GetBoundaryGeometry2", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, boundaryType, points, pointsCount);
}
inline ::GlobalNamespace::__OVRPlugin__AppPerfStats GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_GetAppPerfStats() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(),
                                                                             "ovrp_GetAppPerfStats", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__AppPerfStats, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_ResetAppPerfStats() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(),
                                                                             "ovrp_ResetAppPerfStats", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_9_0::__OVRPlugin__OVRP_1_9_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_10_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_10_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_10_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_10_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_10_0::__OVRPlugin__OVRP_1_10_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_11_0.ovrp_SetDesiredEyeTextureFormat
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__EyeTextureFormat)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_11_0::ovrp_SetDesiredEyeTextureFormat)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277578c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_11_0*>::get(), "ovrp_SetDesiredEyeTextureFormat", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_11_0.ovrp_GetDesiredEyeTextureFormat
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__EyeTextureFormat (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_11_0::ovrp_GetDesiredEyeTextureFormat)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2775808;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_11_0*>::get(),
                                                                               "ovrp_GetDesiredEyeTextureFormat", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_11_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_11_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_11_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_11_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_11_0::ovrp_SetDesiredEyeTextureFormat(::GlobalNamespace::__OVRPlugin__EyeTextureFormat value) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_11_0*>::get(), "ovrp_SetDesiredEyeTextureFormat", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__EyeTextureFormat GlobalNamespace::__OVRPlugin__OVRP_1_11_0::ovrp_GetDesiredEyeTextureFormat() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_11_0*>::get(),
                                                                             "ovrp_GetDesiredEyeTextureFormat", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, false>(nullptr, ___internal_method);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_11_0::__OVRPlugin__OVRP_1_11_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_12_0.ovrp_GetAppFramerate
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_12_0::ovrp_GetAppFramerate)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x27758f4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_12_0*>::get(),
                                                                               "ovrp_GetAppFramerate", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_12_0.ovrp_GetNodePoseState
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__PoseStatef (*)(
    ::GlobalNamespace::__OVRPlugin__Step, ::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_12_0::ovrp_GetNodePoseState)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x2775958;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_12_0*>::get(), "ovrp_GetNodePoseState", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_12_0.ovrp_GetControllerState2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__ControllerState2 (*)(uint32_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_12_0::ovrp_GetControllerState2)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27759ec;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_12_0*>::get(), "ovrp_GetControllerState2",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_12_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_12_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_12_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_12_0*>::get>();
}
inline float_t GlobalNamespace::__OVRPlugin__OVRP_1_12_0::ovrp_GetAppFramerate() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_12_0*>::get(),
                                                                             "ovrp_GetAppFramerate", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__PoseStatef GlobalNamespace::__OVRPlugin__OVRP_1_12_0::ovrp_GetNodePoseState(::GlobalNamespace::__OVRPlugin__Step stepId,
                                                                                                                   ::GlobalNamespace::__OVRPlugin__Node nodeId) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_12_0*>::get(), "ovrp_GetNodePoseState", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__PoseStatef, false>(nullptr, ___internal_method, stepId, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__ControllerState2 GlobalNamespace::__OVRPlugin__OVRP_1_12_0::ovrp_GetControllerState2(uint32_t controllerMask) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_12_0*>::get(), "ovrp_GetControllerState2",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__ControllerState2, false>(nullptr, ___internal_method, controllerMask);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_12_0::__OVRPlugin__OVRP_1_12_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_InitializeMixedReality
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_InitializeMixedReality)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2775af4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                                                                               "ovrp_InitializeMixedReality", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_ShutdownMixedReality
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_ShutdownMixedReality)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2775b5c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                                                                               "ovrp_ShutdownMixedReality", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_GetMixedRealityInitialized
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetMixedRealityInitialized)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2775bc4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                                                                               "ovrp_GetMixedRealityInitialized", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_UpdateExternalCamera
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_UpdateExternalCamera)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2775c2c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                                                                               "ovrp_UpdateExternalCamera", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_GetExternalCameraCount
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<int32_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetExternalCameraCount)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2775c94;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(), "ovrp_GetExternalCameraCount",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_GetExternalCameraName
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ::ArrayW<char16_t, ::Array<char16_t>*>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetExternalCameraName)> {
  constexpr static std::size_t size = 0x110;
  constexpr static std::size_t addrs = 0x2775d10;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(), "ovrp_GetExternalCameraName", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<char16_t, ::Array<char16_t>*>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_GetExternalCameraIntrinsics
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetExternalCameraIntrinsics)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2775e20;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(), "ovrp_GetExternalCameraIntrinsics", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_GetExternalCameraExtrinsics
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetExternalCameraExtrinsics)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2775ea4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(), "ovrp_GetExternalCameraExtrinsics", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_CalculateLayerDesc
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::GlobalNamespace::__OVRPlugin__OverlayShape, ::GlobalNamespace::__OVRPlugin__LayerLayout, ByRef<::GlobalNamespace::__OVRPlugin__Sizei>, int32_t, int32_t,
    ::GlobalNamespace::__OVRPlugin__EyeTextureFormat, int32_t, ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_CalculateLayerDesc)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x2775f28;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(), "ovrp_CalculateLayerDesc", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__OverlayShape>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerLayout>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_EnqueueSetupLayer
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal>, void*)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_EnqueueSetupLayer)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2775ff4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(), "ovrp_EnqueueSetupLayer", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_EnqueueDestroyLayer
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(void*)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_EnqueueDestroyLayer)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2776078;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(), "ovrp_EnqueueDestroyLayer",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_GetLayerTextureStageCount
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ByRef<int32_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetLayerTextureStageCount)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27760f4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(), "ovrp_GetLayerTextureStageCount", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_GetLayerTexturePtr
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, int32_t, ::GlobalNamespace::__OVRPlugin__Eye, ByRef<void*>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetLayerTexturePtr)> {
  constexpr static std::size_t size = 0x9c;
  constexpr static std::size_t addrs = 0x2776178;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(), "ovrp_GetLayerTexturePtr", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Eye>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<void*>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_EnqueueSubmitLayer
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    uint32_t, void*, void*, int32_t, int32_t, ByRef<::GlobalNamespace::__OVRPlugin__Posef>, ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>, int32_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_EnqueueSubmitLayer)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x2776214;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(), "ovrp_EnqueueSubmitLayer", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{
            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get(),
            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_GetNodeFrustum2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::GlobalNamespace::__OVRPlugin__Node, ByRef<::GlobalNamespace::__OVRPlugin__Frustumf2>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetNodeFrustum2)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27762e0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(), "ovrp_GetNodeFrustum2", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Frustumf2>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_GetEyeTextureArrayEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetEyeTextureArrayEnabled)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2776364;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                                                                               "ovrp_GetEyeTextureArrayEnabled", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_15_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_15_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_InitializeMixedReality() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                                                                             "ovrp_InitializeMixedReality", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_ShutdownMixedReality() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                                                                             "ovrp_ShutdownMixedReality", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetMixedRealityInitialized() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                                                                             "ovrp_GetMixedRealityInitialized", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_UpdateExternalCamera() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                                                                             "ovrp_UpdateExternalCamera", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetExternalCameraCount(ByRef<int32_t> cameraCount) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(), "ovrp_GetExternalCameraCount",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraCount);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetExternalCameraName(int32_t cameraId, ::ArrayW<char16_t, ::Array<char16_t>*> cameraName) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(), "ovrp_GetExternalCameraName", std::vector<Il2CppClass*>{},
                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<char16_t, ::Array<char16_t>*>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraId, cameraName);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetExternalCameraIntrinsics(int32_t cameraId,
                                                                                                                          ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics> cameraIntrinsics) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(), "ovrp_GetExternalCameraIntrinsics", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraId, cameraIntrinsics);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetExternalCameraExtrinsics(int32_t cameraId,
                                                                                                                          ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics> cameraExtrinsics) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(), "ovrp_GetExternalCameraExtrinsics", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraId, cameraExtrinsics);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_CalculateLayerDesc(
    ::GlobalNamespace::__OVRPlugin__OverlayShape shape, ::GlobalNamespace::__OVRPlugin__LayerLayout layout, ByRef<::GlobalNamespace::__OVRPlugin__Sizei> textureSize, int32_t mipLevels,
    int32_t sampleCount, ::GlobalNamespace::__OVRPlugin__EyeTextureFormat format, int32_t layerFlags, ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal> layerDesc) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(), "ovrp_CalculateLayerDesc", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__OverlayShape>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerLayout>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, shape, layout, textureSize, mipLevels, sampleCount, format, layerFlags,
                                                                                            layerDesc);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_EnqueueSetupLayer(ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal> desc, void* layerId) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(), "ovrp_EnqueueSetupLayer", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, desc, layerId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_EnqueueDestroyLayer(void* layerId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(), "ovrp_EnqueueDestroyLayer",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, layerId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetLayerTextureStageCount(int32_t layerId, ByRef<int32_t> layerTextureStageCount) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(), "ovrp_GetLayerTextureStageCount", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, layerId, layerTextureStageCount);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetLayerTexturePtr(int32_t layerId, int32_t stage, ::GlobalNamespace::__OVRPlugin__Eye eyeId,
                                                                                                                 ByRef<void*> textureHandle) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(), "ovrp_GetLayerTexturePtr", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Eye>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<void*>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, layerId, stage, eyeId, textureHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_EnqueueSubmitLayer(uint32_t flags, void* textureLeft, void* textureRight, int32_t layerId,
                                                                                                                 int32_t frameIndex, ByRef<::GlobalNamespace::__OVRPlugin__Posef> pose,
                                                                                                                 ByRef<::GlobalNamespace::__OVRPlugin__Vector3f> scale, int32_t layerIndex) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(), "ovrp_EnqueueSubmitLayer", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{
          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get(),
          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, flags, textureLeft, textureRight, layerId, frameIndex, pose, scale,
                                                                                            layerIndex);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetNodeFrustum2(::GlobalNamespace::__OVRPlugin__Node nodeId,
                                                                                                              ByRef<::GlobalNamespace::__OVRPlugin__Frustumf2> nodeFrustum) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(), "ovrp_GetNodeFrustum2", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Frustumf2>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, nodeId, nodeFrustum);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetEyeTextureArrayEnabled() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                                                                             "ovrp_GetEyeTextureArrayEnabled", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::__OVRPlugin__OVRP_1_15_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_16_0.ovrp_UpdateCameraDevices
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_UpdateCameraDevices)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2776450;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(),
                                                                               "ovrp_UpdateCameraDevices", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_16_0.ovrp_IsCameraDeviceAvailable
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__CameraDevice)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_IsCameraDeviceAvailable)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27764b8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(), "ovrp_IsCameraDeviceAvailable", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_16_0.ovrp_SetCameraDevicePreferredColorFrameSize
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::GlobalNamespace::__OVRPlugin__CameraDevice, ::GlobalNamespace::__OVRPlugin__Sizei)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_SetCameraDevicePreferredColorFrameSize)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2776534;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(), "ovrp_SetCameraDevicePreferredColorFrameSize", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Sizei>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_16_0.ovrp_OpenCameraDevice
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__CameraDevice)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_OpenCameraDevice)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27765b8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(), "ovrp_OpenCameraDevice", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_16_0.ovrp_CloseCameraDevice
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__CameraDevice)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_CloseCameraDevice)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2776634;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(), "ovrp_CloseCameraDevice", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_16_0.ovrp_HasCameraDeviceOpened
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__CameraDevice)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_HasCameraDeviceOpened)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27766b0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(), "ovrp_HasCameraDeviceOpened", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_16_0.ovrp_IsCameraDeviceColorFrameAvailable
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__CameraDevice)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_IsCameraDeviceColorFrameAvailable)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277672c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(), "ovrp_IsCameraDeviceColorFrameAvailable", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_16_0.ovrp_GetCameraDeviceColorFrameSize
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::GlobalNamespace::__OVRPlugin__CameraDevice, ByRef<::GlobalNamespace::__OVRPlugin__Sizei>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_GetCameraDeviceColorFrameSize)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27767a8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(), "ovrp_GetCameraDeviceColorFrameSize", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_16_0.ovrp_GetCameraDeviceColorFrameBgraPixels
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::GlobalNamespace::__OVRPlugin__CameraDevice, ByRef<void*>, ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_GetCameraDeviceColorFrameBgraPixels)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277682c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(), "ovrp_GetCameraDeviceColorFrameBgraPixels", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<void*>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_16_0.ovrp_GetControllerState4
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint32_t, ByRef<::GlobalNamespace::__OVRPlugin__ControllerState4>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_GetControllerState4)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27768c0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((
        ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(), "ovrp_GetControllerState4", std::vector<Il2CppClass*>{},
                                   ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                                                     ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ControllerState4>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_16_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_16_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_UpdateCameraDevices() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(),
                                                                             "ovrp_UpdateCameraDevices", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_IsCameraDeviceAvailable(::GlobalNamespace::__OVRPlugin__CameraDevice cameraDevice) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(), "ovrp_IsCameraDeviceAvailable", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, cameraDevice);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_SetCameraDevicePreferredColorFrameSize(::GlobalNamespace::__OVRPlugin__CameraDevice cameraDevice,
                                                                                                                                     ::GlobalNamespace::__OVRPlugin__Sizei preferredColorFrameSize) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(), "ovrp_SetCameraDevicePreferredColorFrameSize", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Sizei>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraDevice, preferredColorFrameSize);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_OpenCameraDevice(::GlobalNamespace::__OVRPlugin__CameraDevice cameraDevice) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(), "ovrp_OpenCameraDevice", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraDevice);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_CloseCameraDevice(::GlobalNamespace::__OVRPlugin__CameraDevice cameraDevice) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(), "ovrp_CloseCameraDevice", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraDevice);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_HasCameraDeviceOpened(::GlobalNamespace::__OVRPlugin__CameraDevice cameraDevice) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(), "ovrp_HasCameraDeviceOpened", std::vector<Il2CppClass*>{},
                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, cameraDevice);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_IsCameraDeviceColorFrameAvailable(::GlobalNamespace::__OVRPlugin__CameraDevice cameraDevice) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(), "ovrp_IsCameraDeviceColorFrameAvailable", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, cameraDevice);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_GetCameraDeviceColorFrameSize(::GlobalNamespace::__OVRPlugin__CameraDevice cameraDevice,
                                                                                                                            ByRef<::GlobalNamespace::__OVRPlugin__Sizei> colorFrameSize) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(), "ovrp_GetCameraDeviceColorFrameSize", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraDevice, colorFrameSize);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_GetCameraDeviceColorFrameBgraPixels(::GlobalNamespace::__OVRPlugin__CameraDevice cameraDevice,
                                                                                                                                  ByRef<void*> colorFrameBgraPixels,
                                                                                                                                  ByRef<int32_t> colorFrameRowPitch) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(), "ovrp_GetCameraDeviceColorFrameBgraPixels", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<void*>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraDevice, colorFrameBgraPixels, colorFrameRowPitch);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_GetControllerState4(uint32_t controllerMask,
                                                                                                                  ByRef<::GlobalNamespace::__OVRPlugin__ControllerState4> controllerState) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(), "ovrp_GetControllerState4", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ControllerState4>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, controllerMask, controllerState);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_16_0::__OVRPlugin__OVRP_1_16_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_17_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_17_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_17_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_17_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_17_0::__OVRPlugin__OVRP_1_17_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_18_0.ovrp_SetHandNodePoseStateLatency
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(double_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_18_0::ovrp_SetHandNodePoseStateLatency)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2776a4c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_18_0*>::get(), "ovrp_SetHandNodePoseStateLatency",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_18_0.ovrp_GetHandNodePoseStateLatency
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<double_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_18_0::ovrp_GetHandNodePoseStateLatency)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2776ac8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_18_0*>::get(), "ovrp_GetHandNodePoseStateLatency",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<double_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_18_0.ovrp_GetAppHasInputFocus
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_18_0::ovrp_GetAppHasInputFocus)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2776b44;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((
        ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_18_0*>::get(), "ovrp_GetAppHasInputFocus", std::vector<Il2CppClass*>{},
                                   ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_18_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_18_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_18_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_18_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_18_0::ovrp_SetHandNodePoseStateLatency(double_t latencyInSeconds) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_18_0*>::get(), "ovrp_SetHandNodePoseStateLatency",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, latencyInSeconds);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_18_0::ovrp_GetHandNodePoseStateLatency(ByRef<double_t> latencyInSeconds) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_18_0*>::get(), "ovrp_GetHandNodePoseStateLatency",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<double_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, latencyInSeconds);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_18_0::ovrp_GetAppHasInputFocus(ByRef<::GlobalNamespace::__OVRPlugin__Bool> appHasInputFocus) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_18_0*>::get(), "ovrp_GetAppHasInputFocus", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, appHasInputFocus);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_18_0::__OVRPlugin__OVRP_1_18_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_19_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_19_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_19_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_19_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_19_0::__OVRPlugin__OVRP_1_19_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_21_0.ovrp_GetTiledMultiResSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetTiledMultiResSupported)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2776cc8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(), "ovrp_GetTiledMultiResSupported", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_21_0.ovrp_GetTiledMultiResLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetTiledMultiResLevel)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2776d44;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(), "ovrp_GetTiledMultiResLevel", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_21_0.ovrp_SetTiledMultiResLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_SetTiledMultiResLevel)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2776dc0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(), "ovrp_SetTiledMultiResLevel", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_21_0.ovrp_GetGPUUtilSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetGPUUtilSupported)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2776e3c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((
        ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(), "ovrp_GetGPUUtilSupported", std::vector<Il2CppClass*>{},
                                   ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_21_0.ovrp_GetGPUUtilLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<float_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetGPUUtilLevel)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2776eb8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(), "ovrp_GetGPUUtilLevel",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_21_0.ovrp_GetSystemDisplayFrequency2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<float_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetSystemDisplayFrequency2)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2776f34;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(), "ovrp_GetSystemDisplayFrequency2",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_21_0.ovrp_GetSystemDisplayAvailableFrequencies
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(void*, ByRef<int32_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetSystemDisplayAvailableFrequencies)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2776fb0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(), "ovrp_GetSystemDisplayAvailableFrequencies", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_21_0.ovrp_SetSystemDisplayFrequency
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(float_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_SetSystemDisplayFrequency)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2777034;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(), "ovrp_SetSystemDisplayFrequency",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_21_0.ovrp_GetAppAsymmetricFov
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetAppAsymmetricFov)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27770b0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((
        ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(), "ovrp_GetAppAsymmetricFov", std::vector<Il2CppClass*>{},
                                   ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_21_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_21_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetTiledMultiResSupported(ByRef<::GlobalNamespace::__OVRPlugin__Bool> foveationSupported) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(), "ovrp_GetTiledMultiResSupported", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, foveationSupported);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetTiledMultiResLevel(ByRef<::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel> level) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(), "ovrp_GetTiledMultiResLevel", std::vector<Il2CppClass*>{},
                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, level);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_SetTiledMultiResLevel(::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel level) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(), "ovrp_SetTiledMultiResLevel", std::vector<Il2CppClass*>{},
                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, level);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetGPUUtilSupported(ByRef<::GlobalNamespace::__OVRPlugin__Bool> gpuUtilSupported) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(), "ovrp_GetGPUUtilSupported", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, gpuUtilSupported);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetGPUUtilLevel(ByRef<float_t> gpuUtil) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(), "ovrp_GetGPUUtilLevel",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, gpuUtil);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetSystemDisplayFrequency2(ByRef<float_t> systemDisplayFrequency) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(), "ovrp_GetSystemDisplayFrequency2",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, systemDisplayFrequency);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetSystemDisplayAvailableFrequencies(void* systemDisplayAvailableFrequencies,
                                                                                                                                   ByRef<int32_t> numFrequencies) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(), "ovrp_GetSystemDisplayAvailableFrequencies", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, systemDisplayAvailableFrequencies, numFrequencies);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_SetSystemDisplayFrequency(float_t requestedFrequency) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(), "ovrp_SetSystemDisplayFrequency",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, requestedFrequency);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetAppAsymmetricFov(ByRef<::GlobalNamespace::__OVRPlugin__Bool> useAsymmetricFov) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(), "ovrp_GetAppAsymmetricFov", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, useAsymmetricFov);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_21_0::__OVRPlugin__OVRP_1_21_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_28_0.ovrp_GetDominantHand
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Handedness>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_28_0::ovrp_GetDominantHand)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27771b0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_28_0*>::get(), "ovrp_GetDominantHand", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Handedness>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_28_0.ovrp_SendEvent
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::StringW, ::StringW)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_28_0::ovrp_SendEvent)> {
  constexpr static std::size_t size = 0xb4;
  constexpr static std::size_t addrs = 0x277722c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_28_0*>::get(), "ovrp_SendEvent", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_28_0.ovrp_EnqueueSetupLayer2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal>, int32_t, void*)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_28_0::ovrp_EnqueueSetupLayer2)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x27772e0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_28_0*>::get(), "ovrp_EnqueueSetupLayer2", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal>>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_28_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_28_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_28_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_28_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_28_0::ovrp_GetDominantHand(ByRef<::GlobalNamespace::__OVRPlugin__Handedness> dominantHand) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_28_0*>::get(), "ovrp_GetDominantHand", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Handedness>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, dominantHand);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_28_0::ovrp_SendEvent(::StringW name, ::StringW param) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_28_0*>::get(), "ovrp_SendEvent", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, name, param);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_28_0::ovrp_EnqueueSetupLayer2(ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal> desc,
                                                                                                                 int32_t compositionDepth, void* layerId) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_28_0*>::get(), "ovrp_EnqueueSetupLayer2", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal>>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, desc, compositionDepth, layerId);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_28_0::__OVRPlugin__OVRP_1_28_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_29_0.ovrp_GetLayerAndroidSurfaceObject
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ByRef<void*>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_29_0::ovrp_GetLayerAndroidSurfaceObject)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27773f8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_29_0*>::get(), "ovrp_GetLayerAndroidSurfaceObject", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<void*>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_29_0.ovrp_SetHeadPoseModifier
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ByRef<::GlobalNamespace::__OVRPlugin__Quatf>, ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_29_0::ovrp_SetHeadPoseModifier)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277747c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((
        ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_29_0*>::get(), "ovrp_SetHeadPoseModifier", std::vector<Il2CppClass*>{},
                                   ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Quatf>>::get(),
                                                                     ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_29_0.ovrp_GetHeadPoseModifier
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ByRef<::GlobalNamespace::__OVRPlugin__Quatf>, ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_29_0::ovrp_GetHeadPoseModifier)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2777500;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((
        ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_29_0*>::get(), "ovrp_GetHeadPoseModifier", std::vector<Il2CppClass*>{},
                                   ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Quatf>>::get(),
                                                                     ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_29_0.ovrp_GetNodePoseStateRaw
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Step, int32_t, ::GlobalNamespace::__OVRPlugin__Node, ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef>)>(
        &::GlobalNamespace::__OVRPlugin__OVRP_1_29_0::ovrp_GetNodePoseStateRaw)> {
  constexpr static std::size_t size = 0x9c;
  constexpr static std::size_t addrs = 0x2777584;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((
        ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_29_0*>::get(), "ovrp_GetNodePoseStateRaw", std::vector<Il2CppClass*>{},
                                   ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                     ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                     ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                     ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_29_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_29_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_29_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_29_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_29_0::ovrp_GetLayerAndroidSurfaceObject(int32_t layerId, ByRef<void*> surfaceObject) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_29_0*>::get(), "ovrp_GetLayerAndroidSurfaceObject", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<void*>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, layerId, surfaceObject);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_29_0::ovrp_SetHeadPoseModifier(ByRef<::GlobalNamespace::__OVRPlugin__Quatf> relativeRotation,
                                                                                                                  ByRef<::GlobalNamespace::__OVRPlugin__Vector3f> relativeTranslation) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_29_0*>::get(), "ovrp_SetHeadPoseModifier", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Quatf>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, relativeRotation, relativeTranslation);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_29_0::ovrp_GetHeadPoseModifier(ByRef<::GlobalNamespace::__OVRPlugin__Quatf> relativeRotation,
                                                                                                                  ByRef<::GlobalNamespace::__OVRPlugin__Vector3f> relativeTranslation) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_29_0*>::get(), "ovrp_GetHeadPoseModifier", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Quatf>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, relativeRotation, relativeTranslation);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_29_0::ovrp_GetNodePoseStateRaw(::GlobalNamespace::__OVRPlugin__Step stepId, int32_t frameIndex,
                                                                                                                  ::GlobalNamespace::__OVRPlugin__Node nodeId,
                                                                                                                  ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef> nodePoseState) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_29_0*>::get(), "ovrp_GetNodePoseStateRaw", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, stepId, frameIndex, nodeId, nodePoseState);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_29_0::__OVRPlugin__OVRP_1_29_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_30_0.ovrp_GetCurrentTrackingTransformPose
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Posef>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_GetCurrentTrackingTransformPose)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27776a4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(), "ovrp_GetCurrentTrackingTransformPose", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_30_0.ovrp_GetTrackingTransformRawPose
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Posef>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_GetTrackingTransformRawPose)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2777720;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(), "ovrp_GetTrackingTransformRawPose", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_30_0.ovrp_SendEvent2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::StringW, ::StringW, ::StringW)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_SendEvent2)> {
  constexpr static std::size_t size = 0xd8;
  constexpr static std::size_t addrs = 0x277779c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(), "ovrp_SendEvent2", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_30_0.ovrp_IsPerfMetricsSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::GlobalNamespace::__OVRPlugin__PerfMetrics, ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_IsPerfMetricsSupported)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2777874;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(), "ovrp_IsPerfMetricsSupported", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_30_0.ovrp_GetPerfMetricsFloat
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__PerfMetrics, ByRef<float_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_GetPerfMetricsFloat)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27778f8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((
        ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(), "ovrp_GetPerfMetricsFloat", std::vector<Il2CppClass*>{},
                                   ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get(),
                                                                     ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_30_0.ovrp_GetPerfMetricsInt
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__PerfMetrics, ByRef<int32_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_GetPerfMetricsInt)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277797c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(), "ovrp_GetPerfMetricsInt", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_30_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_30_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_GetCurrentTrackingTransformPose(ByRef<::GlobalNamespace::__OVRPlugin__Posef> trackingTransformPose) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(), "ovrp_GetCurrentTrackingTransformPose", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, trackingTransformPose);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_GetTrackingTransformRawPose(ByRef<::GlobalNamespace::__OVRPlugin__Posef> trackingTransformRawPose) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(), "ovrp_GetTrackingTransformRawPose", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, trackingTransformRawPose);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_SendEvent2(::StringW name, ::StringW param, ::StringW source) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(), "ovrp_SendEvent2", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, name, param, source);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_IsPerfMetricsSupported(::GlobalNamespace::__OVRPlugin__PerfMetrics perfMetrics,
                                                                                                                     ByRef<::GlobalNamespace::__OVRPlugin__Bool> isSupported) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(), "ovrp_IsPerfMetricsSupported", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, perfMetrics, isSupported);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_GetPerfMetricsFloat(::GlobalNamespace::__OVRPlugin__PerfMetrics perfMetrics, ByRef<float_t> value) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(), "ovrp_GetPerfMetricsFloat", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, perfMetrics, value);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_GetPerfMetricsInt(::GlobalNamespace::__OVRPlugin__PerfMetrics perfMetrics, ByRef<int32_t> value) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(), "ovrp_GetPerfMetricsInt", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, perfMetrics, value);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_30_0::__OVRPlugin__OVRP_1_30_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_31_0.ovrp_GetTimeInSeconds
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<double_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_31_0::ovrp_GetTimeInSeconds)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2777a84;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_31_0*>::get(), "ovrp_GetTimeInSeconds",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<double_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_31_0.ovrp_SetColorScaleAndOffset
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::UnityEngine::Vector4, ::UnityEngine::Vector4, ::GlobalNamespace::__OVRPlugin__Bool)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_31_0::ovrp_SetColorScaleAndOffset)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x2777b00;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_31_0*>::get(), "ovrp_SetColorScaleAndOffset", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_31_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_31_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_31_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_31_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_31_0::ovrp_GetTimeInSeconds(ByRef<double_t> value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_31_0*>::get(), "ovrp_GetTimeInSeconds",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<double_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_31_0::ovrp_SetColorScaleAndOffset(::UnityEngine::Vector4 colorScale, ::UnityEngine::Vector4 colorOffset,
                                                                                                                     ::GlobalNamespace::__OVRPlugin__Bool applyToAllLayers) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_31_0*>::get(), "ovrp_SetColorScaleAndOffset", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, colorScale, colorOffset, applyToAllLayers);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_31_0::__OVRPlugin__OVRP_1_31_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_32_0.ovrp_AddCustomMetadata
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::StringW, ::StringW)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_32_0::ovrp_AddCustomMetadata)> {
  constexpr static std::size_t size = 0xb4;
  constexpr static std::size_t addrs = 0x2777c60;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_32_0*>::get(), "ovrp_AddCustomMetadata", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_32_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_32_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_32_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_32_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_32_0::ovrp_AddCustomMetadata(::StringW name, ::StringW param) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_32_0*>::get(), "ovrp_AddCustomMetadata", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, name, param);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_32_0::__OVRPlugin__OVRP_1_32_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_34_0.ovrp_EnqueueSubmitLayer2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    uint32_t, void*, void*, int32_t, int32_t, ByRef<::GlobalNamespace::__OVRPlugin__Posef>, ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>, int32_t, ::GlobalNamespace::__OVRPlugin__Bool,
    ByRef<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>, ::GlobalNamespace::__OVRPlugin__Bool, ByRef<::UnityEngine::Vector4>, ByRef<::UnityEngine::Vector4>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_34_0::ovrp_EnqueueSubmitLayer2)> {
  constexpr static std::size_t size = 0xfc;
  constexpr static std::size_t addrs = 0x2777d98;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_34_0*>::get(), "ovrp_EnqueueSubmitLayer2", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{
            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get(),
            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(),
            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>>::get(),
            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(),
            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::UnityEngine::Vector4>>::get(),
            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::UnityEngine::Vector4>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_34_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_34_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_34_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_34_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_34_0::ovrp_EnqueueSubmitLayer2(uint32_t flags, void* textureLeft, void* textureRight, int32_t layerId,
                                                                                                                  int32_t frameIndex, ByRef<::GlobalNamespace::__OVRPlugin__Posef> pose,
                                                                                                                  ByRef<::GlobalNamespace::__OVRPlugin__Vector3f> scale, int32_t layerIndex,
                                                                                                                  ::GlobalNamespace::__OVRPlugin__Bool overrideTextureRectMatrix,
                                                                                                                  ByRef<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf> textureRectMatrix,
                                                                                                                  ::GlobalNamespace::__OVRPlugin__Bool overridePerLayerColorScaleAndOffset,
                                                                                                                  ByRef<::UnityEngine::Vector4> colorScale, ByRef<::UnityEngine::Vector4> colorOffset) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_34_0*>::get(), "ovrp_EnqueueSubmitLayer2", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{
          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get(),
          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(),
          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>>::get(),
          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(),
          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::UnityEngine::Vector4>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::UnityEngine::Vector4>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, flags, textureLeft, textureRight, layerId, frameIndex, pose, scale, layerIndex,
                                                                                            overrideTextureRectMatrix, textureRectMatrix, overridePerLayerColorScaleAndOffset, colorScale, colorOffset);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_34_0::__OVRPlugin__OVRP_1_34_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_35_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_35_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_35_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_35_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_35_0::__OVRPlugin__OVRP_1_35_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_36_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_36_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_36_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_36_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_36_0::__OVRPlugin__OVRP_1_36_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_37_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_37_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_37_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_37_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_37_0::__OVRPlugin__OVRP_1_37_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_GetTrackingTransformRelativePose
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ByRef<::GlobalNamespace::__OVRPlugin__Posef>, ::GlobalNamespace::__OVRPlugin__TrackingOrigin)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_GetTrackingTransformRelativePose)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27780a4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_GetTrackingTransformRelativePose", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_Initialize
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_Initialize)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x276d758;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                                                                               "ovrp_Media_Initialize", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_Shutdown
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_Shutdown)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x276d880;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                                                                               "ovrp_Media_Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_GetInitialized
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetInitialized)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276d9bc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_GetInitialized", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_Update
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_Update)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x276daf8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                                                                               "ovrp_Media_Update", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_GetMrcActivationMode
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetMrcActivationMode)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276dc2c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_GetMrcActivationMode", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_SetMrcActivationMode
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SetMrcActivationMode)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276dd70;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_SetMrcActivationMode", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_IsMrcEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_IsMrcEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276e270;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_IsMrcEnabled", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_IsMrcActivated
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_IsMrcActivated)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276e3bc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_IsMrcActivated", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_UseMrcDebugCamera
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_UseMrcDebugCamera)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276e508;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_UseMrcDebugCamera", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_SetMrcInputVideoBufferType
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SetMrcInputVideoBufferType)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276e64c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_SetMrcInputVideoBufferType", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_GetMrcInputVideoBufferType
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetMrcInputVideoBufferType)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276e790;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_GetMrcInputVideoBufferType", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_SetMrcFrameSize
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, int32_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SetMrcFrameSize)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x276e8e4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_SetMrcFrameSize", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_GetMrcFrameSize
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<int32_t>, ByRef<int32_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetMrcFrameSize)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x276ea48;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                                                                               "ovrp_Media_GetMrcFrameSize", std::vector<Il2CppClass*>{},
                                                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get(),
                                                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_SetMrcAudioSampleRate
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SetMrcAudioSampleRate)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276eb94;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_SetMrcAudioSampleRate",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_GetMrcAudioSampleRate
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<int32_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetMrcAudioSampleRate)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276ecd4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_GetMrcAudioSampleRate",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_SetMrcFrameImageFlipped
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Bool)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SetMrcFrameImageFlipped)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276ee1c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_SetMrcFrameImageFlipped", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_GetMrcFrameImageFlipped
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetMrcFrameImageFlipped)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276ef64;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_GetMrcFrameImageFlipped", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_EncodeMrcFrame
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(void*, void*, int32_t, int32_t, double_t, ByRef<int32_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_EncodeMrcFrame)> {
  constexpr static std::size_t size = 0xbc;
  constexpr static std::size_t addrs = 0x276f3f8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_EncodeMrcFrame", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_EncodeMrcFrameWithDualTextures
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(void*, void*, void*, int32_t, int32_t, double_t, ByRef<int32_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_EncodeMrcFrameWithDualTextures)> {
  constexpr static std::size_t size = 0xc4;
  constexpr static std::size_t addrs = 0x276f580;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_EncodeMrcFrameWithDualTextures", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_SyncMrcFrame
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SyncMrcFrame)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276fbf4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_SyncMrcFrame",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_SetDeveloperMode
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Bool)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_SetDeveloperMode)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2778128;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_SetDeveloperMode", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_GetNodeOrientationValid
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::GlobalNamespace::__OVRPlugin__Node, ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_GetNodeOrientationValid)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27781a4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_GetNodeOrientationValid", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_GetNodePositionValid
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::GlobalNamespace::__OVRPlugin__Node, ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_GetNodePositionValid)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2778228;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_GetNodePositionValid", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_38_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_38_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_GetTrackingTransformRelativePose(ByRef<::GlobalNamespace::__OVRPlugin__Posef> trackingTransformRelativePose,
                                                                                 ::GlobalNamespace::__OVRPlugin__TrackingOrigin trackingOrigin) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_GetTrackingTransformRelativePose", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, trackingTransformRelativePose, trackingOrigin);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_Initialize() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                                                                             "ovrp_Media_Initialize", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_Shutdown() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                                                                             "ovrp_Media_Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetInitialized(ByRef<::GlobalNamespace::__OVRPlugin__Bool> initialized) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_GetInitialized", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, initialized);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_Update() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                                                                             "ovrp_Media_Update", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetMrcActivationMode(ByRef<::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode> activationMode) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_GetMrcActivationMode", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, activationMode);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SetMrcActivationMode(::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode activationMode) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_SetMrcActivationMode", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, activationMode);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_IsMrcEnabled(ByRef<::GlobalNamespace::__OVRPlugin__Bool> mrcEnabled) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_IsMrcEnabled", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, mrcEnabled);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_IsMrcActivated(ByRef<::GlobalNamespace::__OVRPlugin__Bool> mrcActivated) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_IsMrcActivated", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, mrcActivated);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_UseMrcDebugCamera(ByRef<::GlobalNamespace::__OVRPlugin__Bool> useMrcDebugCamera) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_UseMrcDebugCamera", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, useMrcDebugCamera);
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SetMrcInputVideoBufferType(::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType inputVideoBufferType) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_SetMrcInputVideoBufferType", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, inputVideoBufferType);
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetMrcInputVideoBufferType(ByRef<::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType> inputVideoBufferType) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_GetMrcInputVideoBufferType", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, inputVideoBufferType);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SetMrcFrameSize(int32_t frameWidth, int32_t frameHeight) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_SetMrcFrameSize", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, frameWidth, frameHeight);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetMrcFrameSize(ByRef<int32_t> frameWidth, ByRef<int32_t> frameHeight) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_GetMrcFrameSize", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, frameWidth, frameHeight);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SetMrcAudioSampleRate(int32_t sampleRate) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_SetMrcAudioSampleRate",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, sampleRate);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetMrcAudioSampleRate(ByRef<int32_t> sampleRate) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_GetMrcAudioSampleRate",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, sampleRate);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SetMrcFrameImageFlipped(::GlobalNamespace::__OVRPlugin__Bool flipped) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_SetMrcFrameImageFlipped",
                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, flipped);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetMrcFrameImageFlipped(ByRef<::GlobalNamespace::__OVRPlugin__Bool> flipped) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_GetMrcFrameImageFlipped", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, flipped);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_EncodeMrcFrame(void* rawBuffer, void* audioDataPtr, int32_t audioDataLen, int32_t audioChannels,
                                                                                                                   double_t timestamp, ByRef<int32_t> outSyncId) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_EncodeMrcFrame", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, rawBuffer, audioDataPtr, audioDataLen, audioChannels, timestamp, outSyncId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_EncodeMrcFrameWithDualTextures(void* backgroundTextureHandle, void* foregroundTextureHandle,
                                                                                                                                   void* audioData, int32_t audioDataLen, int32_t audioChannels,
                                                                                                                                   double_t timestamp, ByRef<int32_t> outSyncId) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_EncodeMrcFrameWithDualTextures", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, backgroundTextureHandle, foregroundTextureHandle, audioData, audioDataLen,
                                                                                            audioChannels, timestamp, outSyncId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SyncMrcFrame(int32_t syncId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_Media_SyncMrcFrame",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, syncId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_SetDeveloperMode(::GlobalNamespace::__OVRPlugin__Bool active) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_SetDeveloperMode", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, active);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_GetNodeOrientationValid(::GlobalNamespace::__OVRPlugin__Node nodeId,
                                                                                                                      ByRef<::GlobalNamespace::__OVRPlugin__Bool> nodeOrientationValid) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_GetNodeOrientationValid", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, nodeId, nodeOrientationValid);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_GetNodePositionValid(::GlobalNamespace::__OVRPlugin__Node nodeId,
                                                                                                                   ByRef<::GlobalNamespace::__OVRPlugin__Bool> nodePositionValid) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(), "ovrp_GetNodePositionValid", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, nodeId, nodePositionValid);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::__OVRPlugin__OVRP_1_38_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_39_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_39_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_39_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_39_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_39_0::__OVRPlugin__OVRP_1_39_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_40_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_40_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_40_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_40_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_40_0::__OVRPlugin__OVRP_1_40_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_41_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_41_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_41_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_41_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_41_0::__OVRPlugin__OVRP_1_41_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_42_0.ovrp_GetAdaptiveGpuPerformanceScale2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<float_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_42_0::ovrp_GetAdaptiveGpuPerformanceScale2)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27784bc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_42_0*>::get(), "ovrp_GetAdaptiveGpuPerformanceScale2",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_42_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_42_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_42_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_42_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_42_0::ovrp_GetAdaptiveGpuPerformanceScale2(ByRef<float_t> adaptiveGpuPerformanceScale) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_42_0*>::get(), "ovrp_GetAdaptiveGpuPerformanceScale2",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, adaptiveGpuPerformanceScale);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_42_0::__OVRPlugin__OVRP_1_42_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_43_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_43_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_43_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_43_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_43_0::__OVRPlugin__OVRP_1_43_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0.ovrp_GetHandTrackingEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetHandTrackingEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2778640;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(), "ovrp_GetHandTrackingEnabled", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0.ovrp_GetHandState
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Step, ::GlobalNamespace::__OVRPlugin__Hand, ByRef<::GlobalNamespace::__OVRPlugin__HandStateInternal>)>(
        &::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetHandState)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x27786bc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(), "ovrp_GetHandState", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__HandStateInternal>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0.ovrp_GetSkeleton
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::GlobalNamespace::__OVRPlugin__SkeletonType, ByRef<::GlobalNamespace::__OVRPlugin__Skeleton>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetSkeleton)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x2778750;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(), "ovrp_GetSkeleton", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SkeletonType>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Skeleton>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0.ovrp_GetMesh
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__MeshType, void*)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetMesh)> {
  constexpr static std::size_t size = 0x80;
  constexpr static std::size_t addrs = 0x2778810;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(), "ovrp_GetMesh", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__MeshType>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0.ovrp_OverrideExternalCameraFov
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    int32_t, ::GlobalNamespace::__OVRPlugin__Bool, ByRef<::GlobalNamespace::__OVRPlugin__Fovf>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_OverrideExternalCameraFov)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x2778890;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(), "ovrp_OverrideExternalCameraFov", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Fovf>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0.ovrp_GetUseOverriddenExternalCameraFov
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetUseOverriddenExternalCameraFov)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2778924;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(), "ovrp_GetUseOverriddenExternalCameraFov", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0.ovrp_OverrideExternalCameraStaticPose
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    int32_t, ::GlobalNamespace::__OVRPlugin__Bool, ByRef<::GlobalNamespace::__OVRPlugin__Posef>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_OverrideExternalCameraStaticPose)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x27789a8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(), "ovrp_OverrideExternalCameraStaticPose", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0.ovrp_GetUseOverriddenExternalCameraStaticPose
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetUseOverriddenExternalCameraStaticPose)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2778a3c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(), "ovrp_GetUseOverriddenExternalCameraStaticPose", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0.ovrp_ResetDefaultExternalCamera
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_ResetDefaultExternalCamera)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2778ac0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                                                                               "ovrp_ResetDefaultExternalCamera", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0.ovrp_SetDefaultExternalCamera
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::StringW, ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>, ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>)>(
        &::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_SetDefaultExternalCamera)> {
  constexpr static std::size_t size = 0xac;
  constexpr static std::size_t addrs = 0x2778b28;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(), "ovrp_SetDefaultExternalCamera", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0.ovrp_GetLocalTrackingSpaceRecenterCount
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<int32_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetLocalTrackingSpaceRecenterCount)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2778bd4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(), "ovrp_GetLocalTrackingSpaceRecenterCount",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_44_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_44_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetHandTrackingEnabled(ByRef<::GlobalNamespace::__OVRPlugin__Bool> handTrackingEnabled) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(), "ovrp_GetHandTrackingEnabled", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, handTrackingEnabled);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetHandState(::GlobalNamespace::__OVRPlugin__Step stepId, ::GlobalNamespace::__OVRPlugin__Hand hand,
                                                                                                           ByRef<::GlobalNamespace::__OVRPlugin__HandStateInternal> handState) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(), "ovrp_GetHandState", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__HandStateInternal>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, stepId, hand, handState);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetSkeleton(::GlobalNamespace::__OVRPlugin__SkeletonType skeletonType,
                                                                                                          ByRef<::GlobalNamespace::__OVRPlugin__Skeleton> skeleton) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(), "ovrp_GetSkeleton", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SkeletonType>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Skeleton>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, skeletonType, skeleton);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetMesh(::GlobalNamespace::__OVRPlugin__MeshType meshType, void* meshPtr) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(), "ovrp_GetMesh", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__MeshType>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, meshType, meshPtr);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_OverrideExternalCameraFov(int32_t cameraId, ::GlobalNamespace::__OVRPlugin__Bool useOverriddenFov,
                                                                                                                        ByRef<::GlobalNamespace::__OVRPlugin__Fovf> fov) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(), "ovrp_OverrideExternalCameraFov", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Fovf>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraId, useOverriddenFov, fov);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetUseOverriddenExternalCameraFov(int32_t cameraId,
                                                                                                                                ByRef<::GlobalNamespace::__OVRPlugin__Bool> useOverriddenFov) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(), "ovrp_GetUseOverriddenExternalCameraFov", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraId, useOverriddenFov);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_OverrideExternalCameraStaticPose(int32_t cameraId, ::GlobalNamespace::__OVRPlugin__Bool useOverriddenPose,
                                                                                                                               ByRef<::GlobalNamespace::__OVRPlugin__Posef> poseInStageOrigin) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(), "ovrp_OverrideExternalCameraStaticPose", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraId, useOverriddenPose, poseInStageOrigin);
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetUseOverriddenExternalCameraStaticPose(int32_t cameraId, ByRef<::GlobalNamespace::__OVRPlugin__Bool> useOverriddenStaticPose) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(), "ovrp_GetUseOverriddenExternalCameraStaticPose", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraId, useOverriddenStaticPose);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_ResetDefaultExternalCamera() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                                                                             "ovrp_ResetDefaultExternalCamera", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_SetDefaultExternalCamera(::StringW cameraName,
                                                                                                                       ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics> cameraIntrinsics,
                                                                                                                       ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics> cameraExtrinsics) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(), "ovrp_SetDefaultExternalCamera", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraName, cameraIntrinsics, cameraExtrinsics);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetLocalTrackingSpaceRecenterCount(ByRef<int32_t> recenterCount) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(), "ovrp_GetLocalTrackingSpaceRecenterCount",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, recenterCount);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::__OVRPlugin__OVRP_1_44_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_45_0.ovrp_GetSystemHmd3DofModeEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_45_0::ovrp_GetSystemHmd3DofModeEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2778cd4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_45_0*>::get(), "ovrp_GetSystemHmd3DofModeEnabled", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_45_0.ovrp_Media_SetAvailableQueueIndexVulkan
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint32_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_45_0::ovrp_Media_SetAvailableQueueIndexVulkan)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276fd38;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_45_0*>::get(), "ovrp_Media_SetAvailableQueueIndexVulkan",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_45_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_45_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_45_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_45_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_45_0::ovrp_GetSystemHmd3DofModeEnabled(ByRef<::GlobalNamespace::__OVRPlugin__Bool> enabled) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_45_0*>::get(), "ovrp_GetSystemHmd3DofModeEnabled", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, enabled);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_45_0::ovrp_Media_SetAvailableQueueIndexVulkan(uint32_t queueIndexVk) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_45_0*>::get(), "ovrp_Media_SetAvailableQueueIndexVulkan",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, queueIndexVk);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_45_0::__OVRPlugin__OVRP_1_45_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_46_0.ovrp_GetTiledMultiResDynamic
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_46_0::ovrp_GetTiledMultiResDynamic)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2778dd4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_46_0*>::get(), "ovrp_GetTiledMultiResDynamic", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_46_0.ovrp_SetTiledMultiResDynamic
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Bool)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_46_0::ovrp_SetTiledMultiResDynamic)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2778e50;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_46_0*>::get(), "ovrp_SetTiledMultiResDynamic", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_46_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_46_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_46_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_46_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_46_0::ovrp_GetTiledMultiResDynamic(ByRef<::GlobalNamespace::__OVRPlugin__Bool> isDynamic) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_46_0*>::get(), "ovrp_GetTiledMultiResDynamic", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, isDynamic);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_46_0::ovrp_SetTiledMultiResDynamic(::GlobalNamespace::__OVRPlugin__Bool isDynamic) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_46_0*>::get(), "ovrp_SetTiledMultiResDynamic",
                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, isDynamic);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_46_0::__OVRPlugin__OVRP_1_46_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_47_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_47_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_47_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_47_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_47_0::__OVRPlugin__OVRP_1_47_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_48_0.ovrp_SetExternalCameraProperties
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::StringW, ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>, ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>)>(
        &::GlobalNamespace::__OVRPlugin__OVRP_1_48_0::ovrp_SetExternalCameraProperties)> {
  constexpr static std::size_t size = 0xac;
  constexpr static std::size_t addrs = 0x2778fd4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_48_0*>::get(), "ovrp_SetExternalCameraProperties", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_48_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_48_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_48_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_48_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_48_0::ovrp_SetExternalCameraProperties(::StringW cameraName,
                                                                                                                          ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics> cameraIntrinsics,
                                                                                                                          ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics> cameraExtrinsics) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_48_0*>::get(), "ovrp_SetExternalCameraProperties", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraName, cameraIntrinsics, cameraExtrinsics);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_48_0::__OVRPlugin__OVRP_1_48_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_SetClientColorDesc
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__ColorSpace)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_SetClientColorDesc)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2779104;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_SetClientColorDesc", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ColorSpace>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_GetHmdColorDesc
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__ColorSpace>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_GetHmdColorDesc)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2779180;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_GetHmdColorDesc", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ColorSpace>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_EncodeMrcFrameWithPoseTime
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(void*, void*, int32_t, int32_t, double_t, double_t, ByRef<int32_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_EncodeMrcFrameWithPoseTime)> {
  constexpr static std::size_t size = 0xc4;
  constexpr static std::size_t addrs = 0x276f334;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_EncodeMrcFrameWithPoseTime", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_EncodeMrcFrameDualTexturesWithPoseTime
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    void*, void*, void*, int32_t, int32_t, double_t, double_t, ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_EncodeMrcFrameDualTexturesWithPoseTime)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x276f4b4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_EncodeMrcFrameDualTexturesWithPoseTime", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_SetHeadsetControllerPose
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Posef, ::GlobalNamespace::__OVRPlugin__Posef, ::GlobalNamespace::__OVRPlugin__Posef)>(
        &::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_SetHeadsetControllerPose)> {
  constexpr static std::size_t size = 0xc4;
  constexpr static std::size_t addrs = 0x276ff00;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_SetHeadsetControllerPose", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_EnumerateCameraAnchorHandles
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<int32_t>, ByRef<void*>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_EnumerateCameraAnchorHandles)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27791fc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_EnumerateCameraAnchorHandles", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<void*>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_GetCurrentCameraAnchorHandle
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<void*>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCurrentCameraAnchorHandle)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2779280;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_GetCurrentCameraAnchorHandle",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<void*>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_GetCameraAnchorName
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(void*, ::ArrayW<char16_t, ::Array<char16_t>*>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCameraAnchorName)> {
  constexpr static std::size_t size = 0x110;
  constexpr static std::size_t addrs = 0x27792fc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_GetCameraAnchorName", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<char16_t, ::Array<char16_t>*>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_GetCameraAnchorHandle
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(void*, ByRef<void*>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCameraAnchorHandle)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277940c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_GetCameraAnchorHandle", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<void*>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_GetCameraAnchorType
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(void*, ByRef<::GlobalNamespace::__OVRPlugin__CameraAnchorType>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCameraAnchorType)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2779490;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_GetCameraAnchorType", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraAnchorType>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_CreateCustomCameraAnchor
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(void*, ByRef<void*>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_CreateCustomCameraAnchor)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2779514;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_CreateCustomCameraAnchor", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<void*>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_DestroyCustomCameraAnchor
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(void*)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_DestroyCustomCameraAnchor)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2779598;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_DestroyCustomCameraAnchor",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_GetCustomCameraAnchorPose
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(void*, ByRef<::GlobalNamespace::__OVRPlugin__Posef>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCustomCameraAnchorPose)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2779614;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_GetCustomCameraAnchorPose", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_SetCustomCameraAnchorPose
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(void*, ::GlobalNamespace::__OVRPlugin__Posef)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_SetCustomCameraAnchorPose)> {
  constexpr static std::size_t size = 0x90;
  constexpr static std::size_t addrs = 0x2779698;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_SetCustomCameraAnchorPose", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_GetCameraMinMaxDistance
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(void*, ByRef<double_t>, ByRef<double_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCameraMinMaxDistance)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x2779728;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_GetCameraMinMaxDistance", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<double_t>>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<double_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_SetCameraMinMaxDistance
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(void*, double_t, double_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_SetCameraMinMaxDistance)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x27797bc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_SetCameraMinMaxDistance", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_49_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_49_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_SetClientColorDesc(::GlobalNamespace::__OVRPlugin__ColorSpace colorSpace) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_SetClientColorDesc", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ColorSpace>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, colorSpace);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_GetHmdColorDesc(ByRef<::GlobalNamespace::__OVRPlugin__ColorSpace> colorSpace) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_GetHmdColorDesc", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ColorSpace>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, colorSpace);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_EncodeMrcFrameWithPoseTime(void* rawBuffer, void* audioDataPtr, int32_t audioDataLen,
                                                                                                                               int32_t audioChannels, double_t timestamp, double_t poseTime,
                                                                                                                               ByRef<int32_t> outSyncId) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_EncodeMrcFrameWithPoseTime", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, rawBuffer, audioDataPtr, audioDataLen, audioChannels, timestamp, poseTime,
                                                                                            outSyncId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_EncodeMrcFrameDualTexturesWithPoseTime(void* backgroundTextureHandle, void* foregroundTextureHandle,
                                                                                                                                           void* audioData, int32_t audioDataLen, int32_t audioChannels,
                                                                                                                                           double_t timestamp, double_t poseTime,
                                                                                                                                           ByRef<int32_t> outSyncId) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_EncodeMrcFrameDualTexturesWithPoseTime", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, backgroundTextureHandle, foregroundTextureHandle, audioData, audioDataLen,
                                                                                            audioChannels, timestamp, poseTime, outSyncId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_SetHeadsetControllerPose(::GlobalNamespace::__OVRPlugin__Posef headsetPose,
                                                                                                                             ::GlobalNamespace::__OVRPlugin__Posef leftControllerPose,
                                                                                                                             ::GlobalNamespace::__OVRPlugin__Posef rightControllerPose) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_SetHeadsetControllerPose", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, headsetPose, leftControllerPose, rightControllerPose);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_EnumerateCameraAnchorHandles(ByRef<int32_t> anchorCount, ByRef<void*> CameraAnchorHandle) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_EnumerateCameraAnchorHandles", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<void*>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, anchorCount, CameraAnchorHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCurrentCameraAnchorHandle(ByRef<void*> anchorHandle) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_GetCurrentCameraAnchorHandle",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<void*>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, anchorHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCameraAnchorName(void* anchorHandle, ::ArrayW<char16_t, ::Array<char16_t>*> cameraName) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_GetCameraAnchorName", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<char16_t, ::Array<char16_t>*>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, anchorHandle, cameraName);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCameraAnchorHandle(void* anchorName, ByRef<void*> anchorHandle) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_GetCameraAnchorHandle", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<void*>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, anchorName, anchorHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCameraAnchorType(void* anchorHandle,
                                                                                                                        ByRef<::GlobalNamespace::__OVRPlugin__CameraAnchorType> anchorType) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_GetCameraAnchorType", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraAnchorType>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, anchorHandle, anchorType);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_CreateCustomCameraAnchor(void* anchorName, ByRef<void*> anchorHandle) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_CreateCustomCameraAnchor", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<void*>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, anchorName, anchorHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_DestroyCustomCameraAnchor(void* anchorHandle) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_DestroyCustomCameraAnchor",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, anchorHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCustomCameraAnchorPose(void* anchorHandle, ByRef<::GlobalNamespace::__OVRPlugin__Posef> pose) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_GetCustomCameraAnchorPose", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, anchorHandle, pose);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_SetCustomCameraAnchorPose(void* anchorHandle, ::GlobalNamespace::__OVRPlugin__Posef pose) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_SetCustomCameraAnchorPose", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, anchorHandle, pose);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCameraMinMaxDistance(void* anchorHandle, ByRef<double_t> minDistance,
                                                                                                                            ByRef<double_t> maxDistance) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_GetCameraMinMaxDistance", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<double_t>>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<double_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, anchorHandle, minDistance, maxDistance);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_SetCameraMinMaxDistance(void* anchorHandle, double_t minDistance, double_t maxDistance) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(), "ovrp_Media_SetCameraMinMaxDistance", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, anchorHandle, minDistance, maxDistance);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::__OVRPlugin__OVRP_1_49_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_50_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_50_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_50_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_50_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_50_0::__OVRPlugin__OVRP_1_50_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_51_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_51_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_51_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_51_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_51_0::__OVRPlugin__OVRP_1_51_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_52_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_52_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_52_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_52_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_52_0::__OVRPlugin__OVRP_1_52_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_53_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_53_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_53_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_53_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_53_0::__OVRPlugin__OVRP_1_53_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_54_0.ovrp_Media_SetPlatformInitialized
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_54_0::ovrp_Media_SetPlatformInitialized)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x276deac;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_54_0*>::get(),
                                                                               "ovrp_Media_SetPlatformInitialized", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_54_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_54_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_54_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_54_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_54_0::ovrp_Media_SetPlatformInitialized() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_54_0*>::get(),
                                                                             "ovrp_Media_SetPlatformInitialized", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_54_0::__OVRPlugin__OVRP_1_54_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_55_0.ovrp_GetSkeleton2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::GlobalNamespace::__OVRPlugin__SkeletonType, ByRef<::GlobalNamespace::__OVRPlugin__Skeleton2Internal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_55_0::ovrp_GetSkeleton2)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2779b68;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_0*>::get(), "ovrp_GetSkeleton2", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SkeletonType>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Skeleton2Internal>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_55_0.ovrp_PollEvent
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__EventDataBuffer>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_55_0::ovrp_PollEvent)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x2779bec;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_0*>::get(), "ovrp_PollEvent", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__EventDataBuffer>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_55_0.ovrp_GetNativeXrApiType
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__XrApi>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_55_0::ovrp_GetNativeXrApiType)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2779ccc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_0*>::get(), "ovrp_GetNativeXrApiType", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__XrApi>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_55_0.ovrp_GetNativeOpenXRHandles
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ByRef<uint64_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_55_0::ovrp_GetNativeOpenXRHandles)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2779d48;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_0*>::get(),
                                                                               "ovrp_GetNativeOpenXRHandles", std::vector<Il2CppClass*>{},
                                                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_55_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_55_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_55_0::ovrp_GetSkeleton2(::GlobalNamespace::__OVRPlugin__SkeletonType skeletonType,
                                                                                                           ByRef<::GlobalNamespace::__OVRPlugin__Skeleton2Internal> skeleton) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_0*>::get(), "ovrp_GetSkeleton2", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SkeletonType>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Skeleton2Internal>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, skeletonType, skeleton);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_55_0::ovrp_PollEvent(ByRef<::GlobalNamespace::__OVRPlugin__EventDataBuffer> eventDataBuffer) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_0*>::get(), "ovrp_PollEvent", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__EventDataBuffer>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, eventDataBuffer);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_55_0::ovrp_GetNativeXrApiType(ByRef<::GlobalNamespace::__OVRPlugin__XrApi> xrApi) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_0*>::get(), "ovrp_GetNativeXrApiType", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__XrApi>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, xrApi);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_55_0::ovrp_GetNativeOpenXRHandles(ByRef<uint64_t> xrInstance, ByRef<uint64_t> xrSession) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_0*>::get(),
                                                                             "ovrp_GetNativeOpenXRHandles", std::vector<Il2CppClass*>{},
                                                                             ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                                                               ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, xrInstance, xrSession);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_55_0::__OVRPlugin__OVRP_1_55_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_55_1.ovrp_PollEvent2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__EventType>, ByRef<void*>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_55_1::ovrp_PollEvent2)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2779e50;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_1*>::get(), "ovrp_PollEvent2", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__EventType>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<void*>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_55_1::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_1*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_55_1::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_1*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_55_1::ovrp_PollEvent2(ByRef<::GlobalNamespace::__OVRPlugin__EventType> eventType, ByRef<void*> eventData) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_1*>::get(), "ovrp_PollEvent2", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__EventType>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<void*>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, eventType, eventData);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_55_1::__OVRPlugin__OVRP_1_55_1() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_56_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_56_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_56_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_56_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_56_0::__OVRPlugin__OVRP_1_56_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_57_0.ovrp_Media_GetPlatformCameraMode
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_57_0::ovrp_Media_GetPlatformCameraMode)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276dfe0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get(), "ovrp_Media_GetPlatformCameraMode", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_57_0.ovrp_Media_SetPlatformCameraMode
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_57_0::ovrp_Media_SetPlatformCameraMode)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276e124;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get(), "ovrp_Media_SetPlatformCameraMode", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_57_0.ovrp_SetEyeFovPremultipliedAlphaMode
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Bool)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_57_0::ovrp_SetEyeFovPremultipliedAlphaMode)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2779fdc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get(), "ovrp_SetEyeFovPremultipliedAlphaMode", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_57_0.ovrp_GetEyeFovPremultipliedAlphaMode
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_57_0::ovrp_GetEyeFovPremultipliedAlphaMode)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277a058;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get(), "ovrp_GetEyeFovPremultipliedAlphaMode", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_57_0.ovrp_SetKeyboardOverlayUV
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Vector2f)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_57_0::ovrp_SetKeyboardOverlayUV)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277a0d4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get(), "ovrp_SetKeyboardOverlayUV", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector2f>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_57_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_57_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_57_0::ovrp_Media_GetPlatformCameraMode(ByRef<::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode> platformCameraMode) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get(), "ovrp_Media_GetPlatformCameraMode", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, platformCameraMode);
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_57_0::ovrp_Media_SetPlatformCameraMode(::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode platformCameraMode) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get(), "ovrp_Media_SetPlatformCameraMode", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, platformCameraMode);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_57_0::ovrp_SetEyeFovPremultipliedAlphaMode(::GlobalNamespace::__OVRPlugin__Bool enabled) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get(), "ovrp_SetEyeFovPremultipliedAlphaMode",
                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, enabled);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_57_0::ovrp_GetEyeFovPremultipliedAlphaMode(ByRef<::GlobalNamespace::__OVRPlugin__Bool> enabled) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get(), "ovrp_GetEyeFovPremultipliedAlphaMode", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, enabled);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_57_0::ovrp_SetKeyboardOverlayUV(::GlobalNamespace::__OVRPlugin__Vector2f uv) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get(), "ovrp_SetKeyboardOverlayUV", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector2f>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, uv);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_57_0::__OVRPlugin__OVRP_1_57_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_58_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_58_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_58_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_58_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_58_0::__OVRPlugin__OVRP_1_58_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_59_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_59_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_59_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_59_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_59_0::__OVRPlugin__OVRP_1_59_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_60_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_60_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_60_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_60_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_60_0::__OVRPlugin__OVRP_1_60_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_61_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_61_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_61_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_61_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_61_0::__OVRPlugin__OVRP_1_61_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_62_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_62_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_62_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_62_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_62_0::__OVRPlugin__OVRP_1_62_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_63_0.ovrp_InitializeInsightPassthrough
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_InitializeInsightPassthrough)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277a470;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                                                                               "ovrp_InitializeInsightPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_63_0.ovrp_ShutdownInsightPassthrough
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_ShutdownInsightPassthrough)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277a4d8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                                                                               "ovrp_ShutdownInsightPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_63_0.ovrp_GetInsightPassthroughInitialized
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_GetInsightPassthroughInitialized)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277a540;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                                                                               "ovrp_GetInsightPassthroughInitialized", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_63_0.ovrp_SetInsightPassthroughStyle
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_SetInsightPassthroughStyle)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277a5a8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(), "ovrp_SetInsightPassthroughStyle", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_63_0.ovrp_CreateInsightTriangleMesh
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, void*, int32_t, void*, int32_t, ByRef<uint64_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_CreateInsightTriangleMesh)> {
  constexpr static std::size_t size = 0xb4;
  constexpr static std::size_t addrs = 0x277a63c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(), "ovrp_CreateInsightTriangleMesh", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_63_0.ovrp_DestroyInsightTriangleMesh
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint64_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_DestroyInsightTriangleMesh)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277a6f0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(), "ovrp_DestroyInsightTriangleMesh",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_63_0.ovrp_AddInsightPassthroughSurfaceGeometry
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, uint64_t, ::UnityEngine::Matrix4x4, ByRef<uint64_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_AddInsightPassthroughSurfaceGeometry)> {
  constexpr static std::size_t size = 0xac;
  constexpr static std::size_t addrs = 0x277a76c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(), "ovrp_AddInsightPassthroughSurfaceGeometry", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Matrix4x4>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_63_0.ovrp_DestroyInsightPassthroughGeometryInstance
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint64_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_DestroyInsightPassthroughGeometryInstance)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277a818;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(), "ovrp_DestroyInsightPassthroughGeometryInstance",
                                    std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_63_0.ovrp_UpdateInsightPassthroughGeometryTransform
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint64_t, ::UnityEngine::Matrix4x4)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_UpdateInsightPassthroughGeometryTransform)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277a894;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(), "ovrp_UpdateInsightPassthroughGeometryTransform", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Matrix4x4>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_63_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_63_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_InitializeInsightPassthrough() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                                                                             "ovrp_InitializeInsightPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_ShutdownInsightPassthrough() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                                                                             "ovrp_ShutdownInsightPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_GetInsightPassthroughInitialized() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                                                                             "ovrp_GetInsightPassthroughInitialized", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_SetInsightPassthroughStyle(int32_t layerId,
                                                                                                                         ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle style) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(), "ovrp_SetInsightPassthroughStyle", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, layerId, style);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_CreateInsightTriangleMesh(int32_t layerId, void* vertices, int32_t vertexCount, void* triangles,
                                                                                                                        int32_t triangleCount, ByRef<uint64_t> meshHandle) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(), "ovrp_CreateInsightTriangleMesh", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, layerId, vertices, vertexCount, triangles, triangleCount, meshHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_DestroyInsightTriangleMesh(uint64_t meshHandle) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(), "ovrp_DestroyInsightTriangleMesh",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, meshHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_AddInsightPassthroughSurfaceGeometry(int32_t layerId, uint64_t meshHandle,
                                                                                                                                   ::UnityEngine::Matrix4x4 T_world_model,
                                                                                                                                   ByRef<uint64_t> geometryInstanceHandle) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(), "ovrp_AddInsightPassthroughSurfaceGeometry", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Matrix4x4>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, layerId, meshHandle, T_world_model, geometryInstanceHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_DestroyInsightPassthroughGeometryInstance(uint64_t geometryInstanceHandle) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(), "ovrp_DestroyInsightPassthroughGeometryInstance",
                                  std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, geometryInstanceHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_UpdateInsightPassthroughGeometryTransform(uint64_t geometryInstanceHandle,
                                                                                                                                        ::UnityEngine::Matrix4x4 T_world_model) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(), "ovrp_UpdateInsightPassthroughGeometryTransform", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Matrix4x4>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, geometryInstanceHandle, T_world_model);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_63_0::__OVRPlugin__OVRP_1_63_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_64_0.ovrp_LocateSpace
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ByRef<::GlobalNamespace::__OVRPlugin__Posef>, ByRef<uint64_t>, ::GlobalNamespace::__OVRPlugin__TrackingOrigin)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_64_0::ovrp_LocateSpace)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277a9ac;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_64_0*>::get(), "ovrp_LocateSpace", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_64_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_64_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_64_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_64_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_64_0::ovrp_LocateSpace(ByRef<::GlobalNamespace::__OVRPlugin__Posef> location, ByRef<uint64_t> space,
                                                                                                          ::GlobalNamespace::__OVRPlugin__TrackingOrigin trackingOrigin) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_64_0*>::get(), "ovrp_LocateSpace", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, location, space, trackingOrigin);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_64_0::__OVRPlugin__OVRP_1_64_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_65_0.ovrp_KtxLoadFromMemory
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<void*>, uint32_t, ByRef<void*>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxLoadFromMemory)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x2770290;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(), "ovrp_KtxLoadFromMemory", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<void*>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<void*>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_65_0.ovrp_KtxTextureWidth
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(void*, ByRef<uint32_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxTextureWidth)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2770460;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(), "ovrp_KtxTextureWidth", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_65_0.ovrp_KtxTextureHeight
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(void*, ByRef<uint32_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxTextureHeight)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2770620;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(), "ovrp_KtxTextureHeight", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_65_0.ovrp_KtxTranscode
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(void*, uint32_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxTranscode)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27707e0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(), "ovrp_KtxTranscode", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_65_0.ovrp_KtxGetTextureData
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(void*, void*, uint32_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxGetTextureData)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x2770b68;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(), "ovrp_KtxGetTextureData", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_65_0.ovrp_KtxTextureSize
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(void*, ByRef<uint32_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxTextureSize)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27709a0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(), "ovrp_KtxTextureSize", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_65_0.ovrp_KtxDestroy
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(void*)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxDestroy)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2770d28;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(), "ovrp_KtxDestroy",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_65_0.ovrp_DestroySpace
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_DestroySpace)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277aac4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(), "ovrp_DestroySpace",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_65_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_65_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxLoadFromMemory(ByRef<void*> data, uint32_t length, ByRef<void*> texture) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(), "ovrp_KtxLoadFromMemory", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<void*>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<void*>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, data, length, texture);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxTextureWidth(void* texture, ByRef<uint32_t> width) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(), "ovrp_KtxTextureWidth", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, texture, width);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxTextureHeight(void* texture, ByRef<uint32_t> height) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(), "ovrp_KtxTextureHeight", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, texture, height);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxTranscode(void* texture, uint32_t format) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(), "ovrp_KtxTranscode", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, texture, format);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxGetTextureData(void* texture, void* data, uint32_t bufferSize) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(), "ovrp_KtxGetTextureData", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, texture, data, bufferSize);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxTextureSize(void* texture, ByRef<uint32_t> size) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(), "ovrp_KtxTextureSize", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, texture, size);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxDestroy(void* texture) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(), "ovrp_KtxDestroy",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, texture);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_DestroySpace(ByRef<uint64_t> space) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(), "ovrp_DestroySpace",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_65_0::__OVRPlugin__OVRP_1_65_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_66_0.ovrp_GetInsightPassthroughInitializationState
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_66_0::ovrp_GetInsightPassthroughInitializationState)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277abc4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_66_0*>::get(),
                                                                               "ovrp_GetInsightPassthroughInitializationState", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_66_0.ovrp_Media_IsCastingToRemoteClient
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_66_0::ovrp_Media_IsCastingToRemoteClient)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2770098;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_66_0*>::get(), "ovrp_Media_IsCastingToRemoteClient", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_66_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_66_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_66_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_66_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_66_0::ovrp_GetInsightPassthroughInitializationState() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_66_0*>::get(),
                                                                             "ovrp_GetInsightPassthroughInitializationState", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_66_0::ovrp_Media_IsCastingToRemoteClient(ByRef<::GlobalNamespace::__OVRPlugin__Bool> isCasting) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_66_0*>::get(), "ovrp_Media_IsCastingToRemoteClient", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, isCasting);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_66_0::__OVRPlugin__OVRP_1_66_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_67_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_67_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_67_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_67_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_67_0::__OVRPlugin__OVRP_1_67_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_68_0.ovrp_LoadRenderModel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint64_t, uint32_t, ByRef<uint32_t>, void*)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_LoadRenderModel)> {
  constexpr static std::size_t size = 0x9c;
  constexpr static std::size_t addrs = 0x277ad34;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(), "ovrp_LoadRenderModel", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_68_0.ovrp_GetRenderModelPaths
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint32_t, void*)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_GetRenderModelPaths)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277add0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(), "ovrp_GetRenderModelPaths", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_68_0.ovrp_GetRenderModelProperties
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::StringW, ByRef<::GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_GetRenderModelProperties)> {
  constexpr static std::size_t size = 0xf8;
  constexpr static std::size_t addrs = 0x277ae54;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(), "ovrp_GetRenderModelProperties", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_68_0.ovrp_SetInsightPassthroughKeyboardHandsIntensity
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    int32_t, ::GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_SetInsightPassthroughKeyboardHandsIntensity)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277af4c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(), "ovrp_SetInsightPassthroughKeyboardHandsIntensity", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_68_0.ovrp_StartKeyboardTracking
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint64_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_StartKeyboardTracking)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277afe0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(), "ovrp_StartKeyboardTracking",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_68_0.ovrp_StopKeyboardTracking
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_StopKeyboardTracking)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277b05c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(),
                                                                               "ovrp_StopKeyboardTracking", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_68_0.ovrp_GetSystemKeyboardDescription
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags, ByRef<::GlobalNamespace::__OVRPlugin__KeyboardDescription>)>(
        &::GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_GetSystemKeyboardDescription)> {
  constexpr static std::size_t size = 0xf4;
  constexpr static std::size_t addrs = 0x277b0c4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(), "ovrp_GetSystemKeyboardDescription", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__KeyboardDescription>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_68_0.ovrp_GetKeyboardState
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::GlobalNamespace::__OVRPlugin__Step, int32_t, ByRef<::GlobalNamespace::__OVRPlugin__KeyboardState>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_GetKeyboardState)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277b1b8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(), "ovrp_GetKeyboardState", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__KeyboardState>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_68_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_68_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_LoadRenderModel(uint64_t modelKey, uint32_t bufferInputCapacity, ByRef<uint32_t> bufferCountOutput,
                                                                                                              void* buffer) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(), "ovrp_LoadRenderModel", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, modelKey, bufferInputCapacity, bufferCountOutput, buffer);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_GetRenderModelPaths(uint32_t index, void* path) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(), "ovrp_GetRenderModelPaths", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, index, path);
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_GetRenderModelProperties(::StringW path, ByRef<::GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal> properties) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(), "ovrp_GetRenderModelProperties", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, path, properties);
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_SetInsightPassthroughKeyboardHandsIntensity(int32_t layerId, ::GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity intensity) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(), "ovrp_SetInsightPassthroughKeyboardHandsIntensity", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, layerId, intensity);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_StartKeyboardTracking(uint64_t trackedKeyboardId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(), "ovrp_StartKeyboardTracking",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, trackedKeyboardId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_StopKeyboardTracking() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(),
                                                                             "ovrp_StopKeyboardTracking", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_GetSystemKeyboardDescription(::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags keyboardQueryFlags,
                                                                             ByRef<::GlobalNamespace::__OVRPlugin__KeyboardDescription> keyboardDescription) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(), "ovrp_GetSystemKeyboardDescription", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__KeyboardDescription>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, keyboardQueryFlags, keyboardDescription);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_GetKeyboardState(::GlobalNamespace::__OVRPlugin__Step stepId, int32_t frameIndex,
                                                                                                               ByRef<::GlobalNamespace::__OVRPlugin__KeyboardState> keyboardState) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(), "ovrp_GetKeyboardState", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__KeyboardState>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, stepId, frameIndex, keyboardState);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_68_0::__OVRPlugin__OVRP_1_68_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_69_0.ovrp_GetNodePoseStateImmediate
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::GlobalNamespace::__OVRPlugin__Node, ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_69_0::ovrp_GetNodePoseStateImmediate)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277b2d0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_69_0*>::get(), "ovrp_GetNodePoseStateImmediate", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_69_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_69_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_69_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_69_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_69_0::ovrp_GetNodePoseStateImmediate(::GlobalNamespace::__OVRPlugin__Node nodeId,
                                                                                                                        ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef> nodePoseState) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_69_0*>::get(), "ovrp_GetNodePoseStateImmediate", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, nodeId, nodePoseState);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_69_0::__OVRPlugin__OVRP_1_69_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_70_0.ovrp_SetLogCallback2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_70_0::ovrp_SetLogCallback2)> {
  constexpr static std::size_t size = 0x80;
  constexpr static std::size_t addrs = 0x277b3d8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_70_0*>::get(), "ovrp_SetLogCallback2", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_70_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_70_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_70_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_70_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_70_0::ovrp_SetLogCallback2(::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType* logCallback) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_70_0*>::get(), "ovrp_SetLogCallback2", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, logCallback);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_70_0::__OVRPlugin__OVRP_1_70_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_IsInsightPassthroughSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_IsInsightPassthroughSupported)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277b4dc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_IsInsightPassthroughSupported", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_UnityOpenXR_SetClientVersion
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int32_t, int32_t, int32_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_SetClientVersion)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x2770e9c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_UnityOpenXR_SetClientVersion", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_UnityOpenXR_HookGetInstanceProcAddr
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void* (*)(void*)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_HookGetInstanceProcAddr)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2770ff4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_UnityOpenXR_HookGetInstanceProcAddr",
                                    std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_UnityOpenXR_OnInstanceCreate
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint64_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnInstanceCreate)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2771138;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_UnityOpenXR_OnInstanceCreate",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_UnityOpenXR_OnInstanceDestroy
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnInstanceDestroy)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2771274;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_UnityOpenXR_OnInstanceDestroy",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_UnityOpenXR_OnSessionCreate
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionCreate)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27713b0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_UnityOpenXR_OnSessionCreate",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_UnityOpenXR_OnAppSpaceChange
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnAppSpaceChange)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27714ec;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_UnityOpenXR_OnAppSpaceChange",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_UnityOpenXR_OnSessionStateChange
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int32_t, int32_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionStateChange)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277163c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_UnityOpenXR_OnSessionStateChange", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_UnityOpenXR_OnSessionBegin
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionBegin)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2771780;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_UnityOpenXR_OnSessionBegin",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_UnityOpenXR_OnSessionEnd
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionEnd)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27718bc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_UnityOpenXR_OnSessionEnd",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_UnityOpenXR_OnSessionExiting
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionExiting)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27719f8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_UnityOpenXR_OnSessionExiting",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_UnityOpenXR_OnSessionDestroy
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionDestroy)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2771b34;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_UnityOpenXR_OnSessionDestroy",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_SetSuggestedCpuPerformanceLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_SetSuggestedCpuPerformanceLevel)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277b558;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_SetSuggestedCpuPerformanceLevel", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_GetSuggestedCpuPerformanceLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_GetSuggestedCpuPerformanceLevel)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277b5d4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_GetSuggestedCpuPerformanceLevel", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_SetSuggestedGpuPerformanceLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_SetSuggestedGpuPerformanceLevel)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277b650;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_SetSuggestedGpuPerformanceLevel", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_GetSuggestedGpuPerformanceLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_GetSuggestedGpuPerformanceLevel)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277b6cc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_GetSuggestedGpuPerformanceLevel", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_71_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_71_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_IsInsightPassthroughSupported(ByRef<::GlobalNamespace::__OVRPlugin__Bool> supported) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_IsInsightPassthroughSupported", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, supported);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_SetClientVersion(int32_t majorVersion, int32_t minorVersion, int32_t patchVersion) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_UnityOpenXR_SetClientVersion", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, majorVersion, minorVersion, patchVersion);
}
inline void* GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_HookGetInstanceProcAddr(void* func) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_UnityOpenXR_HookGetInstanceProcAddr",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
  return ::cordl_internals::RunMethodRethrow<void*, false>(nullptr, ___internal_method, func);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnInstanceCreate(uint64_t xrInstance) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_UnityOpenXR_OnInstanceCreate",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, xrInstance);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnInstanceDestroy(uint64_t xrInstance) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_UnityOpenXR_OnInstanceDestroy",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrInstance);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionCreate(uint64_t xrSession) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_UnityOpenXR_OnSessionCreate",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSession);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnAppSpaceChange(uint64_t xrSpace) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_UnityOpenXR_OnAppSpaceChange",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSpace);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionStateChange(int32_t oldState, int32_t newState) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_UnityOpenXR_OnSessionStateChange", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, oldState, newState);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionBegin(uint64_t xrSession) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_UnityOpenXR_OnSessionBegin",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSession);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionEnd(uint64_t xrSession) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_UnityOpenXR_OnSessionEnd",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSession);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionExiting(uint64_t xrSession) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_UnityOpenXR_OnSessionExiting",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSession);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionDestroy(uint64_t xrSession) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_UnityOpenXR_OnSessionDestroy",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSession);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_SetSuggestedCpuPerformanceLevel(::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel perfLevel) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_SetSuggestedCpuPerformanceLevel", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, perfLevel);
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_GetSuggestedCpuPerformanceLevel(ByRef<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel> perfLevel) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_GetSuggestedCpuPerformanceLevel", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, perfLevel);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_SetSuggestedGpuPerformanceLevel(::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel perfLevel) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_SetSuggestedGpuPerformanceLevel", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, perfLevel);
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_GetSuggestedGpuPerformanceLevel(ByRef<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel> perfLevel) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(), "ovrp_GetSuggestedGpuPerformanceLevel", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, perfLevel);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::__OVRPlugin__OVRP_1_71_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_CreateSpatialAnchor
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ByRef<::GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo>, ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_CreateSpatialAnchor)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277b7cc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((
        ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_CreateSpatialAnchor", std::vector<Il2CppClass*>{},
                                   ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo>>::get(),
                                                                     ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_SetSpaceComponentStatus
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ::GlobalNamespace::__OVRPlugin__SpaceComponentType, ::GlobalNamespace::__OVRPlugin__Bool, double_t, ByRef<uint64_t>)>(
        &::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_SetSpaceComponentStatus)> {
  constexpr static std::size_t size = 0xac;
  constexpr static std::size_t addrs = 0x277b850;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_SetSpaceComponentStatus", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceComponentType>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_GetSpaceComponentStatus
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ByRef<uint64_t>, ::GlobalNamespace::__OVRPlugin__SpaceComponentType, ByRef<::GlobalNamespace::__OVRPlugin__Bool>, ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceComponentStatus)> {
  constexpr static std::size_t size = 0x98;
  constexpr static std::size_t addrs = 0x277b8fc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_GetSpaceComponentStatus", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceComponentType>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_EnumerateSpaceSupportedComponents
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ByRef<uint64_t>, uint32_t, ByRef<uint32_t>, ByRef<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType, ::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_EnumerateSpaceSupportedComponents)> {
  constexpr static std::size_t size = 0xa4;
  constexpr static std::size_t addrs = 0x277b994;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_EnumerateSpaceSupportedComponents", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<
                                              ByRef<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType, ::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_SaveSpace
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ByRef<uint64_t>, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation, ::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode, ByRef<uint64_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_SaveSpace)> {
  constexpr static std::size_t size = 0x9c;
  constexpr static std::size_t addrs = 0x277ba38;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_SaveSpace", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_QuerySpaces
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__SpaceQueryInfo>, ByRef<uint64_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_QuerySpaces)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x277bad4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_QuerySpaces", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpaceQueryInfo>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_RetrieveSpaceQueryResults
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, uint32_t, ByRef<uint32_t>, void*)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_RetrieveSpaceQueryResults)> {
  constexpr static std::size_t size = 0x9c;
  constexpr static std::size_t addrs = 0x277bbb0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_RetrieveSpaceQueryResults", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_EraseSpace
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ByRef<uint64_t>, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation, ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_EraseSpace)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277bc4c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_EraseSpace", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_GetSpaceContainer
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ByRef<uint64_t>, ByRef<::GlobalNamespace::__OVRPlugin__SpaceContainerInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceContainer)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277bce0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_GetSpaceContainer", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpaceContainerInternal>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_GetSpaceBoundingBox2D
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ByRef<::GlobalNamespace::__OVRPlugin__Rectf>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceBoundingBox2D)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277bd64;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_GetSpaceBoundingBox2D", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Rectf>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_GetSpaceBoundingBox3D
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ByRef<::GlobalNamespace::__OVRPlugin__Boundsf>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceBoundingBox3D)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277bde8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_GetSpaceBoundingBox3D", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Boundsf>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_GetSpaceSemanticLabels
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ByRef<uint64_t>, ByRef<::GlobalNamespace::__OVRPlugin__SpaceSemanticLabelInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceSemanticLabels)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277be6c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_GetSpaceSemanticLabels", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpaceSemanticLabelInternal>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_GetSpaceRoomLayout
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ByRef<uint64_t>, ByRef<::GlobalNamespace::__OVRPlugin__RoomLayoutInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceRoomLayout)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277bef0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_GetSpaceRoomLayout", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__RoomLayoutInternal>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_GetSpaceBoundary2D
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ByRef<uint64_t>, ByRef<::GlobalNamespace::__OVRPlugin__PolygonalBoundary2DInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceBoundary2D)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277bf74;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_GetSpaceBoundary2D", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PolygonalBoundary2DInternal>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_RequestSceneCapture
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ByRef<::GlobalNamespace::__OVRPlugin__SceneCaptureRequestInternal>, ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_RequestSceneCapture)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x277bff8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((
        ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_RequestSceneCapture", std::vector<Il2CppClass*>{},
                                   ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SceneCaptureRequestInternal>>::get(),
                                                                     ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_72_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_72_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_CreateSpatialAnchor(ByRef<::GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo> createInfo,
                                                                                                                  ByRef<uint64_t> requestId) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_CreateSpatialAnchor", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, createInfo, requestId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_SetSpaceComponentStatus(ByRef<uint64_t> space,
                                                                                                                      ::GlobalNamespace::__OVRPlugin__SpaceComponentType componentType,
                                                                                                                      ::GlobalNamespace::__OVRPlugin__Bool enable, double_t timeout,
                                                                                                                      ByRef<uint64_t> requestId) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_SetSpaceComponentStatus", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceComponentType>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, componentType, enable, timeout, requestId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceComponentStatus(ByRef<uint64_t> space,
                                                                                                                      ::GlobalNamespace::__OVRPlugin__SpaceComponentType componentType,
                                                                                                                      ByRef<::GlobalNamespace::__OVRPlugin__Bool> enabled,
                                                                                                                      ByRef<::GlobalNamespace::__OVRPlugin__Bool> changePending) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_GetSpaceComponentStatus", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceComponentType>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, componentType, enabled, changePending);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_EnumerateSpaceSupportedComponents(
    ByRef<uint64_t> space, uint32_t componentTypesCapacityInput, ByRef<uint32_t> componentTypesCountOutput,
    ByRef<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType, ::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>> componentTypes) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_EnumerateSpaceSupportedComponents", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<
                                            ByRef<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType, ::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, componentTypesCapacityInput, componentTypesCountOutput, componentTypes);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_SaveSpace(ByRef<uint64_t> space, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation location,
                                                                                                        ::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode mode, ByRef<uint64_t> requestId) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_SaveSpace", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, location, mode, requestId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_QuerySpaces(ByRef<::GlobalNamespace::__OVRPlugin__SpaceQueryInfo> queryInfo, ByRef<uint64_t> requestId) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_QuerySpaces", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpaceQueryInfo>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, queryInfo, requestId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_RetrieveSpaceQueryResults(ByRef<uint64_t> requestId, uint32_t resultCapacityInput,
                                                                                                                        ByRef<uint32_t> resultCountOutput, void* results) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_RetrieveSpaceQueryResults", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, requestId, resultCapacityInput, resultCountOutput, results);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_EraseSpace(ByRef<uint64_t> space, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation location,
                                                                                                         ByRef<uint64_t> requestId) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_EraseSpace", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, location, requestId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceContainer(ByRef<uint64_t> space,
                                                                                                                ByRef<::GlobalNamespace::__OVRPlugin__SpaceContainerInternal> containerInternal) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_GetSpaceContainer", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpaceContainerInternal>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, containerInternal);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceBoundingBox2D(ByRef<uint64_t> space, ByRef<::GlobalNamespace::__OVRPlugin__Rectf> rect) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_GetSpaceBoundingBox2D", std::vector<Il2CppClass*>{},
                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Rectf>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, rect);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceBoundingBox3D(ByRef<uint64_t> space, ByRef<::GlobalNamespace::__OVRPlugin__Boundsf> bounds) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_GetSpaceBoundingBox3D", std::vector<Il2CppClass*>{},
                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Boundsf>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, bounds);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceSemanticLabels(ByRef<uint64_t> space,
                                                                                                                     ByRef<::GlobalNamespace::__OVRPlugin__SpaceSemanticLabelInternal> labelsInternal) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_GetSpaceSemanticLabels", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpaceSemanticLabelInternal>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, labelsInternal);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceRoomLayout(ByRef<uint64_t> space,
                                                                                                                 ByRef<::GlobalNamespace::__OVRPlugin__RoomLayoutInternal> roomLayoutInternal) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_GetSpaceRoomLayout", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__RoomLayoutInternal>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, roomLayoutInternal);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceBoundary2D(ByRef<uint64_t> space,
                                                                                                                 ByRef<::GlobalNamespace::__OVRPlugin__PolygonalBoundary2DInternal> boundaryInternal) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_GetSpaceBoundary2D", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PolygonalBoundary2DInternal>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, boundaryInternal);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_RequestSceneCapture(ByRef<::GlobalNamespace::__OVRPlugin__SceneCaptureRequestInternal> request,
                                                                                                                  ByRef<uint64_t> requestId) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(), "ovrp_RequestSceneCapture", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SceneCaptureRequestInternal>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, request, requestId);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::__OVRPlugin__OVRP_1_72_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_73_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_73_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_73_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_73_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_73_0::__OVRPlugin__OVRP_1_73_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_74_0.ovrp_GetSpaceUuid
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ByRef<::System::Guid>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_GetSpaceUuid)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277c1dc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(), "ovrp_GetSpaceUuid", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::System::Guid>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_74_0.ovrp_CreateVirtualKeyboard
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__VirtualKeyboardCreateInfo)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_CreateVirtualKeyboard)> {
  constexpr static std::size_t size = 0x6c;
  constexpr static std::size_t addrs = 0x277c260;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(), "ovrp_CreateVirtualKeyboard", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardCreateInfo>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_74_0.ovrp_DestroyVirtualKeyboard
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_DestroyVirtualKeyboard)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277c2cc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(),
                                                                               "ovrp_DestroyVirtualKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_74_0.ovrp_SendVirtualKeyboardInput
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo, ByRef<::GlobalNamespace::__OVRPlugin__Posef>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_SendVirtualKeyboardInput)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277c334;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(), "ovrp_SendVirtualKeyboardInput", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_74_0.ovrp_ChangeVirtualKeyboardTextContext
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::StringW)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_ChangeVirtualKeyboardTextContext)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277c3c8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(), "ovrp_ChangeVirtualKeyboardTextContext",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_74_0.ovrp_CreateVirtualKeyboardSpace
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo, ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_CreateVirtualKeyboardSpace)> {
  constexpr static std::size_t size = 0x8c;
  constexpr static std::size_t addrs = 0x277c45c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(), "ovrp_CreateVirtualKeyboardSpace", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_74_0.ovrp_SuggestVirtualKeyboardLocation
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_SuggestVirtualKeyboardLocation)> {
  constexpr static std::size_t size = 0x8c;
  constexpr static std::size_t addrs = 0x277c4e8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(), "ovrp_SuggestVirtualKeyboardLocation", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_74_0.ovrp_GetVirtualKeyboardScale
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<float_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_GetVirtualKeyboardScale)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277c574;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(), "ovrp_GetVirtualKeyboardScale",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_74_0.ovrp_GetRenderModelProperties2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::StringW, ::GlobalNamespace::__OVRPlugin__RenderModelFlags, ByRef<::GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal>)>(
        &::GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_GetRenderModelProperties2)> {
  constexpr static std::size_t size = 0x100;
  constexpr static std::size_t addrs = 0x277c5f0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(), "ovrp_GetRenderModelProperties2", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__RenderModelFlags>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_74_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_74_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_GetSpaceUuid(ByRef<uint64_t> space, ByRef<::System::Guid> uuid) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(), "ovrp_GetSpaceUuid", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::System::Guid>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, uuid);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_CreateVirtualKeyboard(::GlobalNamespace::__OVRPlugin__VirtualKeyboardCreateInfo createInfo) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(), "ovrp_CreateVirtualKeyboard", std::vector<Il2CppClass*>{},
                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardCreateInfo>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, createInfo);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_DestroyVirtualKeyboard() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(),
                                                                             "ovrp_DestroyVirtualKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_SendVirtualKeyboardInput(::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo inputInfo,
                                                                                                                       ByRef<::GlobalNamespace::__OVRPlugin__Posef> interactorRootPose) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(), "ovrp_SendVirtualKeyboardInput", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, inputInfo, interactorRootPose);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_ChangeVirtualKeyboardTextContext(::StringW textContext) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(), "ovrp_ChangeVirtualKeyboardTextContext",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, textContext);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_CreateVirtualKeyboardSpace(::GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo createInfo,
                                                                                                                         ByRef<uint64_t> keyboardSpace) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(), "ovrp_CreateVirtualKeyboardSpace", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, createInfo, keyboardSpace);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_SuggestVirtualKeyboardLocation(::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo locationInfo) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(), "ovrp_SuggestVirtualKeyboardLocation", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, locationInfo);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_GetVirtualKeyboardScale(ByRef<float_t> location) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(), "ovrp_GetVirtualKeyboardScale",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, location);
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_GetRenderModelProperties2(::StringW path, ::GlobalNamespace::__OVRPlugin__RenderModelFlags flags,
                                                                          ByRef<::GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal> properties) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(), "ovrp_GetRenderModelProperties2", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__RenderModelFlags>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, path, flags, properties);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_74_0::__OVRPlugin__OVRP_1_74_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_75_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_75_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_75_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_75_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_75_0::__OVRPlugin__OVRP_1_75_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_76_0.ovrp_GetNodePoseStateAtTime
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    double_t, ::GlobalNamespace::__OVRPlugin__Node, ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_76_0::ovrp_GetNodePoseStateAtTime)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277c7f8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_76_0*>::get(), "ovrp_GetNodePoseStateAtTime", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_76_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_76_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_76_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_76_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_76_0::ovrp_GetNodePoseStateAtTime(double_t time, ::GlobalNamespace::__OVRPlugin__Node nodeId,
                                                                                                                     ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef> nodePoseState) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_76_0*>::get(), "ovrp_GetNodePoseStateAtTime", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, time, nodeId, nodePoseState);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_76_0::__OVRPlugin__OVRP_1_76_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetPassthroughCapabilityFlags
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetPassthroughCapabilityFlags)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277c910;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetPassthroughCapabilityFlags", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetFoveationEyeTrackedSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetFoveationEyeTrackedSupported)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277c98c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetFoveationEyeTrackedSupported", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetFoveationEyeTracked
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetFoveationEyeTracked)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277ca08;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetFoveationEyeTracked", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_SetFoveationEyeTracked
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Bool)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_SetFoveationEyeTracked)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277ca84;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_SetFoveationEyeTracked", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_StartFaceTracking
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StartFaceTracking)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277cb00;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                                                                               "ovrp_StartFaceTracking", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_StopFaceTracking
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StopFaceTracking)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277cb68;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                                                                               "ovrp_StopFaceTracking", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_StartBodyTracking
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StartBodyTracking)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277cbd0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                                                                               "ovrp_StartBodyTracking", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_StopBodyTracking
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StopBodyTracking)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277cc38;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                                                                               "ovrp_StopBodyTracking", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_StartEyeTracking
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StartEyeTracking)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277cca0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                                                                               "ovrp_StartEyeTracking", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_StopEyeTracking
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StopEyeTracking)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277cd08;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                                                                               "ovrp_StopEyeTracking", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetEyeTrackingSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetEyeTrackingSupported)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277cd70;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetEyeTrackingSupported", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetFaceTrackingSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetFaceTrackingSupported)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277cdec;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetFaceTrackingSupported", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetBodyTrackingEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetBodyTrackingEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277ce68;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetBodyTrackingEnabled", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetBodyTrackingSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetBodyTrackingSupported)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277cee4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetBodyTrackingSupported", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetBodyState
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::GlobalNamespace::__OVRPlugin__Step, int32_t, ByRef<::GlobalNamespace::__OVRPlugin__BodyStateInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetBodyState)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277cf60;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetBodyState", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__BodyStateInternal>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetFaceTrackingEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetFaceTrackingEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277cff4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetFaceTrackingEnabled", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetFaceState
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::GlobalNamespace::__OVRPlugin__Step, int32_t, ByRef<::GlobalNamespace::__OVRPlugin__FaceStateInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetFaceState)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277d070;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetFaceState", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__FaceStateInternal>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetEyeTrackingEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetEyeTrackingEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277d104;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetEyeTrackingEnabled", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetEyeGazesState
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::GlobalNamespace::__OVRPlugin__Step, int32_t, ByRef<::GlobalNamespace::__OVRPlugin__EyeGazesStateInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetEyeGazesState)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277d180;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetEyeGazesState", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__EyeGazesStateInternal>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetControllerState5
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint32_t, ByRef<::GlobalNamespace::__OVRPlugin__ControllerState5>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetControllerState5)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277d214;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((
        ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetControllerState5", std::vector<Il2CppClass*>{},
                                   ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                                                     ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ControllerState5>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_SetControllerLocalizedVibration
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Controller, ::GlobalNamespace::__OVRPlugin__HapticsLocation, float_t, float_t)>(
        &::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_SetControllerLocalizedVibration)> {
  constexpr static std::size_t size = 0x9c;
  constexpr static std::size_t addrs = 0x277d298;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_SetControllerLocalizedVibration", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsLocation>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetLocalDimmingSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetLocalDimmingSupported)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277d334;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetLocalDimmingSupported", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_SetLocalDimming
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Bool)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_SetLocalDimming)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277d3b0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_SetLocalDimming", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetLocalDimming
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetLocalDimming)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277d42c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetLocalDimming", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetCurrentInteractionProfile
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::GlobalNamespace::__OVRPlugin__Hand, ByRef<::GlobalNamespace::__OVRPlugin__InteractionProfile>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetCurrentInteractionProfile)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277d4a8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetCurrentInteractionProfile", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__InteractionProfile>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_SetControllerHapticsAmplitudeEnvelope
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Controller, ::GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration)>(
        &::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_SetControllerHapticsAmplitudeEnvelope)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277d52c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_SetControllerHapticsAmplitudeEnvelope", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_SetControllerHapticsPcm
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::GlobalNamespace::__OVRPlugin__Controller, ::GlobalNamespace::__OVRPlugin__HapticsPcmVibration)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_SetControllerHapticsPcm)> {
  constexpr static std::size_t size = 0x8c;
  constexpr static std::size_t addrs = 0x277d5c0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_SetControllerHapticsPcm", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsPcmVibration>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetControllerSampleRateHz
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Controller, ByRef<float_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetControllerSampleRateHz)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277d64c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetControllerSampleRateHz", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_78_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_78_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetPassthroughCapabilityFlags(ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags> capabilityFlags) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetPassthroughCapabilityFlags", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, capabilityFlags);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetFoveationEyeTrackedSupported(ByRef<::GlobalNamespace::__OVRPlugin__Bool> foveationSupported) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetFoveationEyeTrackedSupported", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, foveationSupported);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetFoveationEyeTracked(ByRef<::GlobalNamespace::__OVRPlugin__Bool> isEyeTrackedFoveation) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetFoveationEyeTracked", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, isEyeTrackedFoveation);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_SetFoveationEyeTracked(::GlobalNamespace::__OVRPlugin__Bool isEyeTrackedFoveation) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_SetFoveationEyeTracked",
                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, isEyeTrackedFoveation);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StartFaceTracking() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                                                                             "ovrp_StartFaceTracking", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StopFaceTracking() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                                                                             "ovrp_StopFaceTracking", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StartBodyTracking() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                                                                             "ovrp_StartBodyTracking", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StopBodyTracking() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                                                                             "ovrp_StopBodyTracking", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StartEyeTracking() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                                                                             "ovrp_StartEyeTracking", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StopEyeTracking() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                                                                             "ovrp_StopEyeTracking", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetEyeTrackingSupported(ByRef<::GlobalNamespace::__OVRPlugin__Bool> eyeTrackingSupported) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetEyeTrackingSupported", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, eyeTrackingSupported);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetFaceTrackingSupported(ByRef<::GlobalNamespace::__OVRPlugin__Bool> faceTrackingSupported) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetFaceTrackingSupported", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, faceTrackingSupported);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetBodyTrackingEnabled(ByRef<::GlobalNamespace::__OVRPlugin__Bool> value) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetBodyTrackingEnabled", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetBodyTrackingSupported(ByRef<::GlobalNamespace::__OVRPlugin__Bool> value) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetBodyTrackingSupported", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetBodyState(::GlobalNamespace::__OVRPlugin__Step stepId, int32_t frameIndex,
                                                                                                           ByRef<::GlobalNamespace::__OVRPlugin__BodyStateInternal> bodyState) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetBodyState", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__BodyStateInternal>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, stepId, frameIndex, bodyState);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetFaceTrackingEnabled(ByRef<::GlobalNamespace::__OVRPlugin__Bool> faceTrackingEnabled) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetFaceTrackingEnabled", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, faceTrackingEnabled);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetFaceState(::GlobalNamespace::__OVRPlugin__Step stepId, int32_t frameIndex,
                                                                                                           ByRef<::GlobalNamespace::__OVRPlugin__FaceStateInternal> faceState) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetFaceState", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__FaceStateInternal>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, stepId, frameIndex, faceState);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetEyeTrackingEnabled(ByRef<::GlobalNamespace::__OVRPlugin__Bool> eyeTrackingEnabled) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetEyeTrackingEnabled", std::vector<Il2CppClass*>{},
                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, eyeTrackingEnabled);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetEyeGazesState(::GlobalNamespace::__OVRPlugin__Step stepId, int32_t frameIndex,
                                                                                                               ByRef<::GlobalNamespace::__OVRPlugin__EyeGazesStateInternal> eyeGazesState) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetEyeGazesState", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__EyeGazesStateInternal>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, stepId, frameIndex, eyeGazesState);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetControllerState5(uint32_t controllerMask,
                                                                                                                  ByRef<::GlobalNamespace::__OVRPlugin__ControllerState5> controllerState) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetControllerState5", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ControllerState5>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, controllerMask, controllerState);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_SetControllerLocalizedVibration(::GlobalNamespace::__OVRPlugin__Controller controllerMask,
                                                                                                                              ::GlobalNamespace::__OVRPlugin__HapticsLocation hapticsLocationMask,
                                                                                                                              float_t frequency, float_t amplitude) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_SetControllerLocalizedVibration", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsLocation>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, controllerMask, hapticsLocationMask, frequency, amplitude);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetLocalDimmingSupported(ByRef<::GlobalNamespace::__OVRPlugin__Bool> localDimmingSupported) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetLocalDimmingSupported", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, localDimmingSupported);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_SetLocalDimming(::GlobalNamespace::__OVRPlugin__Bool localDimmingMode) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_SetLocalDimming", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, localDimmingMode);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetLocalDimming(ByRef<::GlobalNamespace::__OVRPlugin__Bool> localDimmingMode) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetLocalDimming", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, localDimmingMode);
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetCurrentInteractionProfile(::GlobalNamespace::__OVRPlugin__Hand hand, ByRef<::GlobalNamespace::__OVRPlugin__InteractionProfile> interactionProfile) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetCurrentInteractionProfile", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__InteractionProfile>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, hand, interactionProfile);
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_SetControllerHapticsAmplitudeEnvelope(::GlobalNamespace::__OVRPlugin__Controller controllerMask,
                                                                                      ::GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration hapticsVibration) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_SetControllerHapticsAmplitudeEnvelope", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, controllerMask, hapticsVibration);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_SetControllerHapticsPcm(::GlobalNamespace::__OVRPlugin__Controller controllerMask,
                                                                                                                      ::GlobalNamespace::__OVRPlugin__HapticsPcmVibration hapticsVibration) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_SetControllerHapticsPcm", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsPcmVibration>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, controllerMask, hapticsVibration);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetControllerSampleRateHz(::GlobalNamespace::__OVRPlugin__Controller controller,
                                                                                                                        ByRef<float_t> sampleRateHz) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(), "ovrp_GetControllerSampleRateHz", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, controller, sampleRateHz);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::__OVRPlugin__OVRP_1_78_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_ShareSpaces
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::cordl_internals::Ptr<uint64_t>, uint32_t, ::cordl_internals::Ptr<uint64_t>, uint32_t, ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_ShareSpaces)> {
  constexpr static std::size_t size = 0xac;
  constexpr static std::size_t addrs = 0x277d754;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_ShareSpaces", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::Ptr<uint64_t>>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::Ptr<uint64_t>>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_SaveSpaceList
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::cordl_internals::Ptr<uint64_t>, uint32_t, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation, ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_SaveSpaceList)> {
  constexpr static std::size_t size = 0x9c;
  constexpr static std::size_t addrs = 0x277d800;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_SaveSpaceList", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::Ptr<uint64_t>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_GetSpaceUserId
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ByRef<uint64_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_GetSpaceUserId)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277d89c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_GetSpaceUserId", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_CreateSpaceUser
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ByRef<uint64_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_CreateSpaceUser)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277d920;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_CreateSpaceUser", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_DestroySpaceUser
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_DestroySpaceUser)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277d9a4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_DestroySpaceUser",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_LocateSpace2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ByRef<::GlobalNamespace::__OVRPlugin__SpaceLocationf>, ByRef<uint64_t>, ::GlobalNamespace::__OVRPlugin__TrackingOrigin)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_LocateSpace2)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277da20;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_LocateSpace2", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpaceLocationf>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_DeclareUser
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ByRef<uint64_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_DeclareUser)> {
  constexpr static std::size_t size = 0x80;
  constexpr static std::size_t addrs = 0x277dab4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_DeclareUser", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_QplMarkerStart
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, int32_t, int64_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplMarkerStart)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x2771c94;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_QplMarkerStart", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_QplMarkerEnd
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    int32_t, ::GlobalNamespace::__OVRPlugin__Qpl__ResultType, int32_t, int64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplMarkerEnd)> {
  constexpr static std::size_t size = 0x9c;
  constexpr static std::size_t addrs = 0x2771e18;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_QplMarkerEnd", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Qpl__ResultType>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_QplMarkerPointCached
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, int32_t, int32_t, int64_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplMarkerPointCached)> {
  constexpr static std::size_t size = 0x9c;
  constexpr static std::size_t addrs = 0x2771fa4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_QplMarkerPointCached", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_QplMarkerAnnotation
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ::StringW, ::StringW, int32_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplMarkerAnnotation)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x2772130;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_QplMarkerAnnotation", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_QplCreateMarkerHandle
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::StringW, ByRef<int32_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplCreateMarkerHandle)> {
  constexpr static std::size_t size = 0x9c;
  constexpr static std::size_t addrs = 0x27722d4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_QplCreateMarkerHandle", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_QplDestroyMarkerHandle
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplDestroyMarkerHandle)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2772438;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_QplDestroyMarkerHandle",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_79_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_79_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_ShareSpaces(::cordl_internals::Ptr<uint64_t> spaces, uint32_t numSpaces,
                                                                                                          ::cordl_internals::Ptr<uint64_t> userHandles, uint32_t numUsers, ByRef<uint64_t> requestId) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_ShareSpaces", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::Ptr<uint64_t>>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::Ptr<uint64_t>>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, spaces, numSpaces, userHandles, numUsers, requestId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_SaveSpaceList(::cordl_internals::Ptr<uint64_t> spaces, uint32_t numSpaces,
                                                                                                            ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation location, ByRef<uint64_t> requestId) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_SaveSpaceList", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::Ptr<uint64_t>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, spaces, numSpaces, location, requestId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_GetSpaceUserId(ByRef<uint64_t> spaceUserHandle, ByRef<uint64_t> spaceUserId) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_GetSpaceUserId", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, spaceUserHandle, spaceUserId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_CreateSpaceUser(ByRef<uint64_t> spaceUserId, ByRef<uint64_t> spaceUserHandle) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_CreateSpaceUser", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, spaceUserId, spaceUserHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_DestroySpaceUser(ByRef<uint64_t> userHandle) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_DestroySpaceUser",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, userHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_LocateSpace2(ByRef<::GlobalNamespace::__OVRPlugin__SpaceLocationf> location, ByRef<uint64_t> space,
                                                                                                           ::GlobalNamespace::__OVRPlugin__TrackingOrigin trackingOrigin) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_LocateSpace2", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpaceLocationf>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, location, space, trackingOrigin);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_DeclareUser(ByRef<uint64_t> userId, ByRef<uint64_t> userHandle) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_DeclareUser", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, userId, userHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplMarkerStart(int32_t markerId, int32_t instanceKey, int64_t timestampMs) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_QplMarkerStart", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, markerId, instanceKey, timestampMs);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplMarkerEnd(int32_t markerId, ::GlobalNamespace::__OVRPlugin__Qpl__ResultType resultTypeId,
                                                                                                           int32_t instanceKey, int64_t timestampMs) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_QplMarkerEnd", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Qpl__ResultType>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, markerId, resultTypeId, instanceKey, timestampMs);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplMarkerPointCached(int32_t markerId, int32_t nameHandle, int32_t instanceKey, int64_t timestampMs) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_QplMarkerPointCached", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, markerId, nameHandle, instanceKey, timestampMs);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplMarkerAnnotation(int32_t markerId, ::StringW annotationKey, ::StringW annotationValue,
                                                                                                                  int32_t instanceKey) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_QplMarkerAnnotation", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, markerId, annotationKey, annotationValue, instanceKey);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplCreateMarkerHandle(::StringW name, ByRef<int32_t> nameHandle) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_QplCreateMarkerHandle", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, name, nameHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplDestroyMarkerHandle(int32_t nameHandle) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(), "ovrp_QplDestroyMarkerHandle",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, nameHandle);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::__OVRPlugin__OVRP_1_79_0() {}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_81_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_81_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_81_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_81_0*>::get>();
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_81_0::__OVRPlugin__OVRP_1_81_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_82_0.ovrp_GetSpaceTriangleMesh
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ByRef<uint64_t>, ByRef<::GlobalNamespace::__OVRPlugin__TriangleMeshInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_82_0::ovrp_GetSpaceTriangleMesh)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277dc3c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_82_0*>::get(), "ovrp_GetSpaceTriangleMesh", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__TriangleMeshInternal>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_82_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_82_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_82_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_82_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_82_0::ovrp_GetSpaceTriangleMesh(ByRef<uint64_t> space,
                                                                                                                   ByRef<::GlobalNamespace::__OVRPlugin__TriangleMeshInternal> triangleMeshInternal) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_82_0*>::get(), "ovrp_GetSpaceTriangleMesh", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__TriangleMeshInternal>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, triangleMeshInternal);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_82_0::__OVRPlugin__OVRP_1_82_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_83_0.ovrp_GetControllerState6
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint32_t, ByRef<::GlobalNamespace::__OVRPlugin__ControllerState6>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_83_0::ovrp_GetControllerState6)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277dd44;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((
        ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get(), "ovrp_GetControllerState6", std::vector<Il2CppClass*>{},
                                   ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                                                     ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ControllerState6>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_83_0.ovrp_GetVirtualKeyboardModelAnimationStates
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_83_0::ovrp_GetVirtualKeyboardModelAnimationStates)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277ddc8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get(), "ovrp_GetVirtualKeyboardModelAnimationStates", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_83_0.ovrp_GetVirtualKeyboardDirtyTextures
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIdsInternal>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_83_0::ovrp_GetVirtualKeyboardDirtyTextures)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277de44;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get(), "ovrp_GetVirtualKeyboardDirtyTextures", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIdsInternal>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_83_0.ovrp_GetVirtualKeyboardTextureData
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    uint64_t, ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_83_0::ovrp_GetVirtualKeyboardTextureData)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277dec0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get(), "ovrp_GetVirtualKeyboardTextureData", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_83_0.ovrp_SetVirtualKeyboardModelVisibility
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_83_0::ovrp_SetVirtualKeyboardModelVisibility)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277df44;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get(), "ovrp_SetVirtualKeyboardModelVisibility", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_83_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_83_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_83_0::ovrp_GetControllerState6(uint32_t controllerMask,
                                                                                                                  ByRef<::GlobalNamespace::__OVRPlugin__ControllerState6> controllerState) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get(), "ovrp_GetControllerState6", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ControllerState6>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, controllerMask, controllerState);
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_83_0::ovrp_GetVirtualKeyboardModelAnimationStates(ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal> animationStates) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get(), "ovrp_GetVirtualKeyboardModelAnimationStates", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, animationStates);
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_83_0::ovrp_GetVirtualKeyboardDirtyTextures(ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIdsInternal> textureIds) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get(), "ovrp_GetVirtualKeyboardDirtyTextures", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIdsInternal>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, textureIds);
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_83_0::ovrp_GetVirtualKeyboardTextureData(uint64_t textureId, ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData> textureData) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get(), "ovrp_GetVirtualKeyboardTextureData", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, textureId, textureData);
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_83_0::ovrp_SetVirtualKeyboardModelVisibility(ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility> visibility) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get(), "ovrp_SetVirtualKeyboardModelVisibility", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, visibility);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_83_0::__OVRPlugin__OVRP_1_83_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_84_0.ovrp_CreatePassthroughColorLut
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels, uint32_t,
                                                                                                                             ::GlobalNamespace::__OVRPlugin__PassthroughColorLutData, ByRef<uint64_t>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_CreatePassthroughColorLut)> {
  constexpr static std::size_t size = 0xac;
  constexpr static std::size_t addrs = 0x277e044;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(), "ovrp_CreatePassthroughColorLut", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutData>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_84_0.ovrp_DestroyPassthroughColorLut
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint64_t)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_DestroyPassthroughColorLut)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277e0f0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(), "ovrp_DestroyPassthroughColorLut",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_84_0.ovrp_UpdatePassthroughColorLut
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint64_t, ::GlobalNamespace::__OVRPlugin__PassthroughColorLutData)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_UpdatePassthroughColorLut)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277e16c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(), "ovrp_UpdatePassthroughColorLut", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutData>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_84_0.ovrp_SetInsightPassthroughStyle2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ByRef<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_SetInsightPassthroughStyle2)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277e200;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(), "ovrp_SetInsightPassthroughStyle2", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_84_0.ovrp_GetLayerRecommendedResolution
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ByRef<::GlobalNamespace::__OVRPlugin__Sizei>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_GetLayerRecommendedResolution)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277e284;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(), "ovrp_GetLayerRecommendedResolution", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_84_0.ovrp_GetEyeLayerRecommendedResolution
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Sizei>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_GetEyeLayerRecommendedResolution)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277e308;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(), "ovrp_GetEyeLayerRecommendedResolution", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_84_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_84_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_CreatePassthroughColorLut(::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels channels,
                                                                                                                        uint32_t resolution,
                                                                                                                        ::GlobalNamespace::__OVRPlugin__PassthroughColorLutData data,
                                                                                                                        ByRef<uint64_t> colorLut) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(), "ovrp_CreatePassthroughColorLut", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutData>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, channels, resolution, data, colorLut);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_DestroyPassthroughColorLut(uint64_t colorLut) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(), "ovrp_DestroyPassthroughColorLut",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, colorLut);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_UpdatePassthroughColorLut(uint64_t colorLut,
                                                                                                                        ::GlobalNamespace::__OVRPlugin__PassthroughColorLutData data) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(), "ovrp_UpdatePassthroughColorLut", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutData>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, colorLut, data);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_SetInsightPassthroughStyle2(int32_t layerId,
                                                                                                                          ByRef<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2> style) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(), "ovrp_SetInsightPassthroughStyle2", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, layerId, style);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_GetLayerRecommendedResolution(int32_t layerId,
                                                                                                                            ByRef<::GlobalNamespace::__OVRPlugin__Sizei> recommendedDimensions) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(), "ovrp_GetLayerRecommendedResolution", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, layerId, recommendedDimensions);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_GetEyeLayerRecommendedResolution(ByRef<::GlobalNamespace::__OVRPlugin__Sizei> recommendedDimensions) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(), "ovrp_GetEyeLayerRecommendedResolution", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, recommendedDimensions);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_84_0::__OVRPlugin__OVRP_1_84_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_85_0.ovrp_OnEditorShutdown
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_85_0::ovrp_OnEditorShutdown)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277e408;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_85_0*>::get(),
                                                                               "ovrp_OnEditorShutdown", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_85_0.ovrp_GetPassthroughCapabilities
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilities>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_85_0::ovrp_GetPassthroughCapabilities)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277e470;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_85_0*>::get(), "ovrp_GetPassthroughCapabilities", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilities>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_85_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_85_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_85_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_85_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_85_0::ovrp_OnEditorShutdown() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_85_0*>::get(),
                                                                             "ovrp_OnEditorShutdown", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_85_0::ovrp_GetPassthroughCapabilities(ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilities> capabilityFlags) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_85_0*>::get(), "ovrp_GetPassthroughCapabilities", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilities>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, capabilityFlags);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_85_0::__OVRPlugin__OVRP_1_85_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_86_0.ovrp_SetControllerDrivenHandPoses
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Bool)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_SetControllerDrivenHandPoses)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277e570;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(), "ovrp_SetControllerDrivenHandPoses", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_86_0.ovrp_IsControllerDrivenHandPosesEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_IsControllerDrivenHandPosesEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277e5ec;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(), "ovrp_IsControllerDrivenHandPosesEnabled", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_86_0.ovrp_AreHandPosesGeneratedByControllerData
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Step, ::GlobalNamespace::__OVRPlugin__Node, ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
        &::GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_AreHandPosesGeneratedByControllerData)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277e668;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(), "ovrp_AreHandPosesGeneratedByControllerData", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_86_0.ovrp_SetMultimodalHandsControllersSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Bool)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_SetMultimodalHandsControllersSupported)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277e6fc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(), "ovrp_SetMultimodalHandsControllersSupported", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_86_0.ovrp_IsMultimodalHandsControllersSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_IsMultimodalHandsControllersSupported)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277e778;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(), "ovrp_IsMultimodalHandsControllersSupported", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_86_0.ovrp_GetCurrentDetachedInteractionProfile
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::GlobalNamespace::__OVRPlugin__Hand, ByRef<::GlobalNamespace::__OVRPlugin__InteractionProfile>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_GetCurrentDetachedInteractionProfile)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277e7f4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(), "ovrp_GetCurrentDetachedInteractionProfile", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__InteractionProfile>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_86_0.ovrp_GetControllerIsInHand
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Step, ::GlobalNamespace::__OVRPlugin__Node, ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
        &::GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_GetControllerIsInHand)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277e878;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(), "ovrp_GetControllerIsInHand", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_86_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_86_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_SetControllerDrivenHandPoses(::GlobalNamespace::__OVRPlugin__Bool controllerDrivenHandPoses) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(), "ovrp_SetControllerDrivenHandPoses",
                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, controllerDrivenHandPoses);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_IsControllerDrivenHandPosesEnabled(ByRef<::GlobalNamespace::__OVRPlugin__Bool> enabled) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(), "ovrp_IsControllerDrivenHandPosesEnabled", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, enabled);
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_AreHandPosesGeneratedByControllerData(::GlobalNamespace::__OVRPlugin__Step stepId, ::GlobalNamespace::__OVRPlugin__Node nodeId,
                                                                                      ByRef<::GlobalNamespace::__OVRPlugin__Bool> isGeneratedByControllerData) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(), "ovrp_AreHandPosesGeneratedByControllerData", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, stepId, nodeId, isGeneratedByControllerData);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_SetMultimodalHandsControllersSupported(::GlobalNamespace::__OVRPlugin__Bool supported) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(), "ovrp_SetMultimodalHandsControllersSupported",
                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, supported);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_IsMultimodalHandsControllersSupported(ByRef<::GlobalNamespace::__OVRPlugin__Bool> supported) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(), "ovrp_IsMultimodalHandsControllersSupported", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, supported);
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_GetCurrentDetachedInteractionProfile(::GlobalNamespace::__OVRPlugin__Hand hand,
                                                                                     ByRef<::GlobalNamespace::__OVRPlugin__InteractionProfile> interactionProfile) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(), "ovrp_GetCurrentDetachedInteractionProfile", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__InteractionProfile>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, hand, interactionProfile);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_GetControllerIsInHand(::GlobalNamespace::__OVRPlugin__Step stepId,
                                                                                                                    ::GlobalNamespace::__OVRPlugin__Node nodeId,
                                                                                                                    ByRef<::GlobalNamespace::__OVRPlugin__Bool> isInHand) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(), "ovrp_GetControllerIsInHand", std::vector<Il2CppClass*>{},
                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, stepId, nodeId, isInHand);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_86_0::__OVRPlugin__OVRP_1_86_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_87_0.ovrp_GetPassthroughPreferences
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__PassthroughPreferences>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_87_0::ovrp_GetPassthroughPreferences)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277e990;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_87_0*>::get(), "ovrp_GetPassthroughPreferences", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PassthroughPreferences>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_87_0.ovrp_SetEyeBufferSharpenType
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__LayerSharpenType)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_87_0::ovrp_SetEyeBufferSharpenType)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277ea0c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_87_0*>::get(), "ovrp_SetEyeBufferSharpenType", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerSharpenType>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_87_0.ovrp_SetControllerDrivenHandPosesAreNatural
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Bool)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_87_0::ovrp_SetControllerDrivenHandPosesAreNatural)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277ea88;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_87_0*>::get(), "ovrp_SetControllerDrivenHandPosesAreNatural", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_87_0.ovrp_AreControllerDrivenHandPosesNatural
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_87_0::ovrp_AreControllerDrivenHandPosesNatural)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277eb04;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_87_0*>::get(), "ovrp_AreControllerDrivenHandPosesNatural", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_87_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_87_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_87_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_87_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_87_0::ovrp_GetPassthroughPreferences(ByRef<::GlobalNamespace::__OVRPlugin__PassthroughPreferences> preferences) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_87_0*>::get(), "ovrp_GetPassthroughPreferences", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PassthroughPreferences>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, preferences);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_87_0::ovrp_SetEyeBufferSharpenType(::GlobalNamespace::__OVRPlugin__LayerSharpenType sharpenType) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_87_0*>::get(), "ovrp_SetEyeBufferSharpenType", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerSharpenType>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, sharpenType);
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::__OVRPlugin__OVRP_1_87_0::ovrp_SetControllerDrivenHandPosesAreNatural(::GlobalNamespace::__OVRPlugin__Bool controllerDrivenHandPosesAreNatural) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_87_0*>::get(), "ovrp_SetControllerDrivenHandPosesAreNatural",
                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, controllerDrivenHandPosesAreNatural);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_87_0::ovrp_AreControllerDrivenHandPosesNatural(ByRef<::GlobalNamespace::__OVRPlugin__Bool> natural) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_87_0*>::get(), "ovrp_AreControllerDrivenHandPosesNatural", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, natural);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_87_0::__OVRPlugin__OVRP_1_87_0() {}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_88_0.ovrp_SetSimultaneousHandsAndControllersEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Bool)>(
    &::GlobalNamespace::__OVRPlugin__OVRP_1_88_0::ovrp_SetSimultaneousHandsAndControllersEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277ec04;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_88_0*>::get(), "ovrp_SetSimultaneousHandsAndControllersEnabled", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_88_0::setStaticF_version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_88_0*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_88_0::getStaticF_version() {
  return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_88_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_88_0::ovrp_SetSimultaneousHandsAndControllersEnabled(::GlobalNamespace::__OVRPlugin__Bool enabled) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_88_0*>::get(), "ovrp_SetSimultaneousHandsAndControllersEnabled",
                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, enabled);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::__OVRPlugin__OVRP_1_88_0::__OVRPlugin__OVRP_1_88_0() {}
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_version
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Version* (*)()>(&::GlobalNamespace::OVRPlugin::get_version)> {
  constexpr static std::size_t size = 0x560;
  constexpr static std::size_t addrs = 0x27542f4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_version",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_nativeSDKVersion
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Version* (*)()>(&::GlobalNamespace::OVRPlugin::get_nativeSDKVersion)> {
  constexpr static std::size_t size = 0x2bc;
  constexpr static std::size_t addrs = 0x2754854;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_nativeSDKVersion",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsSuccess
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Result)>(&::GlobalNamespace::OVRPlugin::IsSuccess)> {
  constexpr static std::size_t size = 0xc;
  constexpr static std::size_t addrs = 0x2754b10;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "IsSuccess", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Result>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetLogCallback2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*)>(
    &::GlobalNamespace::OVRPlugin::SetLogCallback2)> {
  constexpr static std::size_t size = 0x108;
  constexpr static std::size_t addrs = 0x2754b1c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetLogCallback2", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsPassthroughShape
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__OverlayShape)>(&::GlobalNamespace::OVRPlugin::IsPassthroughShape)> {
  constexpr static std::size_t size = 0x30;
  constexpr static std::size_t addrs = 0x2754c24;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "IsPassthroughShape", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__OverlayShape>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsPositionValid
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__SpaceLocationFlags)>(&::GlobalNamespace::OVRPlugin::IsPositionValid)> {
  constexpr static std::size_t size = 0x8;
  constexpr static std::size_t addrs = 0x2754c54;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "IsPositionValid", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsOrientationValid
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__SpaceLocationFlags)>(&::GlobalNamespace::OVRPlugin::IsOrientationValid)> {
  constexpr static std::size_t size = 0x8;
  constexpr static std::size_t addrs = 0x2754c5c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "IsOrientationValid", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsPositionTracked
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__SpaceLocationFlags)>(&::GlobalNamespace::OVRPlugin::IsPositionTracked)> {
  constexpr static std::size_t size = 0x8;
  constexpr static std::size_t addrs = 0x2754c64;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "IsPositionTracked", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsOrientationTracked
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__SpaceLocationFlags)>(&::GlobalNamespace::OVRPlugin::IsOrientationTracked)> {
  constexpr static std::size_t size = 0x8;
  constexpr static std::size_t addrs = 0x2754c6c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "IsOrientationTracked", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GuidToUuidString
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::Guid)>(&::GlobalNamespace::OVRPlugin::GuidToUuidString)> {
  constexpr static std::size_t size = 0x17c;
  constexpr static std::size_t addrs = 0x2754c74;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GuidToUuidString", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::System::Guid>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_initialized
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_initialized)> {
  constexpr static std::size_t size = 0x5c;
  constexpr static std::size_t addrs = 0x2754df0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_initialized",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_nativeXrApi
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__XrApi (*)()>(&::GlobalNamespace::OVRPlugin::get_nativeXrApi)> {
  constexpr static std::size_t size = 0x19c;
  constexpr static std::size_t addrs = 0x2754e4c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_nativeXrApi",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_chromatic
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_chromatic)> {
  constexpr static std::size_t size = 0xd8;
  constexpr static std::size_t addrs = 0x2754fe8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_chromatic",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_chromatic
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&::GlobalNamespace::OVRPlugin::set_chromatic)> {
  constexpr static std::size_t size = 0xf8;
  constexpr static std::size_t addrs = 0x27550c0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_chromatic", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_monoscopic
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_monoscopic)> {
  constexpr static std::size_t size = 0x90;
  constexpr static std::size_t addrs = 0x27551c0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_monoscopic",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_monoscopic
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&::GlobalNamespace::OVRPlugin::set_monoscopic)> {
  constexpr static std::size_t size = 0xa4;
  constexpr static std::size_t addrs = 0x2755250;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_monoscopic", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_rotation
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_rotation)> {
  constexpr static std::size_t size = 0x90;
  constexpr static std::size_t addrs = 0x27552f4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_rotation",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_rotation
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&::GlobalNamespace::OVRPlugin::set_rotation)> {
  constexpr static std::size_t size = 0xa4;
  constexpr static std::size_t addrs = 0x2755384;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_rotation", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_position
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_position)> {
  constexpr static std::size_t size = 0x90;
  constexpr static std::size_t addrs = 0x2755428;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_position",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_position
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&::GlobalNamespace::OVRPlugin::set_position)> {
  constexpr static std::size_t size = 0xa4;
  constexpr static std::size_t addrs = 0x27554b8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_position", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_useIPDInPositionTracking
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_useIPDInPositionTracking)> {
  constexpr static std::size_t size = 0xd8;
  constexpr static std::size_t addrs = 0x275555c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "get_useIPDInPositionTracking", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_useIPDInPositionTracking
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&::GlobalNamespace::OVRPlugin::set_useIPDInPositionTracking)> {
  constexpr static std::size_t size = 0xf8;
  constexpr static std::size_t addrs = 0x2755634;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_useIPDInPositionTracking",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_positionSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_positionSupported)> {
  constexpr static std::size_t size = 0x90;
  constexpr static std::size_t addrs = 0x275572c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_positionSupported",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_positionTracked
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_positionTracked)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x27557bc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_positionTracked",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_powerSaving
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_powerSaving)> {
  constexpr static std::size_t size = 0x90;
  constexpr static std::size_t addrs = 0x2755850;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_powerSaving",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_hmdPresent
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_hmdPresent)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x27558e0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_hmdPresent",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_userPresent
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_userPresent)> {
  constexpr static std::size_t size = 0x90;
  constexpr static std::size_t addrs = 0x2755974;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_userPresent",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_headphonesPresent
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_headphonesPresent)> {
  constexpr static std::size_t size = 0x90;
  constexpr static std::size_t addrs = 0x2755a04;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_headphonesPresent",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_recommendedMSAALevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)()>(&::GlobalNamespace::OVRPlugin::get_recommendedMSAALevel)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x2755a94;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_recommendedMSAALevel",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_systemRegion
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__SystemRegion (*)()>(&::GlobalNamespace::OVRPlugin::get_systemRegion)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x2755b68;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_systemRegion",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_audioOutId
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&::GlobalNamespace::OVRPlugin::get_audioOutId)> {
  constexpr static std::size_t size = 0x314;
  constexpr static std::size_t addrs = 0x2755c3c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_audioOutId",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_audioInId
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&::GlobalNamespace::OVRPlugin::get_audioInId)> {
  constexpr static std::size_t size = 0x314;
  constexpr static std::size_t addrs = 0x2755f58;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_audioInId",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_hasVrFocus
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_hasVrFocus)> {
  constexpr static std::size_t size = 0x5c;
  constexpr static std::size_t addrs = 0x275626c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_hasVrFocus",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_hasInputFocus
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_hasInputFocus)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x27562c8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_hasInputFocus",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_shouldQuit
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_shouldQuit)> {
  constexpr static std::size_t size = 0x5c;
  constexpr static std::size_t addrs = 0x27563a4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_shouldQuit",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_shouldRecenter
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_shouldRecenter)> {
  constexpr static std::size_t size = 0x5c;
  constexpr static std::size_t addrs = 0x2756400;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_shouldRecenter",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_productName
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&::GlobalNamespace::OVRPlugin::get_productName)> {
  constexpr static std::size_t size = 0x50;
  constexpr static std::size_t addrs = 0x275645c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_productName",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_latency
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&::GlobalNamespace::OVRPlugin::get_latency)> {
  constexpr static std::size_t size = 0xa8;
  constexpr static std::size_t addrs = 0x27564ac;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_latency",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_eyeDepth
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::get_eyeDepth)> {
  constexpr static std::size_t size = 0x8c;
  constexpr static std::size_t addrs = 0x2756554;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_eyeDepth",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_eyeDepth
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float_t)>(&::GlobalNamespace::OVRPlugin::set_eyeDepth)> {
  constexpr static std::size_t size = 0x60;
  constexpr static std::size_t addrs = 0x27565e0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_eyeDepth", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_eyeHeight
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::get_eyeHeight)> {
  constexpr static std::size_t size = 0x50;
  constexpr static std::size_t addrs = 0x2756640;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_eyeHeight",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_eyeHeight
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float_t)>(&::GlobalNamespace::OVRPlugin::set_eyeHeight)> {
  constexpr static std::size_t size = 0x60;
  constexpr static std::size_t addrs = 0x2756690;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_eyeHeight", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_batteryLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::get_batteryLevel)> {
  constexpr static std::size_t size = 0x50;
  constexpr static std::size_t addrs = 0x27566f0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_batteryLevel",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_batteryTemperature
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::get_batteryTemperature)> {
  constexpr static std::size_t size = 0x50;
  constexpr static std::size_t addrs = 0x2756740;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_batteryTemperature",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_suggestedCpuPerfLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel (*)()>(
    &::GlobalNamespace::OVRPlugin::get_suggestedCpuPerfLevel)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x2756790;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "get_suggestedCpuPerfLevel", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_suggestedCpuPerfLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel)>(
    &::GlobalNamespace::OVRPlugin::set_suggestedCpuPerfLevel)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x2756860;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_suggestedCpuPerfLevel", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_suggestedGpuPerfLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel (*)()>(
    &::GlobalNamespace::OVRPlugin::get_suggestedGpuPerfLevel)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x2756920;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "get_suggestedGpuPerfLevel", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_suggestedGpuPerfLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel)>(
    &::GlobalNamespace::OVRPlugin::set_suggestedGpuPerfLevel)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x27569f0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_suggestedGpuPerfLevel", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_cpuLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)()>(&::GlobalNamespace::OVRPlugin::get_cpuLevel)> {
  constexpr static std::size_t size = 0x50;
  constexpr static std::size_t addrs = 0x2756ab0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_cpuLevel",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_cpuLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int32_t)>(&::GlobalNamespace::OVRPlugin::set_cpuLevel)> {
  constexpr static std::size_t size = 0x58;
  constexpr static std::size_t addrs = 0x2756b00;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_cpuLevel", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_gpuLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)()>(&::GlobalNamespace::OVRPlugin::get_gpuLevel)> {
  constexpr static std::size_t size = 0x50;
  constexpr static std::size_t addrs = 0x2756b58;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_gpuLevel",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_gpuLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int32_t)>(&::GlobalNamespace::OVRPlugin::set_gpuLevel)> {
  constexpr static std::size_t size = 0x58;
  constexpr static std::size_t addrs = 0x2756ba8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_gpuLevel", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_vsyncCount
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)()>(&::GlobalNamespace::OVRPlugin::get_vsyncCount)> {
  constexpr static std::size_t size = 0x50;
  constexpr static std::size_t addrs = 0x2756c00;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_vsyncCount",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_vsyncCount
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int32_t)>(&::GlobalNamespace::OVRPlugin::set_vsyncCount)> {
  constexpr static std::size_t size = 0x58;
  constexpr static std::size_t addrs = 0x2756c50;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_vsyncCount", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_systemVolume
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::get_systemVolume)> {
  constexpr static std::size_t size = 0x50;
  constexpr static std::size_t addrs = 0x2756ca8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_systemVolume",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_ipd
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::get_ipd)> {
  constexpr static std::size_t size = 0x50;
  constexpr static std::size_t addrs = 0x2756cf8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_ipd",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_ipd
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float_t)>(&::GlobalNamespace::OVRPlugin::set_ipd)> {
  constexpr static std::size_t size = 0x60;
  constexpr static std::size_t addrs = 0x2756d48;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_ipd", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_occlusionMesh
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_occlusionMesh)> {
  constexpr static std::size_t size = 0x90;
  constexpr static std::size_t addrs = 0x2756da8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_occlusionMesh",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_occlusionMesh
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&::GlobalNamespace::OVRPlugin::set_occlusionMesh)> {
  constexpr static std::size_t size = 0xa4;
  constexpr static std::size_t addrs = 0x2756e38;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_occlusionMesh", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_batteryStatus
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__BatteryStatus (*)()>(&::GlobalNamespace::OVRPlugin::get_batteryStatus)> {
  constexpr static std::size_t size = 0x50;
  constexpr static std::size_t addrs = 0x2756edc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_batteryStatus",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetEyeFrustum
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Frustumf (*)(::GlobalNamespace::__OVRPlugin__Eye)>(
    &::GlobalNamespace::OVRPlugin::GetEyeFrustum)> {
  constexpr static std::size_t size = 0x58;
  constexpr static std::size_t addrs = 0x2756f2c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetEyeFrustum", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Eye>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetEyeTextureSize
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Sizei (*)(::GlobalNamespace::__OVRPlugin__Eye)>(
    &::GlobalNamespace::OVRPlugin::GetEyeTextureSize)> {
  constexpr static std::size_t size = 0x58;
  constexpr static std::size_t addrs = 0x2756f84;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetEyeTextureSize", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Eye>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetTrackerPose
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)(::GlobalNamespace::__OVRPlugin__Tracker)>(
    &::GlobalNamespace::OVRPlugin::GetTrackerPose)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2756fdc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetTrackerPose", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Tracker>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetTrackerFrustum
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Frustumf (*)(::GlobalNamespace::__OVRPlugin__Tracker)>(
    &::GlobalNamespace::OVRPlugin::GetTrackerFrustum)> {
  constexpr static std::size_t size = 0x58;
  constexpr static std::size_t addrs = 0x2757288;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetTrackerFrustum", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Tracker>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.ShowUI
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__PlatformUI)>(&::GlobalNamespace::OVRPlugin::ShowUI)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x27572e0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "ShowUI", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PlatformUI>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.EnqueueSubmitLayer
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(
    bool, bool, bool, void*, void*, int32_t, int32_t, ::GlobalNamespace::__OVRPlugin__Posef, ::GlobalNamespace::__OVRPlugin__Vector3f, int32_t, ::GlobalNamespace::__OVRPlugin__OverlayShape, bool,
    ::GlobalNamespace::__OVRPlugin__TextureRectMatrixf, bool, ::UnityEngine::Vector4, ::UnityEngine::Vector4, bool, bool, bool, bool, bool, bool, bool, bool)>(
    &::GlobalNamespace::OVRPlugin::EnqueueSubmitLayer)> {
  constexpr static std::size_t size = 0x568;
  constexpr static std::size_t addrs = 0x2757344;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "EnqueueSubmitLayer", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector3f>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__OverlayShape>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.CalculateLayerDesc
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<::GlobalNamespace::__OVRPlugin__LayerDesc (*)(::GlobalNamespace::__OVRPlugin__OverlayShape, ::GlobalNamespace::__OVRPlugin__LayerLayout, ::GlobalNamespace::__OVRPlugin__Sizei, int32_t,
                                                              int32_t, ::GlobalNamespace::__OVRPlugin__EyeTextureFormat, int32_t)>(&::GlobalNamespace::OVRPlugin::CalculateLayerDesc)> {
  constexpr static std::size_t size = 0x198;
  constexpr static std::size_t addrs = 0x27578ac;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "CalculateLayerDesc", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__OverlayShape>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerLayout>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Sizei>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.EnqueueSetupLayer
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__LayerDesc, int32_t, void*)>(
    &::GlobalNamespace::OVRPlugin::EnqueueSetupLayer)> {
  constexpr static std::size_t size = 0x208;
  constexpr static std::size_t addrs = 0x2757a44;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "EnqueueSetupLayer", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerDesc>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.EnqueueDestroyLayer
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(void*)>(&::GlobalNamespace::OVRPlugin::EnqueueDestroyLayer)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x2757c4c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "EnqueueDestroyLayer", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetLayerTexture
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void* (*)(int32_t, int32_t, ::GlobalNamespace::__OVRPlugin__Eye)>(&::GlobalNamespace::OVRPlugin::GetLayerTexture)> {
  constexpr static std::size_t size = 0x124;
  constexpr static std::size_t addrs = 0x2757d2c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetLayerTexture", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Eye>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetLayerTextureStageCount
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)(int32_t)>(&::GlobalNamespace::OVRPlugin::GetLayerTextureStageCount)> {
  constexpr static std::size_t size = 0xfc;
  constexpr static std::size_t addrs = 0x2757e50;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetLayerTextureStageCount", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetLayerAndroidSurfaceObject
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void* (*)(int32_t)>(&::GlobalNamespace::OVRPlugin::GetLayerAndroidSurfaceObject)> {
  constexpr static std::size_t size = 0x10c;
  constexpr static std::size_t addrs = 0x2757f4c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetLayerAndroidSurfaceObject",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.UpdateNodePhysicsPoses
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t, double_t)>(&::GlobalNamespace::OVRPlugin::UpdateNodePhysicsPoses)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x2758058;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "UpdateNodePhysicsPoses", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodePose
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)(::GlobalNamespace::__OVRPlugin__Node, ::GlobalNamespace::__OVRPlugin__Step)>(&::GlobalNamespace::OVRPlugin::GetNodePose)> {
  constexpr static std::size_t size = 0x228;
  constexpr static std::size_t addrs = 0x2757060;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodePose", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodeVelocity
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<::GlobalNamespace::__OVRPlugin__Vector3f (*)(::GlobalNamespace::__OVRPlugin__Node, ::GlobalNamespace::__OVRPlugin__Step)>(&::GlobalNamespace::OVRPlugin::GetNodeVelocity)> {
  constexpr static std::size_t size = 0x20c;
  constexpr static std::size_t addrs = 0x2758134;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodeVelocity", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodeAngularVelocity
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<::GlobalNamespace::__OVRPlugin__Vector3f (*)(::GlobalNamespace::__OVRPlugin__Node, ::GlobalNamespace::__OVRPlugin__Step)>(&::GlobalNamespace::OVRPlugin::GetNodeAngularVelocity)> {
  constexpr static std::size_t size = 0x150;
  constexpr static std::size_t addrs = 0x2758340;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodeAngularVelocity", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodeAcceleration
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<::GlobalNamespace::__OVRPlugin__Vector3f (*)(::GlobalNamespace::__OVRPlugin__Node, ::GlobalNamespace::__OVRPlugin__Step)>(&::GlobalNamespace::OVRPlugin::GetNodeAcceleration)> {
  constexpr static std::size_t size = 0x20c;
  constexpr static std::size_t addrs = 0x2758490;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodeAcceleration", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodeAngularAcceleration
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<::GlobalNamespace::__OVRPlugin__Vector3f (*)(::GlobalNamespace::__OVRPlugin__Node, ::GlobalNamespace::__OVRPlugin__Step)>(&::GlobalNamespace::OVRPlugin::GetNodeAngularAcceleration)> {
  constexpr static std::size_t size = 0x150;
  constexpr static std::size_t addrs = 0x275869c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodeAngularAcceleration", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodePresent
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::OVRPlugin::GetNodePresent)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x27587ec;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodePresent", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodeOrientationTracked
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::OVRPlugin::GetNodeOrientationTracked)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x2758850;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodeOrientationTracked", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodeOrientationValid
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::OVRPlugin::GetNodeOrientationValid)> {
  constexpr static std::size_t size = 0x104;
  constexpr static std::size_t addrs = 0x27588b4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodeOrientationValid", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodePositionTracked
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::OVRPlugin::GetNodePositionTracked)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x27589b8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodePositionTracked", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodePositionValid
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::OVRPlugin::GetNodePositionValid)> {
  constexpr static std::size_t size = 0x104;
  constexpr static std::size_t addrs = 0x2758a1c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodePositionValid", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodePoseStateRaw
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<::GlobalNamespace::__OVRPlugin__PoseStatef (*)(::GlobalNamespace::__OVRPlugin__Node, ::GlobalNamespace::__OVRPlugin__Step)>(&::GlobalNamespace::OVRPlugin::GetNodePoseStateRaw)> {
  constexpr static std::size_t size = 0x238;
  constexpr static std::size_t addrs = 0x2758b20;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodePoseStateRaw", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodePoseStateAtTime
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__PoseStatef (*)(double_t, ::GlobalNamespace::__OVRPlugin__Node)>(
    &::GlobalNamespace::OVRPlugin::GetNodePoseStateAtTime)> {
  constexpr static std::size_t size = 0x138;
  constexpr static std::size_t addrs = 0x2758d58;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodePoseStateAtTime", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodePoseStateImmediate
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__PoseStatef (*)(::GlobalNamespace::__OVRPlugin__Node)>(
    &::GlobalNamespace::OVRPlugin::GetNodePoseStateImmediate)> {
  constexpr static std::size_t size = 0x128;
  constexpr static std::size_t addrs = 0x2758e90;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodePoseStateImmediate", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.AreHandPosesGeneratedByControllerData
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Step, ::GlobalNamespace::__OVRPlugin__Node)>(
    &::GlobalNamespace::OVRPlugin::AreHandPosesGeneratedByControllerData)> {
  constexpr static std::size_t size = 0xf4;
  constexpr static std::size_t addrs = 0x2758fb8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "AreHandPosesGeneratedByControllerData", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetSimultaneousHandsAndControllersEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(bool)>(&::GlobalNamespace::OVRPlugin::SetSimultaneousHandsAndControllersEnabled)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x27590ac;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetSimultaneousHandsAndControllersEnabled",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetControllerIsInHand
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Step, ::GlobalNamespace::__OVRPlugin__Node)>(
    &::GlobalNamespace::OVRPlugin::GetControllerIsInHand)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x2759178;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetControllerIsInHand", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetCurrentTrackingTransformPose
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)()>(&::GlobalNamespace::OVRPlugin::GetCurrentTrackingTransformPose)> {
  constexpr static std::size_t size = 0x120;
  constexpr static std::size_t addrs = 0x2759268;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "GetCurrentTrackingTransformPose", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetTrackingTransformRawPose
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)()>(&::GlobalNamespace::OVRPlugin::GetTrackingTransformRawPose)> {
  constexpr static std::size_t size = 0x120;
  constexpr static std::size_t addrs = 0x2759388;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "GetTrackingTransformRawPose", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetTrackingTransformRelativePose
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)(::GlobalNamespace::__OVRPlugin__TrackingOrigin)>(
    &::GlobalNamespace::OVRPlugin::GetTrackingTransformRelativePose)> {
  constexpr static std::size_t size = 0x160;
  constexpr static std::size_t addrs = 0x27594a8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetTrackingTransformRelativePose", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetControllerState
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__ControllerState (*)(uint32_t)>(&::GlobalNamespace::OVRPlugin::GetControllerState)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2759608;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetControllerState", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetControllerState2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__ControllerState2 (*)(uint32_t)>(&::GlobalNamespace::OVRPlugin::GetControllerState2)> {
  constexpr static std::size_t size = 0x144;
  constexpr static std::size_t addrs = 0x275968c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetControllerState2", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetControllerState4
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__ControllerState4 (*)(uint32_t)>(&::GlobalNamespace::OVRPlugin::GetControllerState4)> {
  constexpr static std::size_t size = 0x15c;
  constexpr static std::size_t addrs = 0x27597d0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetControllerState4", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetControllerState5
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__ControllerState5 (*)(uint32_t)>(&::GlobalNamespace::OVRPlugin::GetControllerState5)> {
  constexpr static std::size_t size = 0x164;
  constexpr static std::size_t addrs = 0x275992c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetControllerState5", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetControllerState6
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__ControllerState6 (*)(uint32_t)>(&::GlobalNamespace::OVRPlugin::GetControllerState6)> {
  constexpr static std::size_t size = 0x168;
  constexpr static std::size_t addrs = 0x2759a90;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetControllerState6", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetCurrentInteractionProfile
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__InteractionProfile (*)(::GlobalNamespace::__OVRPlugin__Hand)>(
    &::GlobalNamespace::OVRPlugin::GetCurrentInteractionProfile)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x2759bf8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetCurrentInteractionProfile", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetCurrentDetachedInteractionProfile
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__InteractionProfile (*)(::GlobalNamespace::__OVRPlugin__Hand)>(
    &::GlobalNamespace::OVRPlugin::GetCurrentDetachedInteractionProfile)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x2759ccc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetCurrentDetachedInteractionProfile", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetControllerVibration
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint32_t, float_t, float_t)>(&::GlobalNamespace::OVRPlugin::SetControllerVibration)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2759da0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetControllerVibration", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetControllerLocalizedVibration
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Controller, ::GlobalNamespace::__OVRPlugin__HapticsLocation, float_t,
                                                                                           float_t)>(&::GlobalNamespace::OVRPlugin::SetControllerLocalizedVibration)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x2759e1c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetControllerLocalizedVibration", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsLocation>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetControllerHapticsAmplitudeEnvelope
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(
    ::GlobalNamespace::__OVRPlugin__Controller, ::GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration)>(&::GlobalNamespace::OVRPlugin::SetControllerHapticsAmplitudeEnvelope)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x2759f0c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetControllerHapticsAmplitudeEnvelope", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetControllerHapticsPcm
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Controller, ::GlobalNamespace::__OVRPlugin__HapticsPcmVibration)>(
    &::GlobalNamespace::OVRPlugin::SetControllerHapticsPcm)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x2759fec;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetControllerHapticsPcm", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsPcmVibration>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetControllerSampleRateHz
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Controller, ByRef<float_t>)>(
    &::GlobalNamespace::OVRPlugin::GetControllerSampleRateHz)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x275a0dc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetControllerSampleRateHz", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetControllerHapticsDesc
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__HapticsDesc (*)(uint32_t)>(&::GlobalNamespace::OVRPlugin::GetControllerHapticsDesc)> {
  constexpr static std::size_t size = 0xec;
  constexpr static std::size_t addrs = 0x275a1b8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetControllerHapticsDesc", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetControllerHapticsState
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__HapticsState (*)(uint32_t)>(
    &::GlobalNamespace::OVRPlugin::GetControllerHapticsState)> {
  constexpr static std::size_t size = 0xc4;
  constexpr static std::size_t addrs = 0x275a2a4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetControllerHapticsState", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetControllerHaptics
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint32_t, ::GlobalNamespace::__OVRPlugin__HapticsBuffer)>(
    &::GlobalNamespace::OVRPlugin::SetControllerHaptics)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x275a368;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetControllerHaptics", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsBuffer>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetEyeRecommendedResolutionScale
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::GetEyeRecommendedResolutionScale)> {
  constexpr static std::size_t size = 0xbc;
  constexpr static std::size_t addrs = 0x275a448;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "GetEyeRecommendedResolutionScale", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetAppCpuStartToGpuEndTime
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::GetAppCpuStartToGpuEndTime)> {
  constexpr static std::size_t size = 0xbc;
  constexpr static std::size_t addrs = 0x275a504;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "GetAppCpuStartToGpuEndTime", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetBoundaryConfigured
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::GetBoundaryConfigured)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x275a5c0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetBoundaryConfigured",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.TestBoundaryNode
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__BoundaryTestResult (*)(
    ::GlobalNamespace::__OVRPlugin__Node, ::GlobalNamespace::__OVRPlugin__BoundaryType)>(&::GlobalNamespace::OVRPlugin::TestBoundaryNode)> {
  constexpr static std::size_t size = 0xec;
  constexpr static std::size_t addrs = 0x275a680;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "TestBoundaryNode", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.TestBoundaryPoint
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__BoundaryTestResult (*)(
    ::GlobalNamespace::__OVRPlugin__Vector3f, ::GlobalNamespace::__OVRPlugin__BoundaryType)>(&::GlobalNamespace::OVRPlugin::TestBoundaryPoint)> {
  constexpr static std::size_t size = 0x10c;
  constexpr static std::size_t addrs = 0x275a76c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "TestBoundaryPoint", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector3f>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetBoundaryGeometry
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__BoundaryGeometry (*)(::GlobalNamespace::__OVRPlugin__BoundaryType)>(
    &::GlobalNamespace::OVRPlugin::GetBoundaryGeometry)> {
  constexpr static std::size_t size = 0xec;
  constexpr static std::size_t addrs = 0x275a878;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetBoundaryGeometry", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetBoundaryGeometry2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__BoundaryType, void*, ByRef<int32_t>)>(
    &::GlobalNamespace::OVRPlugin::GetBoundaryGeometry2)> {
  constexpr static std::size_t size = 0xe4;
  constexpr static std::size_t addrs = 0x275a964;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetBoundaryGeometry2", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetAppPerfStats
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__AppPerfStats (*)()>(&::GlobalNamespace::OVRPlugin::GetAppPerfStats)> {
  constexpr static std::size_t size = 0x178;
  constexpr static std::size_t addrs = 0x275aa48;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetAppPerfStats",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.ResetAppPerfStats
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::ResetAppPerfStats)> {
  constexpr static std::size_t size = 0x164;
  constexpr static std::size_t addrs = 0x275abc0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "ResetAppPerfStats",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetAppFramerate
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::GetAppFramerate)> {
  constexpr static std::size_t size = 0xbc;
  constexpr static std::size_t addrs = 0x275ad24;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetAppFramerate",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetHandNodePoseStateLatency
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(double_t)>(&::GlobalNamespace::OVRPlugin::SetHandNodePoseStateLatency)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x275ade0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetHandNodePoseStateLatency",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetHandNodePoseStateLatency
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double_t (*)()>(&::GlobalNamespace::OVRPlugin::GetHandNodePoseStateLatency)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x275aeb0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "GetHandNodePoseStateLatency", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetControllerDrivenHandPoses
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(bool)>(&::GlobalNamespace::OVRPlugin::SetControllerDrivenHandPoses)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x275af80;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetControllerDrivenHandPoses",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetControllerDrivenHandPosesAreNatural
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(bool)>(&::GlobalNamespace::OVRPlugin::SetControllerDrivenHandPosesAreNatural)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x275b04c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetControllerDrivenHandPosesAreNatural",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsControllerDrivenHandPosesEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::IsControllerDrivenHandPosesEnabled)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x275b118;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "IsControllerDrivenHandPosesEnabled", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.AreControllerDrivenHandPosesNatural
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::AreControllerDrivenHandPosesNatural)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x275b1ec;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "AreControllerDrivenHandPosesNatural", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetDesiredEyeTextureFormat
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__EyeTextureFormat (*)()>(&::GlobalNamespace::OVRPlugin::GetDesiredEyeTextureFormat)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x275b2c0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "GetDesiredEyeTextureFormat", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetDesiredEyeTextureFormat
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__EyeTextureFormat)>(
    &::GlobalNamespace::OVRPlugin::SetDesiredEyeTextureFormat)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x275b380;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetDesiredEyeTextureFormat", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.InitializeMixedReality
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::InitializeMixedReality)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x275b448;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "InitializeMixedReality",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.ShutdownMixedReality
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::ShutdownMixedReality)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x275b51c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "ShutdownMixedReality",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsMixedRealityInitialized
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::IsMixedRealityInitialized)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x275b5f0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "IsMixedRealityInitialized", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetExternalCameraCount
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)()>(&::GlobalNamespace::OVRPlugin::GetExternalCameraCount)> {
  constexpr static std::size_t size = 0xe4;
  constexpr static std::size_t addrs = 0x275b6c4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetExternalCameraCount",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.UpdateExternalCamera
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::UpdateExternalCamera)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x275b7a8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "UpdateExternalCamera",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetMixedRealityCameraInfo
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(
    int32_t, ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>, ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>)>(&::GlobalNamespace::OVRPlugin::GetMixedRealityCameraInfo)> {
  constexpr static std::size_t size = 0x134;
  constexpr static std::size_t addrs = 0x275b87c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetMixedRealityCameraInfo", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.OverrideExternalCameraFov
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t, bool, ::GlobalNamespace::__OVRPlugin__Fovf)>(
    &::GlobalNamespace::OVRPlugin::OverrideExternalCameraFov)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x275b9b0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "OverrideExternalCameraFov", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Fovf>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetUseOverriddenExternalCameraFov
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t)>(&::GlobalNamespace::OVRPlugin::GetUseOverriddenExternalCameraFov)> {
  constexpr static std::size_t size = 0xec;
  constexpr static std::size_t addrs = 0x275baa0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetUseOverriddenExternalCameraFov",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.OverrideExternalCameraStaticPose
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t, bool, ::GlobalNamespace::__OVRPlugin__Posef)>(
    &::GlobalNamespace::OVRPlugin::OverrideExternalCameraStaticPose)> {
  constexpr static std::size_t size = 0xe4;
  constexpr static std::size_t addrs = 0x275bb8c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "OverrideExternalCameraStaticPose", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetUseOverriddenExternalCameraStaticPose
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t)>(&::GlobalNamespace::OVRPlugin::GetUseOverriddenExternalCameraStaticPose)> {
  constexpr static std::size_t size = 0xec;
  constexpr static std::size_t addrs = 0x275bc70;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetUseOverriddenExternalCameraStaticPose",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.ResetDefaultExternalCamera
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::ResetDefaultExternalCamera)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x275bd5c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "ResetDefaultExternalCamera", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetDefaultExternalCamera
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(
    ::StringW, ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>, ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>)>(&::GlobalNamespace::OVRPlugin::SetDefaultExternalCamera)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x275be1c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetDefaultExternalCamera", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetExternalCameraProperties
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(
    ::StringW, ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>, ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>)>(&::GlobalNamespace::OVRPlugin::SetExternalCameraProperties)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x275befc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetExternalCameraProperties", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetMultimodalHandsControllersSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(bool)>(&::GlobalNamespace::OVRPlugin::SetMultimodalHandsControllersSupported)> {
  constexpr static std::size_t size = 0xe4;
  constexpr static std::size_t addrs = 0x275bfdc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetMultimodalHandsControllersSupported",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsMultimodalHandsControllersSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::IsMultimodalHandsControllersSupported)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x275c0c0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "IsMultimodalHandsControllersSupported", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsInsightPassthroughSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::IsInsightPassthroughSupported)> {
  constexpr static std::size_t size = 0x16c;
  constexpr static std::size_t addrs = 0x275c194;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "IsInsightPassthroughSupported", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.InitializeInsightPassthrough
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::InitializeInsightPassthrough)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x275c300;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "InitializeInsightPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.ShutdownInsightPassthrough
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::ShutdownInsightPassthrough)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x275c3c0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "ShutdownInsightPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsInsightPassthroughInitialized
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::IsInsightPassthroughInitialized)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x275c480;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "IsInsightPassthroughInitialized", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetInsightPassthroughInitializationState
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(
    &::GlobalNamespace::OVRPlugin::GetInsightPassthroughInitializationState)> {
  constexpr static std::size_t size = 0xbc;
  constexpr static std::size_t addrs = 0x275c540;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "GetInsightPassthroughInitializationState", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.CreateInsightTriangleMesh
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(
    int32_t, ::ArrayW<::UnityEngine::Vector3, ::Array<::UnityEngine::Vector3>*>, ::ArrayW<int32_t, ::Array<int32_t>*>, ByRef<uint64_t>)>(&::GlobalNamespace::OVRPlugin::CreateInsightTriangleMesh)> {
  constexpr static std::size_t size = 0x1a8;
  constexpr static std::size_t addrs = 0x27504d8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "CreateInsightTriangleMesh", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<::UnityEngine::Vector3, ::Array<::UnityEngine::Vector3>*>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<int32_t, ::Array<int32_t>*>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.DestroyInsightTriangleMesh
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t)>(&::GlobalNamespace::OVRPlugin::DestroyInsightTriangleMesh)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x274eca8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "DestroyInsightTriangleMesh",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.AddInsightPassthroughSurfaceGeometry
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t, uint64_t, ::UnityEngine::Matrix4x4, ByRef<uint64_t>)>(
    &::GlobalNamespace::OVRPlugin::AddInsightPassthroughSurfaceGeometry)> {
  constexpr static std::size_t size = 0x124;
  constexpr static std::size_t addrs = 0x2750680;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "AddInsightPassthroughSurfaceGeometry", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Matrix4x4>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.DestroyInsightPassthroughGeometryInstance
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t)>(&::GlobalNamespace::OVRPlugin::DestroyInsightPassthroughGeometryInstance)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x274ebe0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "DestroyInsightPassthroughGeometryInstance",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.UpdateInsightPassthroughGeometryTransform
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::UnityEngine::Matrix4x4)>(
    &::GlobalNamespace::OVRPlugin::UpdateInsightPassthroughGeometryTransform)> {
  constexpr static std::size_t size = 0x108;
  constexpr static std::size_t addrs = 0x2750ef8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "UpdateInsightPassthroughGeometryTransform", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Matrix4x4>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetInsightPassthroughStyle
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t, ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2)>(
    &::GlobalNamespace::OVRPlugin::SetInsightPassthroughStyle)> {
  constexpr static std::size_t size = 0x214;
  constexpr static std::size_t addrs = 0x27517a8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetInsightPassthroughStyle", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetInsightPassthroughStyle
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t, ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle)>(
    &::GlobalNamespace::OVRPlugin::SetInsightPassthroughStyle)> {
  constexpr static std::size_t size = 0x118;
  constexpr static std::size_t addrs = 0x275c5fc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetInsightPassthroughStyle", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.CreatePassthroughColorLut
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels, uint32_t, ::GlobalNamespace::__OVRPlugin__PassthroughColorLutData, ByRef<uint64_t>)>(
        &::GlobalNamespace::OVRPlugin::CreatePassthroughColorLut)> {
  constexpr static std::size_t size = 0x120;
  constexpr static std::size_t addrs = 0x275c714;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "CreatePassthroughColorLut", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutData>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.DestroyPassthroughColorLut
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t)>(&::GlobalNamespace::OVRPlugin::DestroyPassthroughColorLut)> {
  constexpr static std::size_t size = 0xe8;
  constexpr static std::size_t addrs = 0x275c834;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "DestroyPassthroughColorLut",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.UpdatePassthroughColorLut
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::GlobalNamespace::__OVRPlugin__PassthroughColorLutData)>(
    &::GlobalNamespace::OVRPlugin::UpdatePassthroughColorLut)> {
  constexpr static std::size_t size = 0x100;
  constexpr static std::size_t addrs = 0x275c91c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "UpdatePassthroughColorLut", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutData>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetInsightPassthroughKeyboardHandsIntensity
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t, ::GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity)>(
    &::GlobalNamespace::OVRPlugin::SetInsightPassthroughKeyboardHandsIntensity)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x275ca1c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetInsightPassthroughKeyboardHandsIntensity", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetPassthroughCapabilityFlags
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags (*)()>(
    &::GlobalNamespace::OVRPlugin::GetPassthroughCapabilityFlags)> {
  constexpr static std::size_t size = 0x1b4;
  constexpr static std::size_t addrs = 0x275cafc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "GetPassthroughCapabilityFlags", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetPassthroughCapabilities
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilities>)>(
    &::GlobalNamespace::OVRPlugin::GetPassthroughCapabilities)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x275ccb0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetPassthroughCapabilities", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilities>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetBoundaryDimensions
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Vector3f (*)(::GlobalNamespace::__OVRPlugin__BoundaryType)>(
    &::GlobalNamespace::OVRPlugin::GetBoundaryDimensions)> {
  constexpr static std::size_t size = 0xc4;
  constexpr static std::size_t addrs = 0x275cd7c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetBoundaryDimensions", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetBoundaryVisible
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::GetBoundaryVisible)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x275ce40;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetBoundaryVisible",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetBoundaryVisible
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(bool)>(&::GlobalNamespace::OVRPlugin::SetBoundaryVisible)> {
  constexpr static std::size_t size = 0xe4;
  constexpr static std::size_t addrs = 0x275cf00;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetBoundaryVisible", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSystemHeadsetType
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__SystemHeadset (*)()>(&::GlobalNamespace::OVRPlugin::GetSystemHeadsetType)> {
  constexpr static std::size_t size = 0xbc;
  constexpr static std::size_t addrs = 0x275cfe4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSystemHeadsetType",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetActiveController
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Controller (*)()>(&::GlobalNamespace::OVRPlugin::GetActiveController)> {
  constexpr static std::size_t size = 0xbc;
  constexpr static std::size_t addrs = 0x275d0a0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetActiveController",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetConnectedControllers
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Controller (*)()>(&::GlobalNamespace::OVRPlugin::GetConnectedControllers)> {
  constexpr static std::size_t size = 0xbc;
  constexpr static std::size_t addrs = 0x275d15c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetConnectedControllers",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.ToBool
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(bool)>(&::GlobalNamespace::OVRPlugin::ToBool)> {
  constexpr static std::size_t size = 0x8;
  constexpr static std::size_t addrs = 0x27551b8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "ToBool", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetTrackingOriginType
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__TrackingOrigin (*)()>(&::GlobalNamespace::OVRPlugin::GetTrackingOriginType)> {
  constexpr static std::size_t size = 0x50;
  constexpr static std::size_t addrs = 0x275d218;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetTrackingOriginType",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetTrackingOriginType
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__TrackingOrigin)>(&::GlobalNamespace::OVRPlugin::SetTrackingOriginType)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x275d268;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetTrackingOriginType", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetTrackingCalibratedOrigin
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)()>(&::GlobalNamespace::OVRPlugin::GetTrackingCalibratedOrigin)> {
  constexpr static std::size_t size = 0x74;
  constexpr static std::size_t addrs = 0x275d2cc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "GetTrackingCalibratedOrigin", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetTrackingCalibratedOrigin
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::SetTrackingCalibratedOrigin)> {
  constexpr static std::size_t size = 0x5c;
  constexpr static std::size_t addrs = 0x275d340;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "SetTrackingCalibratedOrigin", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.RecenterTrackingOrigin
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__RecenterFlags)>(&::GlobalNamespace::OVRPlugin::RecenterTrackingOrigin)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x275d39c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "RecenterTrackingOrigin", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__RecenterFlags>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_foveatedRenderingSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_foveatedRenderingSupported)> {
  constexpr static std::size_t size = 0x74;
  constexpr static std::size_t addrs = 0x275d400;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "get_foveatedRenderingSupported", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_eyeTrackedFoveatedRenderingSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_eyeTrackedFoveatedRenderingSupported)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x275d544;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "get_eyeTrackedFoveatedRenderingSupported", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_eyeTrackedFoveatedRenderingEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_eyeTrackedFoveatedRenderingEnabled)> {
  constexpr static std::size_t size = 0xec;
  constexpr static std::size_t addrs = 0x275d610;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "get_eyeTrackedFoveatedRenderingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_eyeTrackedFoveatedRenderingEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&::GlobalNamespace::OVRPlugin::set_eyeTrackedFoveatedRenderingEnabled)> {
  constexpr static std::size_t size = 0xe8;
  constexpr static std::size_t addrs = 0x275d6fc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_eyeTrackedFoveatedRenderingEnabled",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_fixedFoveatedRenderingSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_fixedFoveatedRenderingSupported)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x275d474;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "get_fixedFoveatedRenderingSupported", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_foveatedRenderingLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel (*)()>(
    &::GlobalNamespace::OVRPlugin::get_foveatedRenderingLevel)> {
  constexpr static std::size_t size = 0xe4;
  constexpr static std::size_t addrs = 0x275d7e4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "get_foveatedRenderingLevel", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_foveatedRenderingLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel)>(
    &::GlobalNamespace::OVRPlugin::set_foveatedRenderingLevel)> {
  constexpr static std::size_t size = 0xe4;
  constexpr static std::size_t addrs = 0x275d8c8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_foveatedRenderingLevel", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_fixedFoveatedRenderingLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel (*)()>(
    &::GlobalNamespace::OVRPlugin::get_fixedFoveatedRenderingLevel)> {
  constexpr static std::size_t size = 0x4c;
  constexpr static std::size_t addrs = 0x275d9ac;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "get_fixedFoveatedRenderingLevel", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_fixedFoveatedRenderingLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel)>(
    &::GlobalNamespace::OVRPlugin::set_fixedFoveatedRenderingLevel)> {
  constexpr static std::size_t size = 0x54;
  constexpr static std::size_t addrs = 0x275d9f8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_fixedFoveatedRenderingLevel", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_useDynamicFoveatedRendering
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_useDynamicFoveatedRendering)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x275da4c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "get_useDynamicFoveatedRendering", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_useDynamicFoveatedRendering
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&::GlobalNamespace::OVRPlugin::set_useDynamicFoveatedRendering)> {
  constexpr static std::size_t size = 0xe8;
  constexpr static std::size_t addrs = 0x275db3c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_useDynamicFoveatedRendering",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_useDynamicFixedFoveatedRendering
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_useDynamicFixedFoveatedRendering)> {
  constexpr static std::size_t size = 0x4c;
  constexpr static std::size_t addrs = 0x275dc24;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "get_useDynamicFixedFoveatedRendering", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_useDynamicFixedFoveatedRendering
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&::GlobalNamespace::OVRPlugin::set_useDynamicFixedFoveatedRendering)> {
  constexpr static std::size_t size = 0x54;
  constexpr static std::size_t addrs = 0x275dc70;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_useDynamicFixedFoveatedRendering",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_tiledMultiResSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_tiledMultiResSupported)> {
  constexpr static std::size_t size = 0x4c;
  constexpr static std::size_t addrs = 0x275dcc4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "get_tiledMultiResSupported", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_tiledMultiResLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__TiledMultiResLevel (*)()>(&::GlobalNamespace::OVRPlugin::get_tiledMultiResLevel)> {
  constexpr static std::size_t size = 0x4c;
  constexpr static std::size_t addrs = 0x275dd10;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_tiledMultiResLevel",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_tiledMultiResLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::__OVRPlugin__TiledMultiResLevel)>(
    &::GlobalNamespace::OVRPlugin::set_tiledMultiResLevel)> {
  constexpr static std::size_t size = 0x54;
  constexpr static std::size_t addrs = 0x275dd5c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_tiledMultiResLevel", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TiledMultiResLevel>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_gpuUtilSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_gpuUtilSupported)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x275ddb0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_gpuUtilSupported",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_gpuUtilLevel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::get_gpuUtilLevel)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x275de80;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_gpuUtilLevel",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_systemDisplayFrequenciesAvailable
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<float_t, ::Array<float_t>*> (*)()>(&::GlobalNamespace::OVRPlugin::get_systemDisplayFrequenciesAvailable)> {
  constexpr static std::size_t size = 0x2a4;
  constexpr static std::size_t addrs = 0x275df70;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "get_systemDisplayFrequenciesAvailable", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_systemDisplayFrequency
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::get_systemDisplayFrequency)> {
  constexpr static std::size_t size = 0x14c;
  constexpr static std::size_t addrs = 0x275e214;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "get_systemDisplayFrequency", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_systemDisplayFrequency
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float_t)>(&::GlobalNamespace::OVRPlugin::set_systemDisplayFrequency)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x275e360;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_systemDisplayFrequency",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_eyeFovPremultipliedAlphaModeEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_eyeFovPremultipliedAlphaModeEnabled)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x275e42c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "get_eyeFovPremultipliedAlphaModeEnabled", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_eyeFovPremultipliedAlphaModeEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&::GlobalNamespace::OVRPlugin::set_eyeFovPremultipliedAlphaModeEnabled)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x275e4fc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_eyeFovPremultipliedAlphaModeEnabled",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodeFrustum2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Node, ByRef<::GlobalNamespace::__OVRPlugin__Frustumf2>)>(
    &::GlobalNamespace::OVRPlugin::GetNodeFrustum2)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x275e5dc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodeFrustum2", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Frustumf2>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_AsymmetricFovEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_AsymmetricFovEnabled)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x275e6bc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_AsymmetricFovEnabled",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_EyeTextureArrayEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_EyeTextureArrayEnabled)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x275e790;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "get_EyeTextureArrayEnabled", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_localDimmingSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_localDimmingSupported)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x275e850;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "get_localDimmingSupported", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_localDimming
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_localDimming)> {
  constexpr static std::size_t size = 0xf4;
  constexpr static std::size_t addrs = 0x275e924;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_localDimming",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_localDimming
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&::GlobalNamespace::OVRPlugin::set_localDimming)> {
  constexpr static std::size_t size = 0xe8;
  constexpr static std::size_t addrs = 0x275ea18;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_localDimming", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetDominantHand
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Handedness (*)()>(&::GlobalNamespace::OVRPlugin::GetDominantHand)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x275eb00;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetDominantHand",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SendEvent
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::StringW, ::StringW)>(&::GlobalNamespace::OVRPlugin::SendEvent)> {
  constexpr static std::size_t size = 0x194;
  constexpr static std::size_t addrs = 0x275ebcc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SendEvent", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetHeadPoseModifier
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::GlobalNamespace::__OVRPlugin__Quatf>, ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>)>(
    &::GlobalNamespace::OVRPlugin::SetHeadPoseModifier)> {
  constexpr static std::size_t size = 0xd8;
  constexpr static std::size_t addrs = 0x275ed60;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetHeadPoseModifier", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Quatf>>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetHeadPoseModifier
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::GlobalNamespace::__OVRPlugin__Quatf>, ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>)>(
    &::GlobalNamespace::OVRPlugin::GetHeadPoseModifier)> {
  constexpr static std::size_t size = 0x14c;
  constexpr static std::size_t addrs = 0x275ee38;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetHeadPoseModifier", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Quatf>>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsPerfMetricsSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__PerfMetrics)>(&::GlobalNamespace::OVRPlugin::IsPerfMetricsSupported)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x275ef84;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "IsPerfMetricsSupported", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetPerfMetricsFloat
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<float_t> (*)(::GlobalNamespace::__OVRPlugin__PerfMetrics)>(
    &::GlobalNamespace::OVRPlugin::GetPerfMetricsFloat)> {
  constexpr static std::size_t size = 0x104;
  constexpr static std::size_t addrs = 0x275f064;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetPerfMetricsFloat", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetPerfMetricsInt
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<int32_t> (*)(::GlobalNamespace::__OVRPlugin__PerfMetrics)>(
    &::GlobalNamespace::OVRPlugin::GetPerfMetricsInt)> {
  constexpr static std::size_t size = 0x104;
  constexpr static std::size_t addrs = 0x275f168;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetPerfMetricsInt", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetTimeInSeconds
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double_t (*)()>(&::GlobalNamespace::OVRPlugin::GetTimeInSeconds)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x275f26c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetTimeInSeconds",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetColorScaleAndOffset
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Vector4, ::UnityEngine::Vector4, bool)>(
    &::GlobalNamespace::OVRPlugin::SetColorScaleAndOffset)> {
  constexpr static std::size_t size = 0x164;
  constexpr static std::size_t addrs = 0x275f338;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetColorScaleAndOffset", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.AddCustomMetadata
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::StringW)>(&::GlobalNamespace::OVRPlugin::AddCustomMetadata)> {
  constexpr static std::size_t size = 0xd8;
  constexpr static std::size_t addrs = 0x275f49c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "AddCustomMetadata", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetDeveloperMode
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Bool)>(&::GlobalNamespace::OVRPlugin::SetDeveloperMode)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x275f574;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetDeveloperMode", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetAdaptiveGPUPerformanceScale
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::GetAdaptiveGPUPerformanceScale)> {
  constexpr static std::size_t size = 0xd8;
  constexpr static std::size_t addrs = 0x275f63c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "GetAdaptiveGPUPerformanceScale", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetHandTrackingEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::GetHandTrackingEnabled)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x275f714;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetHandTrackingEnabled",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetHandState
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Step, ::GlobalNamespace::__OVRPlugin__Hand, ByRef<::GlobalNamespace::__OVRPlugin__HandState>)>(&::GlobalNamespace::OVRPlugin::GetHandState)> {
  constexpr static std::size_t size = 0x6a4;
  constexpr static std::size_t addrs = 0x275f7e8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetHandState", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__HandState>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsValidBone
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__BoneId, ::GlobalNamespace::__OVRPlugin__SkeletonType)>(
    &::GlobalNamespace::OVRPlugin::IsValidBone)> {
  constexpr static std::size_t size = 0x28;
  constexpr static std::size_t addrs = 0x275fe8c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "IsValidBone", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoneId>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SkeletonType>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSkeleton
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__SkeletonType, ByRef<::GlobalNamespace::__OVRPlugin__Skeleton>)>(
    &::GlobalNamespace::OVRPlugin::GetSkeleton)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x275feb4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSkeleton", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SkeletonType>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Skeleton>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSkeleton2
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__SkeletonType, ByRef<::GlobalNamespace::__OVRPlugin__Skeleton2>)>(
    &::GlobalNamespace::OVRPlugin::GetSkeleton2)> {
  constexpr static std::size_t size = 0x2310;
  constexpr static std::size_t addrs = 0x275ff94;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSkeleton2", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SkeletonType>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Skeleton2>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_bodyTrackingSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_bodyTrackingSupported)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x2753308;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "get_bodyTrackingSupported", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_bodyTrackingEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_bodyTrackingEnabled)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x27622a4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_bodyTrackingEnabled",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetBodyState
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Step, ByRef<::GlobalNamespace::__OVRPlugin__BodyState>)>(
    &::GlobalNamespace::OVRPlugin::GetBodyState)> {
  constexpr static std::size_t size = 0x221c;
  constexpr static std::size_t addrs = 0x2762374;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetBodyState", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__BodyState>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetMesh
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__MeshType, ByRef<::GlobalNamespace::__OVRPlugin__Mesh*>)>(
    &::GlobalNamespace::OVRPlugin::GetMesh)> {
  constexpr static std::size_t size = 0x1cc;
  constexpr static std::size_t addrs = 0x2764590;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetMesh", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__MeshType>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Mesh*>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.StartKeyboardTracking
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t)>(&::GlobalNamespace::OVRPlugin::StartKeyboardTracking)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276475c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "StartKeyboardTracking", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.StopKeyboardTracking
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::StopKeyboardTracking)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x2764824;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "StopKeyboardTracking",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetKeyboardState
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Step, ByRef<::GlobalNamespace::__OVRPlugin__KeyboardState>)>(
    &::GlobalNamespace::OVRPlugin::GetKeyboardState)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x27648e4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetKeyboardState", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__KeyboardState>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSystemKeyboardDescription
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(
    ::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags, ByRef<::GlobalNamespace::__OVRPlugin__KeyboardDescription>)>(&::GlobalNamespace::OVRPlugin::GetSystemKeyboardDescription)> {
  constexpr static std::size_t size = 0xe4;
  constexpr static std::size_t addrs = 0x27649d4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSystemKeyboardDescription", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__KeyboardDescription>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.CreateVirtualKeyboard
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__VirtualKeyboardCreateInfo)>(
    &::GlobalNamespace::OVRPlugin::CreateVirtualKeyboard)> {
  constexpr static std::size_t size = 0xbc;
  constexpr static std::size_t addrs = 0x2764ab8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "CreateVirtualKeyboard", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardCreateInfo>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.DestroyVirtualKeyboard
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::OVRPlugin::DestroyVirtualKeyboard)> {
  constexpr static std::size_t size = 0xbc;
  constexpr static std::size_t addrs = 0x2764b74;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "DestroyVirtualKeyboard",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SendVirtualKeyboardInput
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo, ByRef<::GlobalNamespace::__OVRPlugin__Posef>)>(&::GlobalNamespace::OVRPlugin::SendVirtualKeyboardInput)> {
  constexpr static std::size_t size = 0xf8;
  constexpr static std::size_t addrs = 0x2764c30;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SendVirtualKeyboardInput", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.ChangeVirtualKeyboardTextContext
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::StringW)>(
    &::GlobalNamespace::OVRPlugin::ChangeVirtualKeyboardTextContext)> {
  constexpr static std::size_t size = 0xc4;
  constexpr static std::size_t addrs = 0x2764d28;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "ChangeVirtualKeyboardTextContext",
                                                 std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.CreateVirtualKeyboardSpace
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo, ByRef<uint64_t>)>(&::GlobalNamespace::OVRPlugin::CreateVirtualKeyboardSpace)> {
  constexpr static std::size_t size = 0xec;
  constexpr static std::size_t addrs = 0x2764dec;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "CreateVirtualKeyboardSpace", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SuggestVirtualKeyboardLocation
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo)>(
    &::GlobalNamespace::OVRPlugin::SuggestVirtualKeyboardLocation)> {
  constexpr static std::size_t size = 0xe8;
  constexpr static std::size_t addrs = 0x2764ed8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SuggestVirtualKeyboardLocation", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetVirtualKeyboardScale
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<float_t>)>(&::GlobalNamespace::OVRPlugin::GetVirtualKeyboardScale)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x2764fc0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetVirtualKeyboardScale", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetVirtualKeyboardModelAnimationStates
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStates>)>(&::GlobalNamespace::OVRPlugin::GetVirtualKeyboardModelAnimationStates)> {
  constexpr static std::size_t size = 0x494;
  constexpr static std::size_t addrs = 0x2765088;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetVirtualKeyboardModelAnimationStates", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStates>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetVirtualKeyboardDirtyTextures
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIds>)>(
    &::GlobalNamespace::OVRPlugin::GetVirtualKeyboardDirtyTextures)> {
  constexpr static std::size_t size = 0x2dc;
  constexpr static std::size_t addrs = 0x276551c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetVirtualKeyboardDirtyTextures", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIds>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetVirtualKeyboardTextureData
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    uint64_t, ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData>)>(&::GlobalNamespace::OVRPlugin::GetVirtualKeyboardTextureData)> {
  constexpr static std::size_t size = 0xd8;
  constexpr static std::size_t addrs = 0x27657f8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetVirtualKeyboardTextureData", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetVirtualKeyboardModelVisibility
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility>)>(
    &::GlobalNamespace::OVRPlugin::SetVirtualKeyboardModelVisibility)> {
  constexpr static std::size_t size = 0xc4;
  constexpr static std::size_t addrs = 0x27658d0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetVirtualKeyboardModelVisibility", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_faceTrackingEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_faceTrackingEnabled)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x2765994;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_faceTrackingEnabled",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_faceTrackingSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_faceTrackingSupported)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x2753238;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "get_faceTrackingSupported", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetFaceStateInternal
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Step, int32_t, ByRef<::GlobalNamespace::__OVRPlugin__FaceState>)>(
    &::GlobalNamespace::OVRPlugin::GetFaceStateInternal)> {
  constexpr static std::size_t size = 0x57c;
  constexpr static std::size_t addrs = 0x2765a64;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetFaceStateInternal", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__FaceState>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetFaceState
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Step, int32_t, ByRef<::GlobalNamespace::__OVRPlugin__FaceState>)>(
    &::GlobalNamespace::OVRPlugin::GetFaceState)> {
  constexpr static std::size_t size = 0x150;
  constexpr static std::size_t addrs = 0x2765fe0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetFaceState", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__FaceState>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_eyeTrackingEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_eyeTrackingEnabled)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x2766130;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_eyeTrackingEnabled",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_eyeTrackingSupported
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_eyeTrackingSupported)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x27533d8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_eyeTrackingSupported",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetEyeGazesState
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Step, int32_t, ByRef<::GlobalNamespace::__OVRPlugin__EyeGazesState>)>(
    &::GlobalNamespace::OVRPlugin::GetEyeGazesState)> {
  constexpr static std::size_t size = 0x274;
  constexpr static std::size_t addrs = 0x2766200;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetEyeGazesState", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__EyeGazesState>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.StartEyeTracking
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::StartEyeTracking)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x2766474;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "StartEyeTracking",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.StopEyeTracking
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::StopEyeTracking)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x2766534;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "StopEyeTracking",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.StartFaceTracking
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::StartFaceTracking)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x27665f4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "StartFaceTracking",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.StopFaceTracking
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::StopFaceTracking)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x27666b4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "StopFaceTracking",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.StartBodyTracking
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::StartBodyTracking)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x2766774;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "StartBodyTracking",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.StopBodyTracking
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::StopBodyTracking)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x2766834;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "StopBodyTracking",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetLocalTrackingSpaceRecenterCount
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)()>(&::GlobalNamespace::OVRPlugin::GetLocalTrackingSpaceRecenterCount)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x27668f4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "GetLocalTrackingSpaceRecenterCount", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSystemHmd3DofModeEnabled
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::GetSystemHmd3DofModeEnabled)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x27669c4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                               "GetSystemHmd3DofModeEnabled", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetClientColorDesc
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__ColorSpace)>(&::GlobalNamespace::OVRPlugin::SetClientColorDesc)> {
  constexpr static std::size_t size = 0x114;
  constexpr static std::size_t addrs = 0x2766a98;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetClientColorDesc", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ColorSpace>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetHmdColorDesc
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__ColorSpace (*)()>(&::GlobalNamespace::OVRPlugin::GetHmdColorDesc)> {
  constexpr static std::size_t size = 0x130;
  constexpr static std::size_t addrs = 0x2766bac;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetHmdColorDesc",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.PollEvent
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::GlobalNamespace::__OVRPlugin__EventDataBuffer>)>(&::GlobalNamespace::OVRPlugin::PollEvent)> {
  constexpr static std::size_t size = 0x218;
  constexpr static std::size_t addrs = 0x2766cdc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "PollEvent", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__EventDataBuffer>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNativeOpenXRInstance
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&::GlobalNamespace::OVRPlugin::GetNativeOpenXRInstance)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x2766ef4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNativeOpenXRInstance",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNativeOpenXRSession
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&::GlobalNamespace::OVRPlugin::GetNativeOpenXRSession)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x2766fd0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNativeOpenXRSession",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetKeyboardOverlayUV
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Vector2f)>(&::GlobalNamespace::OVRPlugin::SetKeyboardOverlayUV)> {
  constexpr static std::size_t size = 0xd8;
  constexpr static std::size_t addrs = 0x27670ac;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetKeyboardOverlayUV", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector2f>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.CreateSpatialAnchor
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo, ByRef<uint64_t>)>(
    &::GlobalNamespace::OVRPlugin::CreateSpatialAnchor)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x2767184;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "CreateSpatialAnchor", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetSpaceComponentStatus
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::GlobalNamespace::__OVRPlugin__SpaceComponentType, bool, double_t, ByRef<uint64_t>)>(
    &::GlobalNamespace::OVRPlugin::SetSpaceComponentStatus)> {
  constexpr static std::size_t size = 0x1e4;
  constexpr static std::size_t addrs = 0x2767260;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetSpaceComponentStatus", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceComponentType>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceComponentStatus
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::GlobalNamespace::__OVRPlugin__SpaceComponentType, ByRef<bool>, ByRef<bool>)>(
    &::GlobalNamespace::OVRPlugin::GetSpaceComponentStatus)> {
  constexpr static std::size_t size = 0x88;
  constexpr static std::size_t addrs = 0x2767444;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceComponentStatus", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceComponentType>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<bool>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceComponentStatusInternal
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    uint64_t, ::GlobalNamespace::__OVRPlugin__SpaceComponentType, ByRef<bool>, ByRef<bool>)>(&::GlobalNamespace::OVRPlugin::GetSpaceComponentStatusInternal)> {
  constexpr static std::size_t size = 0x114;
  constexpr static std::size_t addrs = 0x27674cc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceComponentStatusInternal", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceComponentType>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<bool>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<bool>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.EnumerateSpaceSupportedComponents
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<bool (*)(uint64_t, ByRef<uint32_t>, ::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType, ::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>)>(
        &::GlobalNamespace::OVRPlugin::EnumerateSpaceSupportedComponents)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x27675e0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "EnumerateSpaceSupportedComponents", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<
                                              ::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType, ::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SaveSpace
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(
    uint64_t, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation, ::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode, ByRef<uint64_t>)>(&::GlobalNamespace::OVRPlugin::SaveSpace)> {
  constexpr static std::size_t size = 0xf4;
  constexpr static std::size_t addrs = 0x27676d0;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SaveSpace", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.EraseSpace
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation, ByRef<uint64_t>)>(
    &::GlobalNamespace::OVRPlugin::EraseSpace)> {
  constexpr static std::size_t size = 0x194;
  constexpr static std::size_t addrs = 0x27677c4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "EraseSpace", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceUuid
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<::System::Guid>)>(&::GlobalNamespace::OVRPlugin::GetSpaceUuid)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x2767958;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceUuid", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::System::Guid>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.QuerySpaces
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__SpaceQueryInfo, ByRef<uint64_t>)>(
    &::GlobalNamespace::OVRPlugin::QuerySpaces)> {
  constexpr static std::size_t size = 0x21c;
  constexpr static std::size_t addrs = 0x2767a34;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "QuerySpaces", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceQueryInfo>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.RetrieveSpaceQueryResults
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<::Unity::Collections::NativeArray_1<::GlobalNamespace::__OVRPlugin__SpaceQueryResult>>,
                                                                                           ::Unity::Collections::Allocator)>(&::GlobalNamespace::OVRPlugin::RetrieveSpaceQueryResults)> {
  constexpr static std::size_t size = 0x1b4;
  constexpr static std::size_t addrs = 0x2767c50;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "RetrieveSpaceQueryResults", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::Unity::Collections::NativeArray_1<::GlobalNamespace::__OVRPlugin__SpaceQueryResult>>>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::Allocator>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.RetrieveSpaceQueryResults
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<bool (*)(uint64_t, ByRef<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceQueryResult, ::Array<::GlobalNamespace::__OVRPlugin__SpaceQueryResult>*>>)>(
        &::GlobalNamespace::OVRPlugin::RetrieveSpaceQueryResults)> {
  constexpr static std::size_t size = 0x38c;
  constexpr static std::size_t addrs = 0x2767e04;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "RetrieveSpaceQueryResults", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<
                                              ByRef<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceQueryResult, ::Array<::GlobalNamespace::__OVRPlugin__SpaceQueryResult>*>>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SaveSpaceList
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::Unity::Collections::NativeArray_1<uint64_t>, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation, ByRef<uint64_t>)>(&::GlobalNamespace::OVRPlugin::SaveSpaceList)> {
  constexpr static std::size_t size = 0x124;
  constexpr static std::size_t addrs = 0x2768190;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SaveSpaceList", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<uint64_t>>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceUserId
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<uint64_t>)>(&::GlobalNamespace::OVRPlugin::GetSpaceUserId)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x27682b4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceUserId", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.CreateSpaceUser
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<uint64_t>)>(&::GlobalNamespace::OVRPlugin::CreateSpaceUser)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x2768390;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "CreateSpaceUser", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.DestroySpaceUser
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t)>(&::GlobalNamespace::OVRPlugin::DestroySpaceUser)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276846c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "DestroySpaceUser", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.ShareSpaces
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(
    ::Unity::Collections::NativeArray_1<uint64_t>, ::Unity::Collections::NativeArray_1<uint64_t>, ByRef<uint64_t>)>(&::GlobalNamespace::OVRPlugin::ShareSpaces)> {
  constexpr static std::size_t size = 0x140;
  constexpr static std::size_t addrs = 0x2768534;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "ShareSpaces", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<uint64_t>>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<uint64_t>>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.TryLocateSpace
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::GlobalNamespace::__OVRPlugin__TrackingOrigin, ByRef<::GlobalNamespace::__OVRPlugin__Posef>)>(
    &::GlobalNamespace::OVRPlugin::TryLocateSpace)> {
  constexpr static std::size_t size = 0x1e0;
  constexpr static std::size_t addrs = 0x2768674;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "TryLocateSpace", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.LocateSpace
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)(uint64_t, ::GlobalNamespace::__OVRPlugin__TrackingOrigin)>(
    &::GlobalNamespace::OVRPlugin::LocateSpace)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x2768854;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "LocateSpace", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.TryLocateSpace
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::GlobalNamespace::__OVRPlugin__TrackingOrigin, ByRef<::GlobalNamespace::__OVRPlugin__Posef>,
                                                                                           ByRef<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>)>(&::GlobalNamespace::OVRPlugin::TryLocateSpace)> {
  constexpr static std::size_t size = 0x168;
  constexpr static std::size_t addrs = 0x2768924;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "TryLocateSpace", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.DestroySpace
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t)>(&::GlobalNamespace::OVRPlugin::DestroySpace)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x2768a8c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "DestroySpace", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceContainer
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<::ArrayW<::System::Guid, ::Array<::System::Guid>*>>)>(
    &::GlobalNamespace::OVRPlugin::GetSpaceContainer)> {
  constexpr static std::size_t size = 0x274;
  constexpr static std::size_t addrs = 0x2768b54;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceContainer", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::ArrayW<::System::Guid, ::Array<::System::Guid>*>>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceBoundingBox2D
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<::GlobalNamespace::__OVRPlugin__Rectf>)>(
    &::GlobalNamespace::OVRPlugin::GetSpaceBoundingBox2D)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x2768dc8;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceBoundingBox2D", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Rectf>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceBoundingBox3D
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<::GlobalNamespace::__OVRPlugin__Boundsf>)>(
    &::GlobalNamespace::OVRPlugin::GetSpaceBoundingBox3D)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x2768ea4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceBoundingBox3D", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Boundsf>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceSemanticLabels
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<::StringW>)>(&::GlobalNamespace::OVRPlugin::GetSpaceSemanticLabels)> {
  constexpr static std::size_t size = 0x190;
  constexpr static std::size_t addrs = 0x2768f84;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceSemanticLabels", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::StringW>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceRoomLayout
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<::GlobalNamespace::__OVRPlugin__RoomLayout>)>(
    &::GlobalNamespace::OVRPlugin::GetSpaceRoomLayout)> {
  constexpr static std::size_t size = 0x250;
  constexpr static std::size_t addrs = 0x2769114;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceRoomLayout", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__RoomLayout>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceBoundary2DCount
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<int32_t>)>(&::GlobalNamespace::OVRPlugin::GetSpaceBoundary2DCount)> {
  constexpr static std::size_t size = 0xec;
  constexpr static std::size_t addrs = 0x2769364;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceBoundary2DCount", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceBoundary2D
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>)>(
    &::GlobalNamespace::OVRPlugin::GetSpaceBoundary2D)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2769450;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceBoundary2D", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceBoundary2D
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>, ByRef<int32_t>)>(
    &::GlobalNamespace::OVRPlugin::GetSpaceBoundary2D)> {
  constexpr static std::size_t size = 0x128;
  constexpr static std::size_t addrs = 0x27694d4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceBoundary2D", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceBoundary2D
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Vector2> (*)(uint64_t, ::Unity::Collections::Allocator)>(
    &::GlobalNamespace::OVRPlugin::GetSpaceBoundary2D)> {
  constexpr static std::size_t size = 0x1a0;
  constexpr static std::size_t addrs = 0x27695fc;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceBoundary2D", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::Allocator>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceBoundary2D
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<::ArrayW<::UnityEngine::Vector2, ::Array<::UnityEngine::Vector2>*>>)>(
    &::GlobalNamespace::OVRPlugin::GetSpaceBoundary2D)> {
  constexpr static std::size_t size = 0x318;
  constexpr static std::size_t addrs = 0x276979c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceBoundary2D", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::ArrayW<::UnityEngine::Vector2, ::Array<::UnityEngine::Vector2>*>>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.RequestSceneCapture
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ByRef<uint64_t>)>(&::GlobalNamespace::OVRPlugin::RequestSceneCapture)> {
  constexpr static std::size_t size = 0x120;
  constexpr static std::size_t addrs = 0x2769ab4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "RequestSceneCapture", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceTriangleMeshCounts
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<int32_t>, ByRef<int32_t>)>(&::GlobalNamespace::OVRPlugin::GetSpaceTriangleMeshCounts)> {
  constexpr static std::size_t size = 0x1c0;
  constexpr static std::size_t addrs = 0x2769bd4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceTriangleMeshCounts", std::vector<Il2CppClass*>{},
        ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get(),
                                          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceTriangleMesh
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<
    static_cast<bool (*)(uint64_t, ::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>, ::Unity::Collections::NativeArray_1<int32_t>)>(&::GlobalNamespace::OVRPlugin::GetSpaceTriangleMesh)> {
  constexpr static std::size_t size = 0x200;
  constexpr static std::size_t addrs = 0x2769d94;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceTriangleMesh", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<int32_t>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetLayerRecommendedResolution
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t, ByRef<::GlobalNamespace::__OVRPlugin__Sizei>)>(
    &::GlobalNamespace::OVRPlugin::GetLayerRecommendedResolution)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x2769f94;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetLayerRecommendedResolution", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetEyeLayerRecommendedResolution
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::GlobalNamespace::__OVRPlugin__Sizei>)>(
    &::GlobalNamespace::OVRPlugin::GetEyeLayerRecommendedResolution)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x276a070;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetEyeLayerRecommendedResolution", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetRenderModelPaths
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW, ::Array<::StringW>*> (*)()>(&::GlobalNamespace::OVRPlugin::GetRenderModelPaths)> {
  constexpr static std::size_t size = 0x22c;
  constexpr static std::size_t addrs = 0x276a13c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetRenderModelPaths",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetRenderModelProperties
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ByRef<::GlobalNamespace::__OVRPlugin__RenderModelProperties>)>(
    &::GlobalNamespace::OVRPlugin::GetRenderModelProperties)> {
  constexpr static std::size_t size = 0x1a4;
  constexpr static std::size_t addrs = 0x276a368;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetRenderModelProperties", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(),
                                                                      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__RenderModelProperties>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.LoadRenderModel
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t, ::Array<uint8_t>*> (*)(uint64_t)>(&::GlobalNamespace::OVRPlugin::LoadRenderModel)> {
  constexpr static std::size_t size = 0x200;
  constexpr static std::size_t addrs = 0x276a50c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "LoadRenderModel", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.OnEditorShutdown
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&::GlobalNamespace::OVRPlugin::OnEditorShutdown)> {
  constexpr static std::size_t size = 0xb8;
  constexpr static std::size_t addrs = 0x276a70c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "OnEditorShutdown",
                                                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetPassthroughPreferences
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__PassthroughPreferences>)>(
    &::GlobalNamespace::OVRPlugin::GetPassthroughPreferences)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276a7c4;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS(
        (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetPassthroughPreferences", std::vector<Il2CppClass*>{},
                                    ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PassthroughPreferences>>::get() })));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetEyeBufferSharpenType
template <>

struct CORDL_HIDDEN ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__LayerSharpenType)>(&::GlobalNamespace::OVRPlugin::SetEyeBufferSharpenType)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276a88c;

  inline static ::MethodInfo const* methodInfo() {
    static auto* ___internal_method =
        THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetEyeBufferSharpenType", std::vector<Il2CppClass*>{},
                                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerSharpenType>::get() })));
    return ___internal_method;
  }
};
inline void GlobalNamespace::OVRPlugin::setStaticF_wrapperVersion(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "wrapperVersion", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::OVRPlugin::getStaticF_wrapperVersion() {
  return ::cordl_internals::getStaticField<::System::Version*, "wrapperVersion", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__version(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "_version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::OVRPlugin::getStaticF__version() {
  return ::cordl_internals::getStaticField<::System::Version*, "_version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__nativeSDKVersion(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "_nativeSDKVersion", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::OVRPlugin::getStaticF__nativeSDKVersion() {
  return ::cordl_internals::getStaticField<::System::Version*, "_nativeSDKVersion", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF_MAX_CPU_CORES(int32_t value) {
  ::cordl_internals::setStaticField<int32_t, "MAX_CPU_CORES", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<int32_t>(value));
}
inline int32_t GlobalNamespace::OVRPlugin::getStaticF_MAX_CPU_CORES() {
  return ::cordl_internals::getStaticField<int32_t, "MAX_CPU_CORES", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__nativeXrApi(::System::Nullable_1<::GlobalNamespace::__OVRPlugin__XrApi> value) {
  ::cordl_internals::setStaticField<::System::Nullable_1<::GlobalNamespace::__OVRPlugin__XrApi>, "_nativeXrApi",
                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(
      std::forward<::System::Nullable_1<::GlobalNamespace::__OVRPlugin__XrApi>>(value));
}
inline ::System::Nullable_1<::GlobalNamespace::__OVRPlugin__XrApi> GlobalNamespace::OVRPlugin::getStaticF__nativeXrApi() {
  return ::cordl_internals::getStaticField<::System::Nullable_1<::GlobalNamespace::__OVRPlugin__XrApi>, "_nativeXrApi",
                                           ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__nativeAudioOutGuid(::GlobalNamespace::__OVRPlugin__GUID* value) {
  ::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__GUID*, "_nativeAudioOutGuid", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(
      std::forward<::GlobalNamespace::__OVRPlugin__GUID*>(value));
}
inline ::GlobalNamespace::__OVRPlugin__GUID* GlobalNamespace::OVRPlugin::getStaticF__nativeAudioOutGuid() {
  return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__GUID*, "_nativeAudioOutGuid", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__cachedAudioOutGuid(::System::Guid value) {
  ::cordl_internals::setStaticField<::System::Guid, "_cachedAudioOutGuid", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(
      std::forward<::System::Guid>(value));
}
inline ::System::Guid GlobalNamespace::OVRPlugin::getStaticF__cachedAudioOutGuid() {
  return ::cordl_internals::getStaticField<::System::Guid, "_cachedAudioOutGuid", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__cachedAudioOutString(::StringW value) {
  ::cordl_internals::setStaticField<::StringW, "_cachedAudioOutString", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<::StringW>(value));
}
inline ::StringW GlobalNamespace::OVRPlugin::getStaticF__cachedAudioOutString() {
  return ::cordl_internals::getStaticField<::StringW, "_cachedAudioOutString", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__nativeAudioInGuid(::GlobalNamespace::__OVRPlugin__GUID* value) {
  ::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__GUID*, "_nativeAudioInGuid", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(
      std::forward<::GlobalNamespace::__OVRPlugin__GUID*>(value));
}
inline ::GlobalNamespace::__OVRPlugin__GUID* GlobalNamespace::OVRPlugin::getStaticF__nativeAudioInGuid() {
  return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__GUID*, "_nativeAudioInGuid", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__cachedAudioInGuid(::System::Guid value) {
  ::cordl_internals::setStaticField<::System::Guid, "_cachedAudioInGuid", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(
      std::forward<::System::Guid>(value));
}
inline ::System::Guid GlobalNamespace::OVRPlugin::getStaticF__cachedAudioInGuid() {
  return ::cordl_internals::getStaticField<::System::Guid, "_cachedAudioInGuid", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__cachedAudioInString(::StringW value) {
  ::cordl_internals::setStaticField<::StringW, "_cachedAudioInString", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<::StringW>(value));
}
inline ::StringW GlobalNamespace::OVRPlugin::getStaticF__cachedAudioInString() {
  return ::cordl_internals::getStaticField<::StringW, "_cachedAudioInString", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF_perfStatWarningPrinted(bool value) {
  ::cordl_internals::setStaticField<bool, "perfStatWarningPrinted", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<bool>(value));
}
inline bool GlobalNamespace::OVRPlugin::getStaticF_perfStatWarningPrinted() {
  return ::cordl_internals::getStaticField<bool, "perfStatWarningPrinted", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF_resetPerfStatWarningPrinted(bool value) {
  ::cordl_internals::setStaticField<bool, "resetPerfStatWarningPrinted", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<bool>(value));
}
inline bool GlobalNamespace::OVRPlugin::getStaticF_resetPerfStatWarningPrinted() {
  return ::cordl_internals::getStaticField<bool, "resetPerfStatWarningPrinted", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__nativeSystemDisplayFrequenciesAvailable(::GlobalNamespace::OVRNativeBuffer* value) {
  ::cordl_internals::setStaticField<::GlobalNamespace::OVRNativeBuffer*, "_nativeSystemDisplayFrequenciesAvailable",
                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<::GlobalNamespace::OVRNativeBuffer*>(value));
}
inline ::GlobalNamespace::OVRNativeBuffer* GlobalNamespace::OVRPlugin::getStaticF__nativeSystemDisplayFrequenciesAvailable() {
  return ::cordl_internals::getStaticField<::GlobalNamespace::OVRNativeBuffer*, "_nativeSystemDisplayFrequenciesAvailable",
                                           ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__cachedSystemDisplayFrequenciesAvailable(::ArrayW<float_t, ::Array<float_t>*> value) {
  ::cordl_internals::setStaticField<::ArrayW<float_t, ::Array<float_t>*>, "_cachedSystemDisplayFrequenciesAvailable",
                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<::ArrayW<float_t, ::Array<float_t>*>>(value));
}
inline ::ArrayW<float_t, ::Array<float_t>*> GlobalNamespace::OVRPlugin::getStaticF__cachedSystemDisplayFrequenciesAvailable() {
  return ::cordl_internals::getStaticField<::ArrayW<float_t, ::Array<float_t>*>, "_cachedSystemDisplayFrequenciesAvailable",
                                           ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF_cachedHandState(::GlobalNamespace::__OVRPlugin__HandStateInternal value) {
  ::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__HandStateInternal, "cachedHandState", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(
      std::forward<::GlobalNamespace::__OVRPlugin__HandStateInternal>(value));
}
inline ::GlobalNamespace::__OVRPlugin__HandStateInternal GlobalNamespace::OVRPlugin::getStaticF_cachedHandState() {
  return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__HandStateInternal, "cachedHandState",
                                           ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF_cachedSkeleton(::GlobalNamespace::__OVRPlugin__Skeleton value) {
  ::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__Skeleton, "cachedSkeleton", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(
      std::forward<::GlobalNamespace::__OVRPlugin__Skeleton>(value));
}
inline ::GlobalNamespace::__OVRPlugin__Skeleton GlobalNamespace::OVRPlugin::getStaticF_cachedSkeleton() {
  return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__Skeleton, "cachedSkeleton", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF_cachedSkeleton2(::GlobalNamespace::__OVRPlugin__Skeleton2Internal value) {
  ::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__Skeleton2Internal, "cachedSkeleton2", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(
      std::forward<::GlobalNamespace::__OVRPlugin__Skeleton2Internal>(value));
}
inline ::GlobalNamespace::__OVRPlugin__Skeleton2Internal GlobalNamespace::OVRPlugin::getStaticF_cachedSkeleton2() {
  return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__Skeleton2Internal, "cachedSkeleton2",
                                           ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF_cachedFaceState(::GlobalNamespace::__OVRPlugin__FaceStateInternal value) {
  ::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__FaceStateInternal, "cachedFaceState", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(
      std::forward<::GlobalNamespace::__OVRPlugin__FaceStateInternal>(value));
}
inline ::GlobalNamespace::__OVRPlugin__FaceStateInternal GlobalNamespace::OVRPlugin::getStaticF_cachedFaceState() {
  return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__FaceStateInternal, "cachedFaceState",
                                           ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF_cachedEyeGazesState(::GlobalNamespace::__OVRPlugin__EyeGazesStateInternal value) {
  ::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__EyeGazesStateInternal, "cachedEyeGazesState",
                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(
      std::forward<::GlobalNamespace::__OVRPlugin__EyeGazesStateInternal>(value));
}
inline ::GlobalNamespace::__OVRPlugin__EyeGazesStateInternal GlobalNamespace::OVRPlugin::getStaticF_cachedEyeGazesState() {
  return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__EyeGazesStateInternal, "cachedEyeGazesState",
                                           ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__versionZero(::System::Version* value) {
  ::cordl_internals::setStaticField<::System::Version*, "_versionZero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(
      std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::OVRPlugin::getStaticF__versionZero() {
  return ::cordl_internals::getStaticField<::System::Version*, "_versionZero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline ::System::Version* GlobalNamespace::OVRPlugin::get_version() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_version",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::System::Version*, false>(nullptr, ___internal_method);
}
inline ::System::Version* GlobalNamespace::OVRPlugin::get_nativeSDKVersion() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_nativeSDKVersion",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::System::Version*, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::IsSuccess(::GlobalNamespace::__OVRPlugin__Result result) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "IsSuccess", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Result>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, result);
}
inline void GlobalNamespace::OVRPlugin::SetLogCallback2(::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType* logCallback) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetLogCallback2", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, logCallback);
}
inline bool GlobalNamespace::OVRPlugin::IsPassthroughShape(::GlobalNamespace::__OVRPlugin__OverlayShape shape) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "IsPassthroughShape", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__OverlayShape>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, shape);
}
inline bool GlobalNamespace::OVRPlugin::IsPositionValid(::GlobalNamespace::__OVRPlugin__SpaceLocationFlags value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "IsPositionValid", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::IsOrientationValid(::GlobalNamespace::__OVRPlugin__SpaceLocationFlags value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "IsOrientationValid", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::IsPositionTracked(::GlobalNamespace::__OVRPlugin__SpaceLocationFlags value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "IsPositionTracked", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::IsOrientationTracked(::GlobalNamespace::__OVRPlugin__SpaceLocationFlags value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "IsOrientationTracked", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, value);
}
inline ::StringW GlobalNamespace::OVRPlugin::GuidToUuidString(::System::Guid guid) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GuidToUuidString", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::System::Guid>::get() })));
  return ::cordl_internals::RunMethodRethrow<::StringW, false>(nullptr, ___internal_method, guid);
}
inline bool GlobalNamespace::OVRPlugin::get_initialized() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_initialized",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__XrApi GlobalNamespace::OVRPlugin::get_nativeXrApi() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_nativeXrApi",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__XrApi, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_chromatic() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_chromatic",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_chromatic(bool value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_chromatic", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_monoscopic() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_monoscopic",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_monoscopic(bool value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_monoscopic", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_rotation() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_rotation",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_rotation(bool value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_rotation", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_position() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_position",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_position(bool value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_position", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_useIPDInPositionTracking() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "get_useIPDInPositionTracking", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_useIPDInPositionTracking(bool value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_useIPDInPositionTracking",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_positionSupported() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_positionSupported",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_positionTracked() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_positionTracked",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_powerSaving() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_powerSaving",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_hmdPresent() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_hmdPresent",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_userPresent() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_userPresent",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_headphonesPresent() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_headphonesPresent",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline int32_t GlobalNamespace::OVRPlugin::get_recommendedMSAALevel() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_recommendedMSAALevel",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__SystemRegion GlobalNamespace::OVRPlugin::get_systemRegion() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_systemRegion",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__SystemRegion, false>(nullptr, ___internal_method);
}
inline ::StringW GlobalNamespace::OVRPlugin::get_audioOutId() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_audioOutId",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::StringW, false>(nullptr, ___internal_method);
}
inline ::StringW GlobalNamespace::OVRPlugin::get_audioInId() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_audioInId",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::StringW, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_hasVrFocus() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_hasVrFocus",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_hasInputFocus() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_hasInputFocus",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_shouldQuit() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_shouldQuit",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_shouldRecenter() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_shouldRecenter",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline ::StringW GlobalNamespace::OVRPlugin::get_productName() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_productName",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::StringW, false>(nullptr, ___internal_method);
}
inline ::StringW GlobalNamespace::OVRPlugin::get_latency() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_latency",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::StringW, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::OVRPlugin::get_eyeDepth() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_eyeDepth",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_eyeDepth(float_t value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_eyeDepth", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline float_t GlobalNamespace::OVRPlugin::get_eyeHeight() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_eyeHeight",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_eyeHeight(float_t value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_eyeHeight", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline float_t GlobalNamespace::OVRPlugin::get_batteryLevel() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_batteryLevel",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::OVRPlugin::get_batteryTemperature() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_batteryTemperature",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel GlobalNamespace::OVRPlugin::get_suggestedCpuPerfLevel() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_suggestedCpuPerfLevel",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_suggestedCpuPerfLevel(::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel value) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_suggestedCpuPerfLevel", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel GlobalNamespace::OVRPlugin::get_suggestedGpuPerfLevel() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_suggestedGpuPerfLevel",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_suggestedGpuPerfLevel(::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel value) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_suggestedGpuPerfLevel", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline int32_t GlobalNamespace::OVRPlugin::get_cpuLevel() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_cpuLevel",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_cpuLevel(int32_t value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_cpuLevel", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline int32_t GlobalNamespace::OVRPlugin::get_gpuLevel() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_gpuLevel",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_gpuLevel(int32_t value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_gpuLevel", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline int32_t GlobalNamespace::OVRPlugin::get_vsyncCount() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_vsyncCount",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_vsyncCount(int32_t value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_vsyncCount", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline float_t GlobalNamespace::OVRPlugin::get_systemVolume() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_systemVolume",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::OVRPlugin::get_ipd() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_ipd",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_ipd(float_t value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_ipd", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_occlusionMesh() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_occlusionMesh",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_occlusionMesh(bool value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_occlusionMesh", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__BatteryStatus GlobalNamespace::OVRPlugin::get_batteryStatus() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_batteryStatus",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__BatteryStatus, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Frustumf GlobalNamespace::OVRPlugin::GetEyeFrustum(::GlobalNamespace::__OVRPlugin__Eye eyeId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetEyeFrustum", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Eye>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Frustumf, false>(nullptr, ___internal_method, eyeId);
}
inline ::GlobalNamespace::__OVRPlugin__Sizei GlobalNamespace::OVRPlugin::GetEyeTextureSize(::GlobalNamespace::__OVRPlugin__Eye eyeId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetEyeTextureSize", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Eye>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Sizei, false>(nullptr, ___internal_method, eyeId);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::OVRPlugin::GetTrackerPose(::GlobalNamespace::__OVRPlugin__Tracker trackerId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetTrackerPose", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Tracker>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method, trackerId);
}
inline ::GlobalNamespace::__OVRPlugin__Frustumf GlobalNamespace::OVRPlugin::GetTrackerFrustum(::GlobalNamespace::__OVRPlugin__Tracker trackerId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetTrackerFrustum", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Tracker>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Frustumf, false>(nullptr, ___internal_method, trackerId);
}
inline bool GlobalNamespace::OVRPlugin::ShowUI(::GlobalNamespace::__OVRPlugin__PlatformUI ui) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "ShowUI", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PlatformUI>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, ui);
}
/// @param layerIndex: int32_t (default: static_cast<int32_t>(0x0))
/// @param shape: ::GlobalNamespace::__OVRPlugin__OverlayShape (default: static_cast<int32_t>(0x0))
/// @param overrideTextureRectMatrix: bool (default: false)
/// @param textureRectMatrix: ::GlobalNamespace::__OVRPlugin__TextureRectMatrixf (default: {})
/// @param overridePerLayerColorScaleAndOffset: bool (default: false)
/// @param colorScale: ::UnityEngine::Vector4 (default: {})
/// @param colorOffset: ::UnityEngine::Vector4 (default: {})
/// @param expensiveSuperSample: bool (default: false)
/// @param bicubic: bool (default: false)
/// @param efficientSuperSample: bool (default: false)
/// @param efficientSharpen: bool (default: false)
/// @param expensiveSharpen: bool (default: false)
/// @param hidden: bool (default: false)
/// @param secureContent: bool (default: false)
/// @param automaticFiltering: bool (default: false)
inline bool GlobalNamespace::OVRPlugin::EnqueueSubmitLayer(bool onTop, bool headLocked, bool noDepthBufferTesting, void* leftTexture, void* rightTexture, int32_t layerId, int32_t frameIndex,
                                                           ::GlobalNamespace::__OVRPlugin__Posef pose, ::GlobalNamespace::__OVRPlugin__Vector3f scale, int32_t layerIndex,
                                                           ::GlobalNamespace::__OVRPlugin__OverlayShape shape, bool overrideTextureRectMatrix,
                                                           ::GlobalNamespace::__OVRPlugin__TextureRectMatrixf textureRectMatrix, bool overridePerLayerColorScaleAndOffset,
                                                           ::UnityEngine::Vector4 colorScale, ::UnityEngine::Vector4 colorOffset, bool expensiveSuperSample, bool bicubic, bool efficientSuperSample,
                                                           bool efficientSharpen, bool expensiveSharpen, bool hidden, bool secureContent, bool automaticFiltering) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "EnqueueSubmitLayer", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector3f>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__OverlayShape>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, onTop, headLocked, noDepthBufferTesting, leftTexture, rightTexture, layerId, frameIndex, pose, scale, layerIndex,
                                                          shape, overrideTextureRectMatrix, textureRectMatrix, overridePerLayerColorScaleAndOffset, colorScale, colorOffset, expensiveSuperSample,
                                                          bicubic, efficientSuperSample, efficientSharpen, expensiveSharpen, hidden, secureContent, automaticFiltering);
}
inline ::GlobalNamespace::__OVRPlugin__LayerDesc GlobalNamespace::OVRPlugin::CalculateLayerDesc(::GlobalNamespace::__OVRPlugin__OverlayShape shape, ::GlobalNamespace::__OVRPlugin__LayerLayout layout,
                                                                                                ::GlobalNamespace::__OVRPlugin__Sizei textureSize, int32_t mipLevels, int32_t sampleCount,
                                                                                                ::GlobalNamespace::__OVRPlugin__EyeTextureFormat format, int32_t layerFlags) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "CalculateLayerDesc", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__OverlayShape>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerLayout>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Sizei>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__LayerDesc, false>(nullptr, ___internal_method, shape, layout, textureSize, mipLevels, sampleCount, format, layerFlags);
}
inline bool GlobalNamespace::OVRPlugin::EnqueueSetupLayer(::GlobalNamespace::__OVRPlugin__LayerDesc desc, int32_t compositionDepth, void* layerID) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "EnqueueSetupLayer", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerDesc>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, desc, compositionDepth, layerID);
}
inline bool GlobalNamespace::OVRPlugin::EnqueueDestroyLayer(void* layerID) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "EnqueueDestroyLayer", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, layerID);
}
inline void* GlobalNamespace::OVRPlugin::GetLayerTexture(int32_t layerId, int32_t stage, ::GlobalNamespace::__OVRPlugin__Eye eyeId) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetLayerTexture", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Eye>::get() })));
  return ::cordl_internals::RunMethodRethrow<void*, false>(nullptr, ___internal_method, layerId, stage, eyeId);
}
inline int32_t GlobalNamespace::OVRPlugin::GetLayerTextureStageCount(int32_t layerId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetLayerTextureStageCount", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method, layerId);
}
inline void* GlobalNamespace::OVRPlugin::GetLayerAndroidSurfaceObject(int32_t layerId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetLayerAndroidSurfaceObject",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void*, false>(nullptr, ___internal_method, layerId);
}
inline bool GlobalNamespace::OVRPlugin::UpdateNodePhysicsPoses(int32_t frameIndex, double_t predictionSeconds) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "UpdateNodePhysicsPoses", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, frameIndex, predictionSeconds);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::OVRPlugin::GetNodePose(::GlobalNamespace::__OVRPlugin__Node nodeId, ::GlobalNamespace::__OVRPlugin__Step stepId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodePose", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method, nodeId, stepId);
}
inline ::GlobalNamespace::__OVRPlugin__Vector3f GlobalNamespace::OVRPlugin::GetNodeVelocity(::GlobalNamespace::__OVRPlugin__Node nodeId, ::GlobalNamespace::__OVRPlugin__Step stepId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodeVelocity", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Vector3f, false>(nullptr, ___internal_method, nodeId, stepId);
}
inline ::GlobalNamespace::__OVRPlugin__Vector3f GlobalNamespace::OVRPlugin::GetNodeAngularVelocity(::GlobalNamespace::__OVRPlugin__Node nodeId, ::GlobalNamespace::__OVRPlugin__Step stepId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodeAngularVelocity", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Vector3f, false>(nullptr, ___internal_method, nodeId, stepId);
}
inline ::GlobalNamespace::__OVRPlugin__Vector3f GlobalNamespace::OVRPlugin::GetNodeAcceleration(::GlobalNamespace::__OVRPlugin__Node nodeId, ::GlobalNamespace::__OVRPlugin__Step stepId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodeAcceleration", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Vector3f, false>(nullptr, ___internal_method, nodeId, stepId);
}
inline ::GlobalNamespace::__OVRPlugin__Vector3f GlobalNamespace::OVRPlugin::GetNodeAngularAcceleration(::GlobalNamespace::__OVRPlugin__Node nodeId, ::GlobalNamespace::__OVRPlugin__Step stepId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodeAngularAcceleration", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Vector3f, false>(nullptr, ___internal_method, nodeId, stepId);
}
inline bool GlobalNamespace::OVRPlugin::GetNodePresent(::GlobalNamespace::__OVRPlugin__Node nodeId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodePresent", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, nodeId);
}
inline bool GlobalNamespace::OVRPlugin::GetNodeOrientationTracked(::GlobalNamespace::__OVRPlugin__Node nodeId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodeOrientationTracked", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, nodeId);
}
inline bool GlobalNamespace::OVRPlugin::GetNodeOrientationValid(::GlobalNamespace::__OVRPlugin__Node nodeId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodeOrientationValid", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, nodeId);
}
inline bool GlobalNamespace::OVRPlugin::GetNodePositionTracked(::GlobalNamespace::__OVRPlugin__Node nodeId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodePositionTracked", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, nodeId);
}
inline bool GlobalNamespace::OVRPlugin::GetNodePositionValid(::GlobalNamespace::__OVRPlugin__Node nodeId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodePositionValid", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__PoseStatef GlobalNamespace::OVRPlugin::GetNodePoseStateRaw(::GlobalNamespace::__OVRPlugin__Node nodeId, ::GlobalNamespace::__OVRPlugin__Step stepId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodePoseStateRaw", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__PoseStatef, false>(nullptr, ___internal_method, nodeId, stepId);
}
inline ::GlobalNamespace::__OVRPlugin__PoseStatef GlobalNamespace::OVRPlugin::GetNodePoseStateAtTime(double_t time, ::GlobalNamespace::__OVRPlugin__Node nodeId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodePoseStateAtTime", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__PoseStatef, false>(nullptr, ___internal_method, time, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__PoseStatef GlobalNamespace::OVRPlugin::GetNodePoseStateImmediate(::GlobalNamespace::__OVRPlugin__Node nodeId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodePoseStateImmediate", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__PoseStatef, false>(nullptr, ___internal_method, nodeId);
}
inline bool GlobalNamespace::OVRPlugin::AreHandPosesGeneratedByControllerData(::GlobalNamespace::__OVRPlugin__Step stepId, ::GlobalNamespace::__OVRPlugin__Node nodeId) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "AreHandPosesGeneratedByControllerData", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, stepId, nodeId);
}
inline bool GlobalNamespace::OVRPlugin::SetSimultaneousHandsAndControllersEnabled(bool enabled) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetSimultaneousHandsAndControllersEnabled",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, enabled);
}
inline bool GlobalNamespace::OVRPlugin::GetControllerIsInHand(::GlobalNamespace::__OVRPlugin__Step stepId, ::GlobalNamespace::__OVRPlugin__Node nodeId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetControllerIsInHand", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, stepId, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::OVRPlugin::GetCurrentTrackingTransformPose() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "GetCurrentTrackingTransformPose", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::OVRPlugin::GetTrackingTransformRawPose() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "GetTrackingTransformRawPose", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::OVRPlugin::GetTrackingTransformRelativePose(::GlobalNamespace::__OVRPlugin__TrackingOrigin trackingOrigin) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetTrackingTransformRelativePose", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method, trackingOrigin);
}
inline ::GlobalNamespace::__OVRPlugin__ControllerState GlobalNamespace::OVRPlugin::GetControllerState(uint32_t controllerMask) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetControllerState", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__ControllerState, false>(nullptr, ___internal_method, controllerMask);
}
inline ::GlobalNamespace::__OVRPlugin__ControllerState2 GlobalNamespace::OVRPlugin::GetControllerState2(uint32_t controllerMask) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetControllerState2", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__ControllerState2, false>(nullptr, ___internal_method, controllerMask);
}
inline ::GlobalNamespace::__OVRPlugin__ControllerState4 GlobalNamespace::OVRPlugin::GetControllerState4(uint32_t controllerMask) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetControllerState4", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__ControllerState4, false>(nullptr, ___internal_method, controllerMask);
}
inline ::GlobalNamespace::__OVRPlugin__ControllerState5 GlobalNamespace::OVRPlugin::GetControllerState5(uint32_t controllerMask) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetControllerState5", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__ControllerState5, false>(nullptr, ___internal_method, controllerMask);
}
inline ::GlobalNamespace::__OVRPlugin__ControllerState6 GlobalNamespace::OVRPlugin::GetControllerState6(uint32_t controllerMask) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetControllerState6", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__ControllerState6, false>(nullptr, ___internal_method, controllerMask);
}
inline ::GlobalNamespace::__OVRPlugin__InteractionProfile GlobalNamespace::OVRPlugin::GetCurrentInteractionProfile(::GlobalNamespace::__OVRPlugin__Hand hand) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetCurrentInteractionProfile", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__InteractionProfile, false>(nullptr, ___internal_method, hand);
}
inline ::GlobalNamespace::__OVRPlugin__InteractionProfile GlobalNamespace::OVRPlugin::GetCurrentDetachedInteractionProfile(::GlobalNamespace::__OVRPlugin__Hand hand) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetCurrentDetachedInteractionProfile", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__InteractionProfile, false>(nullptr, ___internal_method, hand);
}
inline bool GlobalNamespace::OVRPlugin::SetControllerVibration(uint32_t controllerMask, float_t frequency, float_t amplitude) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetControllerVibration", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, controllerMask, frequency, amplitude);
}
inline bool GlobalNamespace::OVRPlugin::SetControllerLocalizedVibration(::GlobalNamespace::__OVRPlugin__Controller controllerMask, ::GlobalNamespace::__OVRPlugin__HapticsLocation hapticsLocationMask,
                                                                        float_t frequency, float_t amplitude) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetControllerLocalizedVibration", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsLocation>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, controllerMask, hapticsLocationMask, frequency, amplitude);
}
inline bool GlobalNamespace::OVRPlugin::SetControllerHapticsAmplitudeEnvelope(::GlobalNamespace::__OVRPlugin__Controller controllerMask,
                                                                              ::GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration hapticsVibration) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetControllerHapticsAmplitudeEnvelope", std::vector<Il2CppClass*>{},
                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(),
                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, controllerMask, hapticsVibration);
}
inline bool GlobalNamespace::OVRPlugin::SetControllerHapticsPcm(::GlobalNamespace::__OVRPlugin__Controller controllerMask, ::GlobalNamespace::__OVRPlugin__HapticsPcmVibration hapticsVibration) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetControllerHapticsPcm", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsPcmVibration>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, controllerMask, hapticsVibration);
}
inline bool GlobalNamespace::OVRPlugin::GetControllerSampleRateHz(::GlobalNamespace::__OVRPlugin__Controller controllerMask, ByRef<float_t> sampleRateHz) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetControllerSampleRateHz", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, controllerMask, sampleRateHz);
}
inline ::GlobalNamespace::__OVRPlugin__HapticsDesc GlobalNamespace::OVRPlugin::GetControllerHapticsDesc(uint32_t controllerMask) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetControllerHapticsDesc", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__HapticsDesc, false>(nullptr, ___internal_method, controllerMask);
}
inline ::GlobalNamespace::__OVRPlugin__HapticsState GlobalNamespace::OVRPlugin::GetControllerHapticsState(uint32_t controllerMask) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetControllerHapticsState", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__HapticsState, false>(nullptr, ___internal_method, controllerMask);
}
inline bool GlobalNamespace::OVRPlugin::SetControllerHaptics(uint32_t controllerMask, ::GlobalNamespace::__OVRPlugin__HapticsBuffer hapticsBuffer) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetControllerHaptics", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsBuffer>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, controllerMask, hapticsBuffer);
}
inline float_t GlobalNamespace::OVRPlugin::GetEyeRecommendedResolutionScale() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "GetEyeRecommendedResolutionScale", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::OVRPlugin::GetAppCpuStartToGpuEndTime() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetAppCpuStartToGpuEndTime",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::GetBoundaryConfigured() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetBoundaryConfigured",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__BoundaryTestResult GlobalNamespace::OVRPlugin::TestBoundaryNode(::GlobalNamespace::__OVRPlugin__Node nodeId,
                                                                                                       ::GlobalNamespace::__OVRPlugin__BoundaryType boundaryType) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "TestBoundaryNode", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__BoundaryTestResult, false>(nullptr, ___internal_method, nodeId, boundaryType);
}
inline ::GlobalNamespace::__OVRPlugin__BoundaryTestResult GlobalNamespace::OVRPlugin::TestBoundaryPoint(::GlobalNamespace::__OVRPlugin__Vector3f point,
                                                                                                        ::GlobalNamespace::__OVRPlugin__BoundaryType boundaryType) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "TestBoundaryPoint", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector3f>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__BoundaryTestResult, false>(nullptr, ___internal_method, point, boundaryType);
}
inline ::GlobalNamespace::__OVRPlugin__BoundaryGeometry GlobalNamespace::OVRPlugin::GetBoundaryGeometry(::GlobalNamespace::__OVRPlugin__BoundaryType boundaryType) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetBoundaryGeometry", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__BoundaryGeometry, false>(nullptr, ___internal_method, boundaryType);
}
inline bool GlobalNamespace::OVRPlugin::GetBoundaryGeometry2(::GlobalNamespace::__OVRPlugin__BoundaryType boundaryType, void* points, ByRef<int32_t> pointsCount) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetBoundaryGeometry2", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<void*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, boundaryType, points, pointsCount);
}
inline ::GlobalNamespace::__OVRPlugin__AppPerfStats GlobalNamespace::OVRPlugin::GetAppPerfStats() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetAppPerfStats",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__AppPerfStats, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::ResetAppPerfStats() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "ResetAppPerfStats",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::OVRPlugin::GetAppFramerate() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetAppFramerate",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::SetHandNodePoseStateLatency(double_t latencyInSeconds) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetHandNodePoseStateLatency", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, latencyInSeconds);
}
inline double_t GlobalNamespace::OVRPlugin::GetHandNodePoseStateLatency() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "GetHandNodePoseStateLatency", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<double_t, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::SetControllerDrivenHandPoses(bool controllerDrivenHandPoses) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetControllerDrivenHandPoses",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, controllerDrivenHandPoses);
}
inline bool GlobalNamespace::OVRPlugin::SetControllerDrivenHandPosesAreNatural(bool controllerDrivenHandPosesAreNatural) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetControllerDrivenHandPosesAreNatural",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, controllerDrivenHandPosesAreNatural);
}
inline bool GlobalNamespace::OVRPlugin::IsControllerDrivenHandPosesEnabled() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "IsControllerDrivenHandPosesEnabled", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::AreControllerDrivenHandPosesNatural() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "AreControllerDrivenHandPosesNatural", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__EyeTextureFormat GlobalNamespace::OVRPlugin::GetDesiredEyeTextureFormat() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetDesiredEyeTextureFormat",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::SetDesiredEyeTextureFormat(::GlobalNamespace::__OVRPlugin__EyeTextureFormat value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetDesiredEyeTextureFormat", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::InitializeMixedReality() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "InitializeMixedReality",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::ShutdownMixedReality() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "ShutdownMixedReality",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::IsMixedRealityInitialized() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "IsMixedRealityInitialized",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline int32_t GlobalNamespace::OVRPlugin::GetExternalCameraCount() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetExternalCameraCount",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::UpdateExternalCamera() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "UpdateExternalCamera",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::GetMixedRealityCameraInfo(int32_t cameraId, ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics> cameraExtrinsics,
                                                                  ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics> cameraIntrinsics) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetMixedRealityCameraInfo", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, cameraId, cameraExtrinsics, cameraIntrinsics);
}
inline bool GlobalNamespace::OVRPlugin::OverrideExternalCameraFov(int32_t cameraId, bool useOverriddenFov, ::GlobalNamespace::__OVRPlugin__Fovf fov) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "OverrideExternalCameraFov", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Fovf>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, cameraId, useOverriddenFov, fov);
}
inline bool GlobalNamespace::OVRPlugin::GetUseOverriddenExternalCameraFov(int32_t cameraId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetUseOverriddenExternalCameraFov",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, cameraId);
}
inline bool GlobalNamespace::OVRPlugin::OverrideExternalCameraStaticPose(int32_t cameraId, bool useOverriddenPose, ::GlobalNamespace::__OVRPlugin__Posef poseInStageOrigin) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "OverrideExternalCameraStaticPose", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, cameraId, useOverriddenPose, poseInStageOrigin);
}
inline bool GlobalNamespace::OVRPlugin::GetUseOverriddenExternalCameraStaticPose(int32_t cameraId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetUseOverriddenExternalCameraStaticPose",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, cameraId);
}
inline bool GlobalNamespace::OVRPlugin::ResetDefaultExternalCamera() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "ResetDefaultExternalCamera",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::SetDefaultExternalCamera(::StringW cameraName, ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics> cameraIntrinsics,
                                                                 ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics> cameraExtrinsics) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetDefaultExternalCamera", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, cameraName, cameraIntrinsics, cameraExtrinsics);
}
inline bool GlobalNamespace::OVRPlugin::SetExternalCameraProperties(::StringW cameraName, ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics> cameraIntrinsics,
                                                                    ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics> cameraExtrinsics) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetExternalCameraProperties", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, cameraName, cameraIntrinsics, cameraExtrinsics);
}
inline bool GlobalNamespace::OVRPlugin::SetMultimodalHandsControllersSupported(bool value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetMultimodalHandsControllersSupported",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::IsMultimodalHandsControllersSupported() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "IsMultimodalHandsControllersSupported", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::IsInsightPassthroughSupported() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "IsInsightPassthroughSupported", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::InitializeInsightPassthrough() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "InitializeInsightPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::ShutdownInsightPassthrough() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "ShutdownInsightPassthrough",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::IsInsightPassthroughInitialized() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "IsInsightPassthroughInitialized", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::GetInsightPassthroughInitializationState() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "GetInsightPassthroughInitializationState", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::CreateInsightTriangleMesh(int32_t layerId, ::ArrayW<::UnityEngine::Vector3, ::Array<::UnityEngine::Vector3>*> vertices,
                                                                  ::ArrayW<int32_t, ::Array<int32_t>*> triangles, ByRef<uint64_t> meshHandle) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "CreateInsightTriangleMesh", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<::UnityEngine::Vector3, ::Array<::UnityEngine::Vector3>*>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<int32_t, ::Array<int32_t>*>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, layerId, vertices, triangles, meshHandle);
}
inline bool GlobalNamespace::OVRPlugin::DestroyInsightTriangleMesh(uint64_t meshHandle) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "DestroyInsightTriangleMesh", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, meshHandle);
}
inline bool GlobalNamespace::OVRPlugin::AddInsightPassthroughSurfaceGeometry(int32_t layerId, uint64_t meshHandle, ::UnityEngine::Matrix4x4 T_world_model, ByRef<uint64_t> geometryInstanceHandle) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "AddInsightPassthroughSurfaceGeometry", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Matrix4x4>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, layerId, meshHandle, T_world_model, geometryInstanceHandle);
}
inline bool GlobalNamespace::OVRPlugin::DestroyInsightPassthroughGeometryInstance(uint64_t geometryInstanceHandle) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "DestroyInsightPassthroughGeometryInstance",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, geometryInstanceHandle);
}
inline bool GlobalNamespace::OVRPlugin::UpdateInsightPassthroughGeometryTransform(uint64_t geometryInstanceHandle, ::UnityEngine::Matrix4x4 transform) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "UpdateInsightPassthroughGeometryTransform", std::vector<Il2CppClass*>{},
                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Matrix4x4>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, geometryInstanceHandle, transform);
}
inline bool GlobalNamespace::OVRPlugin::SetInsightPassthroughStyle(int32_t layerId, ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2 style) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetInsightPassthroughStyle", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, layerId, style);
}
inline bool GlobalNamespace::OVRPlugin::SetInsightPassthroughStyle(int32_t layerId, ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle style) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetInsightPassthroughStyle", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, layerId, style);
}
inline bool GlobalNamespace::OVRPlugin::CreatePassthroughColorLut(::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels channels, uint32_t resolution,
                                                                  ::GlobalNamespace::__OVRPlugin__PassthroughColorLutData data, ByRef<uint64_t> colorLut) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "CreatePassthroughColorLut", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutData>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, channels, resolution, data, colorLut);
}
inline bool GlobalNamespace::OVRPlugin::DestroyPassthroughColorLut(uint64_t colorLut) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "DestroyPassthroughColorLut", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, colorLut);
}
inline bool GlobalNamespace::OVRPlugin::UpdatePassthroughColorLut(uint64_t colorLut, ::GlobalNamespace::__OVRPlugin__PassthroughColorLutData data) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "UpdatePassthroughColorLut", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutData>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, colorLut, data);
}
inline bool GlobalNamespace::OVRPlugin::SetInsightPassthroughKeyboardHandsIntensity(int32_t layerId, ::GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity intensity) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetInsightPassthroughKeyboardHandsIntensity", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, layerId, intensity);
}
inline ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags GlobalNamespace::OVRPlugin::GetPassthroughCapabilityFlags() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "GetPassthroughCapabilityFlags", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::GetPassthroughCapabilities(ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilities> outCapabilities) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetPassthroughCapabilities", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilities>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, outCapabilities);
}
inline ::GlobalNamespace::__OVRPlugin__Vector3f GlobalNamespace::OVRPlugin::GetBoundaryDimensions(::GlobalNamespace::__OVRPlugin__BoundaryType boundaryType) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetBoundaryDimensions", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Vector3f, false>(nullptr, ___internal_method, boundaryType);
}
inline bool GlobalNamespace::OVRPlugin::GetBoundaryVisible() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetBoundaryVisible",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::SetBoundaryVisible(bool value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetBoundaryVisible", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::OVRPlugin::GetSystemHeadsetType() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSystemHeadsetType",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__SystemHeadset, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Controller GlobalNamespace::OVRPlugin::GetActiveController() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetActiveController",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Controller, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Controller GlobalNamespace::OVRPlugin::GetConnectedControllers() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetConnectedControllers",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Controller, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::OVRPlugin::ToBool(bool b) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "ToBool", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, b);
}
inline ::GlobalNamespace::__OVRPlugin__TrackingOrigin GlobalNamespace::OVRPlugin::GetTrackingOriginType() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetTrackingOriginType",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__TrackingOrigin, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::SetTrackingOriginType(::GlobalNamespace::__OVRPlugin__TrackingOrigin originType) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetTrackingOriginType", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, originType);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::OVRPlugin::GetTrackingCalibratedOrigin() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "GetTrackingCalibratedOrigin", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::SetTrackingCalibratedOrigin() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "SetTrackingCalibratedOrigin", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::RecenterTrackingOrigin(::GlobalNamespace::__OVRPlugin__RecenterFlags flags) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "RecenterTrackingOrigin", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__RecenterFlags>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, flags);
}
inline bool GlobalNamespace::OVRPlugin::get_foveatedRenderingSupported() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "get_foveatedRenderingSupported", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_eyeTrackedFoveatedRenderingSupported() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "get_eyeTrackedFoveatedRenderingSupported", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_eyeTrackedFoveatedRenderingEnabled() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "get_eyeTrackedFoveatedRenderingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_eyeTrackedFoveatedRenderingEnabled(bool value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_eyeTrackedFoveatedRenderingEnabled",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_fixedFoveatedRenderingSupported() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "get_fixedFoveatedRenderingSupported", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel GlobalNamespace::OVRPlugin::get_foveatedRenderingLevel() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_foveatedRenderingLevel",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_foveatedRenderingLevel(::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel value) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_foveatedRenderingLevel", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel GlobalNamespace::OVRPlugin::get_fixedFoveatedRenderingLevel() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "get_fixedFoveatedRenderingLevel", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_fixedFoveatedRenderingLevel(::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel value) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_fixedFoveatedRenderingLevel", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_useDynamicFoveatedRendering() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "get_useDynamicFoveatedRendering", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_useDynamicFoveatedRendering(bool value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_useDynamicFoveatedRendering",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_useDynamicFixedFoveatedRendering() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "get_useDynamicFixedFoveatedRendering", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_useDynamicFixedFoveatedRendering(bool value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_useDynamicFixedFoveatedRendering",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_tiledMultiResSupported() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_tiledMultiResSupported",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__TiledMultiResLevel GlobalNamespace::OVRPlugin::get_tiledMultiResLevel() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_tiledMultiResLevel",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__TiledMultiResLevel, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_tiledMultiResLevel(::GlobalNamespace::__OVRPlugin__TiledMultiResLevel value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_tiledMultiResLevel", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TiledMultiResLevel>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_gpuUtilSupported() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_gpuUtilSupported",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::OVRPlugin::get_gpuUtilLevel() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_gpuUtilLevel",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline ::ArrayW<float_t, ::Array<float_t>*> GlobalNamespace::OVRPlugin::get_systemDisplayFrequenciesAvailable() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "get_systemDisplayFrequenciesAvailable", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::ArrayW<float_t, ::Array<float_t>*>, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::OVRPlugin::get_systemDisplayFrequency() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_systemDisplayFrequency",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_systemDisplayFrequency(float_t value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_systemDisplayFrequency", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_eyeFovPremultipliedAlphaModeEnabled() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "get_eyeFovPremultipliedAlphaModeEnabled", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_eyeFovPremultipliedAlphaModeEnabled(bool value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_eyeFovPremultipliedAlphaModeEnabled",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::GetNodeFrustum2(::GlobalNamespace::__OVRPlugin__Node nodeId, ByRef<::GlobalNamespace::__OVRPlugin__Frustumf2> frustum) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNodeFrustum2", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Frustumf2>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, nodeId, frustum);
}
inline bool GlobalNamespace::OVRPlugin::get_AsymmetricFovEnabled() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_AsymmetricFovEnabled",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_EyeTextureArrayEnabled() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_EyeTextureArrayEnabled",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_localDimmingSupported() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_localDimmingSupported",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_localDimming() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_localDimming",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_localDimming(bool value) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "set_localDimming", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__Handedness GlobalNamespace::OVRPlugin::GetDominantHand() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetDominantHand",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Handedness, false>(nullptr, ___internal_method);
}
/// @param param: ::StringW (default: u"")
/// @param source: ::StringW (default: u"")
inline bool GlobalNamespace::OVRPlugin::SendEvent(::StringW name, ::StringW param, ::StringW source) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SendEvent", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, name, param, source);
}
inline bool GlobalNamespace::OVRPlugin::SetHeadPoseModifier(ByRef<::GlobalNamespace::__OVRPlugin__Quatf> relativeRotation, ByRef<::GlobalNamespace::__OVRPlugin__Vector3f> relativeTranslation) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetHeadPoseModifier", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Quatf>>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, relativeRotation, relativeTranslation);
}
inline bool GlobalNamespace::OVRPlugin::GetHeadPoseModifier(ByRef<::GlobalNamespace::__OVRPlugin__Quatf> relativeRotation, ByRef<::GlobalNamespace::__OVRPlugin__Vector3f> relativeTranslation) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetHeadPoseModifier", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Quatf>>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, relativeRotation, relativeTranslation);
}
inline bool GlobalNamespace::OVRPlugin::IsPerfMetricsSupported(::GlobalNamespace::__OVRPlugin__PerfMetrics perfMetrics) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "IsPerfMetricsSupported", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, perfMetrics);
}
inline ::System::Nullable_1<float_t> GlobalNamespace::OVRPlugin::GetPerfMetricsFloat(::GlobalNamespace::__OVRPlugin__PerfMetrics perfMetrics) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetPerfMetricsFloat", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get() })));
  return ::cordl_internals::RunMethodRethrow<::System::Nullable_1<float_t>, false>(nullptr, ___internal_method, perfMetrics);
}
inline ::System::Nullable_1<int32_t> GlobalNamespace::OVRPlugin::GetPerfMetricsInt(::GlobalNamespace::__OVRPlugin__PerfMetrics perfMetrics) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetPerfMetricsInt", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get() })));
  return ::cordl_internals::RunMethodRethrow<::System::Nullable_1<int32_t>, false>(nullptr, ___internal_method, perfMetrics);
}
inline double_t GlobalNamespace::OVRPlugin::GetTimeInSeconds() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetTimeInSeconds",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<double_t, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::SetColorScaleAndOffset(::UnityEngine::Vector4 colorScale, ::UnityEngine::Vector4 colorOffset, bool applyToAllLayers) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetColorScaleAndOffset", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, colorScale, colorOffset, applyToAllLayers);
}
/// @param param: ::StringW (default: u"")
inline bool GlobalNamespace::OVRPlugin::AddCustomMetadata(::StringW name, ::StringW param) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "AddCustomMetadata", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, name, param);
}
inline bool GlobalNamespace::OVRPlugin::SetDeveloperMode(::GlobalNamespace::__OVRPlugin__Bool active) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetDeveloperMode", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, active);
}
inline float_t GlobalNamespace::OVRPlugin::GetAdaptiveGPUPerformanceScale() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "GetAdaptiveGPUPerformanceScale", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::GetHandTrackingEnabled() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetHandTrackingEnabled",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::GetHandState(::GlobalNamespace::__OVRPlugin__Step stepId, ::GlobalNamespace::__OVRPlugin__Hand hand,
                                                     ByRef<::GlobalNamespace::__OVRPlugin__HandState> handState) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetHandState", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__HandState>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, stepId, hand, handState);
}
inline bool GlobalNamespace::OVRPlugin::IsValidBone(::GlobalNamespace::__OVRPlugin__BoneId bone, ::GlobalNamespace::__OVRPlugin__SkeletonType skeletonType) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "IsValidBone", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoneId>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SkeletonType>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, bone, skeletonType);
}
inline bool GlobalNamespace::OVRPlugin::GetSkeleton(::GlobalNamespace::__OVRPlugin__SkeletonType skeletonType, ByRef<::GlobalNamespace::__OVRPlugin__Skeleton> skeleton) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSkeleton", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SkeletonType>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Skeleton>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, skeletonType, skeleton);
}
inline bool GlobalNamespace::OVRPlugin::GetSkeleton2(::GlobalNamespace::__OVRPlugin__SkeletonType skeletonType, ByRef<::GlobalNamespace::__OVRPlugin__Skeleton2> skeleton) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSkeleton2", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SkeletonType>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Skeleton2>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, skeletonType, skeleton);
}
inline bool GlobalNamespace::OVRPlugin::get_bodyTrackingSupported() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_bodyTrackingSupported",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_bodyTrackingEnabled() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_bodyTrackingEnabled",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::GetBodyState(::GlobalNamespace::__OVRPlugin__Step stepId, ByRef<::GlobalNamespace::__OVRPlugin__BodyState> bodyState) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetBodyState", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__BodyState>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, stepId, bodyState);
}
inline bool GlobalNamespace::OVRPlugin::GetMesh(::GlobalNamespace::__OVRPlugin__MeshType meshType, ByRef<::GlobalNamespace::__OVRPlugin__Mesh*> mesh) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetMesh", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__MeshType>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Mesh*>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, meshType, mesh);
}
inline bool GlobalNamespace::OVRPlugin::StartKeyboardTracking(uint64_t trackedKeyboardId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "StartKeyboardTracking", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, trackedKeyboardId);
}
inline bool GlobalNamespace::OVRPlugin::StopKeyboardTracking() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "StopKeyboardTracking",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::GetKeyboardState(::GlobalNamespace::__OVRPlugin__Step stepId, ByRef<::GlobalNamespace::__OVRPlugin__KeyboardState> keyboardState) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetKeyboardState", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__KeyboardState>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, stepId, keyboardState);
}
inline bool GlobalNamespace::OVRPlugin::GetSystemKeyboardDescription(::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags keyboardQueryFlags,
                                                                     ByRef<::GlobalNamespace::__OVRPlugin__KeyboardDescription> keyboardDescription) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSystemKeyboardDescription", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__KeyboardDescription>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, keyboardQueryFlags, keyboardDescription);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::CreateVirtualKeyboard(::GlobalNamespace::__OVRPlugin__VirtualKeyboardCreateInfo createInfo) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "CreateVirtualKeyboard", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardCreateInfo>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, createInfo);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::DestroyVirtualKeyboard() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "DestroyVirtualKeyboard",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::SendVirtualKeyboardInput(::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo inputInfo,
                                                                                                   ByRef<::GlobalNamespace::__OVRPlugin__Posef> interactorRootPose) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SendVirtualKeyboardInput", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, inputInfo, interactorRootPose);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::ChangeVirtualKeyboardTextContext(::StringW textContext) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "ChangeVirtualKeyboardTextContext",
                                               std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, textContext);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::CreateVirtualKeyboardSpace(::GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo createInfo,
                                                                                                     ByRef<uint64_t> keyboardSpace) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "CreateVirtualKeyboardSpace", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, createInfo, keyboardSpace);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::SuggestVirtualKeyboardLocation(::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo locationInfo) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SuggestVirtualKeyboardLocation", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, locationInfo);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::GetVirtualKeyboardScale(ByRef<float_t> scale) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetVirtualKeyboardScale", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, scale);
}
inline ::GlobalNamespace::__OVRPlugin__Result
GlobalNamespace::OVRPlugin::GetVirtualKeyboardModelAnimationStates(ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStates> animationStates) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetVirtualKeyboardModelAnimationStates", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStates>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, animationStates);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::GetVirtualKeyboardDirtyTextures(ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIds> textureIds) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetVirtualKeyboardDirtyTextures", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIds>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, textureIds);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::GetVirtualKeyboardTextureData(uint64_t textureId,
                                                                                                        ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData> textureData) {
  static auto* ___internal_method = THROW_UNLESS((
      ::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetVirtualKeyboardTextureData", std::vector<Il2CppClass*>{},
                                 ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                   ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, textureId, textureData);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::SetVirtualKeyboardModelVisibility(ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility> visibility) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetVirtualKeyboardModelVisibility", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, visibility);
}
inline bool GlobalNamespace::OVRPlugin::get_faceTrackingEnabled() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_faceTrackingEnabled",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_faceTrackingSupported() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_faceTrackingSupported",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::GetFaceStateInternal(::GlobalNamespace::__OVRPlugin__Step stepId, int32_t frameIndex, ByRef<::GlobalNamespace::__OVRPlugin__FaceState> faceState) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetFaceStateInternal", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__FaceState>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, stepId, frameIndex, faceState);
}
inline bool GlobalNamespace::OVRPlugin::GetFaceState(::GlobalNamespace::__OVRPlugin__Step stepId, int32_t frameIndex, ByRef<::GlobalNamespace::__OVRPlugin__FaceState> faceState) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetFaceState", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__FaceState>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, stepId, frameIndex, faceState);
}
inline bool GlobalNamespace::OVRPlugin::get_eyeTrackingEnabled() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_eyeTrackingEnabled",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_eyeTrackingSupported() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "get_eyeTrackingSupported",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::GetEyeGazesState(::GlobalNamespace::__OVRPlugin__Step stepId, int32_t frameIndex, ByRef<::GlobalNamespace::__OVRPlugin__EyeGazesState> eyeGazesState) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetEyeGazesState", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__EyeGazesState>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, stepId, frameIndex, eyeGazesState);
}
inline bool GlobalNamespace::OVRPlugin::StartEyeTracking() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "StartEyeTracking",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::StopEyeTracking() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "StopEyeTracking",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::StartFaceTracking() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "StartFaceTracking",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::StopFaceTracking() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "StopFaceTracking",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::StartBodyTracking() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "StartBodyTracking",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::StopBodyTracking() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "StopBodyTracking",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline int32_t GlobalNamespace::OVRPlugin::GetLocalTrackingSpaceRecenterCount() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "GetLocalTrackingSpaceRecenterCount", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::GetSystemHmd3DofModeEnabled() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                                                                             "GetSystemHmd3DofModeEnabled", std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::SetClientColorDesc(::GlobalNamespace::__OVRPlugin__ColorSpace colorSpace) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetClientColorDesc", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ColorSpace>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, colorSpace);
}
inline ::GlobalNamespace::__OVRPlugin__ColorSpace GlobalNamespace::OVRPlugin::GetHmdColorDesc() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetHmdColorDesc",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__ColorSpace, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::PollEvent(ByRef<::GlobalNamespace::__OVRPlugin__EventDataBuffer> eventDataBuffer) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "PollEvent", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__EventDataBuffer>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, eventDataBuffer);
}
inline uint64_t GlobalNamespace::OVRPlugin::GetNativeOpenXRInstance() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNativeOpenXRInstance",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<uint64_t, false>(nullptr, ___internal_method);
}
inline uint64_t GlobalNamespace::OVRPlugin::GetNativeOpenXRSession() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetNativeOpenXRSession",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<uint64_t, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::SetKeyboardOverlayUV(::GlobalNamespace::__OVRPlugin__Vector2f uv) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetKeyboardOverlayUV", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector2f>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, uv);
}
inline bool GlobalNamespace::OVRPlugin::CreateSpatialAnchor(::GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo createInfo, ByRef<uint64_t> requestId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "CreateSpatialAnchor", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, createInfo, requestId);
}
inline bool GlobalNamespace::OVRPlugin::SetSpaceComponentStatus(uint64_t space, ::GlobalNamespace::__OVRPlugin__SpaceComponentType componentType, bool enable, double_t timeout,
                                                                ByRef<uint64_t> requestId) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetSpaceComponentStatus", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceComponentType>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, componentType, enable, timeout, requestId);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceComponentStatus(uint64_t space, ::GlobalNamespace::__OVRPlugin__SpaceComponentType componentType, ByRef<bool> enabled, ByRef<bool> changePending) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceComponentStatus", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceComponentType>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<bool>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, componentType, enabled, changePending);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::GetSpaceComponentStatusInternal(uint64_t space, ::GlobalNamespace::__OVRPlugin__SpaceComponentType componentType,
                                                                                                          ByRef<bool> enabled, ByRef<bool> changePending) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceComponentStatusInternal", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceComponentType>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<bool>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<bool>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, componentType, enabled, changePending);
}
inline bool GlobalNamespace::OVRPlugin::EnumerateSpaceSupportedComponents(
    uint64_t space, ByRef<uint32_t> numSupportedComponents,
    ::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType, ::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*> supportedComponents) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "EnumerateSpaceSupportedComponents", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{
          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get(),
          ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType, ::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, numSupportedComponents, supportedComponents);
}
inline bool GlobalNamespace::OVRPlugin::SaveSpace(uint64_t space, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation location, ::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode mode,
                                                  ByRef<uint64_t> requestId) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SaveSpace", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, location, mode, requestId);
}
inline bool GlobalNamespace::OVRPlugin::EraseSpace(uint64_t space, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation location, ByRef<uint64_t> requestId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "EraseSpace", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, location, requestId);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceUuid(uint64_t space, ByRef<::System::Guid> uuid) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceUuid", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::System::Guid>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, uuid);
}
inline bool GlobalNamespace::OVRPlugin::QuerySpaces(::GlobalNamespace::__OVRPlugin__SpaceQueryInfo queryInfo, ByRef<uint64_t> requestId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "QuerySpaces", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceQueryInfo>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, queryInfo, requestId);
}
inline bool GlobalNamespace::OVRPlugin::RetrieveSpaceQueryResults(uint64_t requestId, ByRef<::Unity::Collections::NativeArray_1<::GlobalNamespace::__OVRPlugin__SpaceQueryResult>> results,
                                                                  ::Unity::Collections::Allocator allocator) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "RetrieveSpaceQueryResults", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::Unity::Collections::NativeArray_1<::GlobalNamespace::__OVRPlugin__SpaceQueryResult>>>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::Allocator>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, requestId, results, allocator);
}
inline bool
GlobalNamespace::OVRPlugin::RetrieveSpaceQueryResults(uint64_t requestId,
                                                      ByRef<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceQueryResult, ::Array<::GlobalNamespace::__OVRPlugin__SpaceQueryResult>*>> results) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "RetrieveSpaceQueryResults", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<
                                            ByRef<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceQueryResult, ::Array<::GlobalNamespace::__OVRPlugin__SpaceQueryResult>*>>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, requestId, results);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::SaveSpaceList(::Unity::Collections::NativeArray_1<uint64_t> spaces,
                                                                                        ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation location, ByRef<uint64_t> requestId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SaveSpaceList", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<uint64_t>>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, spaces, location, requestId);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceUserId(uint64_t spaceUserHandle, ByRef<uint64_t> spaceUserId) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceUserId", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, spaceUserHandle, spaceUserId);
}
inline bool GlobalNamespace::OVRPlugin::CreateSpaceUser(uint64_t spaceUserId, ByRef<uint64_t> spaceUserHandle) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "CreateSpaceUser", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, spaceUserId, spaceUserHandle);
}
inline bool GlobalNamespace::OVRPlugin::DestroySpaceUser(uint64_t spaceUserHandle) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "DestroySpaceUser", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, spaceUserHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::ShareSpaces(::Unity::Collections::NativeArray_1<uint64_t> spaces, ::Unity::Collections::NativeArray_1<uint64_t> userHandles,
                                                                                      ByRef<uint64_t> requestId) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "ShareSpaces", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<uint64_t>>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<uint64_t>>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, spaces, userHandles, requestId);
}
inline bool GlobalNamespace::OVRPlugin::TryLocateSpace(uint64_t space, ::GlobalNamespace::__OVRPlugin__TrackingOrigin baseOrigin, ByRef<::GlobalNamespace::__OVRPlugin__Posef> pose) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "TryLocateSpace", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, baseOrigin, pose);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::OVRPlugin::LocateSpace(uint64_t space, ::GlobalNamespace::__OVRPlugin__TrackingOrigin baseOrigin) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "LocateSpace", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method, space, baseOrigin);
}
inline bool GlobalNamespace::OVRPlugin::TryLocateSpace(uint64_t space, ::GlobalNamespace::__OVRPlugin__TrackingOrigin baseOrigin, ByRef<::GlobalNamespace::__OVRPlugin__Posef> pose,
                                                       ByRef<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags> locationFlags) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "TryLocateSpace", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, baseOrigin, pose, locationFlags);
}
inline bool GlobalNamespace::OVRPlugin::DestroySpace(uint64_t space) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "DestroySpace", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceContainer(uint64_t space, ByRef<::ArrayW<::System::Guid, ::Array<::System::Guid>*>> containerUuids) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceContainer", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::ArrayW<::System::Guid, ::Array<::System::Guid>*>>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, containerUuids);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceBoundingBox2D(uint64_t space, ByRef<::GlobalNamespace::__OVRPlugin__Rectf> rect) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceBoundingBox2D", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Rectf>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, rect);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceBoundingBox3D(uint64_t space, ByRef<::GlobalNamespace::__OVRPlugin__Boundsf> bounds) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceBoundingBox3D", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Boundsf>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, bounds);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceSemanticLabels(uint64_t space, ByRef<::StringW> labels) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceSemanticLabels", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::StringW>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, labels);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceRoomLayout(uint64_t space, ByRef<::GlobalNamespace::__OVRPlugin__RoomLayout> roomLayout) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceRoomLayout", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__RoomLayout>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, roomLayout);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceBoundary2DCount(uint64_t space, ByRef<int32_t> count) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceBoundary2DCount", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, count);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceBoundary2D(uint64_t space, ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2> boundary) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceBoundary2D", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, boundary);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceBoundary2D(uint64_t space, ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2> boundary, ByRef<int32_t> count) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceBoundary2D", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, boundary, count);
}
inline ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2> GlobalNamespace::OVRPlugin::GetSpaceBoundary2D(uint64_t space, ::Unity::Collections::Allocator allocator) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceBoundary2D", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::Allocator>::get() })));
  return ::cordl_internals::RunMethodRethrow<::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>, false>(nullptr, ___internal_method, space, allocator);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceBoundary2D(uint64_t space, ByRef<::ArrayW<::UnityEngine::Vector2, ::Array<::UnityEngine::Vector2>*>> boundary) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceBoundary2D", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::ArrayW<::UnityEngine::Vector2, ::Array<::UnityEngine::Vector2>*>>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, boundary);
}
inline bool GlobalNamespace::OVRPlugin::RequestSceneCapture(::StringW requestString, ByRef<uint64_t> requestId) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "RequestSceneCapture", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, requestString, requestId);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceTriangleMeshCounts(uint64_t space, ByRef<int32_t> vertexCount, ByRef<int32_t> triangleCount) {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
      ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceTriangleMeshCounts", std::vector<Il2CppClass*>{},
      ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get(),
                                        ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, vertexCount, triangleCount);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceTriangleMesh(uint64_t space, ::Unity::Collections::NativeArray_1<::UnityEngine::Vector3> vertices,
                                                             ::Unity::Collections::NativeArray_1<int32_t> triangles) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetSpaceTriangleMesh", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<int32_t>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, vertices, triangles);
}
inline bool GlobalNamespace::OVRPlugin::GetLayerRecommendedResolution(int32_t layerId, ByRef<::GlobalNamespace::__OVRPlugin__Sizei> recommendedSize) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetLayerRecommendedResolution", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, layerId, recommendedSize);
}
inline bool GlobalNamespace::OVRPlugin::GetEyeLayerRecommendedResolution(ByRef<::GlobalNamespace::__OVRPlugin__Sizei> recommendedSize) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetEyeLayerRecommendedResolution", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, recommendedSize);
}
inline ::ArrayW<::StringW, ::Array<::StringW>*> GlobalNamespace::OVRPlugin::GetRenderModelPaths() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetRenderModelPaths",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<::ArrayW<::StringW, ::Array<::StringW>*>, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::GetRenderModelProperties(::StringW modelPath, ByRef<::GlobalNamespace::__OVRPlugin__RenderModelProperties> modelProperties) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetRenderModelProperties", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(),
                                                                    ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__RenderModelProperties>>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, modelPath, modelProperties);
}
inline ::ArrayW<uint8_t, ::Array<uint8_t>*> GlobalNamespace::OVRPlugin::LoadRenderModel(uint64_t modelKey) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "LoadRenderModel", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get() })));
  return ::cordl_internals::RunMethodRethrow<::ArrayW<uint8_t, ::Array<uint8_t>*>, false>(nullptr, ___internal_method, modelKey);
}
inline void GlobalNamespace::OVRPlugin::OnEditorShutdown() {
  static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "OnEditorShutdown",
                                                                             std::vector<Il2CppClass*>{}, ::std::vector<Il2CppType const*>{})));
  return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::GetPassthroughPreferences(ByRef<::GlobalNamespace::__OVRPlugin__PassthroughPreferences> preferences) {
  static auto* ___internal_method = THROW_UNLESS(
      (::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "GetPassthroughPreferences", std::vector<Il2CppClass*>{},
                                  ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PassthroughPreferences>>::get() })));
  return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, preferences);
}
inline bool GlobalNamespace::OVRPlugin::SetEyeBufferSharpenType(::GlobalNamespace::__OVRPlugin__LayerSharpenType sharpenType) {
  static auto* ___internal_method =
      THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(), "SetEyeBufferSharpenType", std::vector<Il2CppClass*>{},
                                               ::std::vector<Il2CppType const*>{ ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerSharpenType>::get() })));
  return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, sharpenType);
}
// Ctor Parameters []
constexpr ::GlobalNamespace::OVRPlugin::OVRPlugin() {}
#ifndef CORDL_NO_IMPL_INCLUDE
#endif
