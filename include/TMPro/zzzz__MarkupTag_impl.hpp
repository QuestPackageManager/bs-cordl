#pragma once
#include "TMPro/zzzz__MarkupTag_def.hpp"
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::TMPro::MarkupTag::MarkupTag(int32_t value__) noexcept {
  this->value__ = value__;
}
// Ctor Parameters []
constexpr ::TMPro::MarkupTag::MarkupTag() {}
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::BOLD{ static_cast<int32_t>(0x42) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_BOLD{ static_cast<int32_t>(0x64d) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::ITALIC{ static_cast<int32_t>(0x49) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_ITALIC{ static_cast<int32_t>(0x646) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::UNDERLINE{ static_cast<int32_t>(0x55) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_UNDERLINE{ static_cast<int32_t>(0x65a) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::STRIKETHROUGH{ static_cast<int32_t>(0x53) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_STRIKETHROUGH{ static_cast<int32_t>(0x65c) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::MARK{ static_cast<int32_t>(0x292f75) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_MARK{ static_cast<int32_t>(0x36f95da) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SUBSCRIPT{ static_cast<int32_t>(0x167e4) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_SUBSCRIPT{ static_cast<int32_t>(0x1b02eb) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SUPERSCRIPT{ static_cast<int32_t>(0x167f6) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_SUPERSCRIPT{ static_cast<int32_t>(0x1b02f9) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::COLOR{ static_cast<int32_t>(0x4e3381d) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_COLOR{ static_cast<int32_t>(0x71c96d92) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::ALPHA{ static_cast<int32_t>(0x47af054) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::A{ static_cast<int32_t>(0x41) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_A{ static_cast<int32_t>(0x64e) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SIZE{ static_cast<int32_t>(0x2eb625) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_SIZE{ static_cast<int32_t>(0x37b920a) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SPRITE{ static_cast<int32_t>(0xc4e67de9) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::NO_BREAK{ static_cast<int32_t>(0x2b96d1) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_NO_BREAK{ static_cast<int32_t>(0x36d097e) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::STYLE{ static_cast<int32_t>(0x5f9bd17) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_STYLE{ static_cast<int32_t>(0x72e6f418) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::FONT{ static_cast<int32_t>(0x277753) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_FONT{ static_cast<int32_t>(0x37128fc) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_MATERIAL{ static_cast<int32_t>(0xbe648664) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::LINK{ static_cast<int32_t>(0x288780) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_LINK{ static_cast<int32_t>(0x37038af) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::FONT_WEIGHT{ static_cast<int32_t>(0x8f5a791e) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_FONT_WEIGHT{ static_cast<int32_t>(0xd2d23291) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::NO_PARSE{ static_cast<int32_t>(0xe7ae3cb4) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_NO_PARSE{ static_cast<int32_t>(0xee78743b) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::POSITION{ static_cast<int32_t>(0x14dac) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_POSITION{ static_cast<int32_t>(0x1b2023) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::VERTICAL_OFFSET{ static_cast<int32_t>(0x745ef45b) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_VERTICAL_OFFSET{ static_cast<int32_t>(0xff568194) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SPACE{ static_cast<int32_t>(0x5f72764) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_SPACE{ static_cast<int32_t>(0x72e9022b) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::PAGE{ static_cast<int32_t>(0x2adb73) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_PAGE{ static_cast<int32_t>(0x37f71dc) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::ALIGN{ static_cast<int32_t>(0x47a86ed) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_ALIGN{ static_cast<int32_t>(0x72343fa2) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::WIDTH{ static_cast<int32_t>(0x64e48e6) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_WIDTH{ static_cast<int32_t>(0x72a5aa29) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::GRADIENT{ static_cast<int32_t>(0x88ce15e6) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_GRADIENT{ static_cast<int32_t>(0x9176b2c9) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::CHARACTER_SPACE{ static_cast<int32_t>(0xa1903fc7) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_CHARACTER_SPACE{ static_cast<int32_t>(0xace2bca8) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::MONOSPACE{ static_cast<int32_t>(0xb01dd609) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_MONOSPACE{ static_cast<int32_t>(0x9e50e566) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::CLASS{ static_cast<int32_t>(0x4e4fbee) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::INDENT{ static_cast<int32_t>(0xa5c050bc) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_INDENT{ static_cast<int32_t>(0xa6c747d3) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::LINE_INDENT{ static_cast<int32_t>(0xcdaced1f) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_LINE_INDENT{ static_cast<int32_t>(0x5989790) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::MARGIN{ static_cast<int32_t>(0xaf32f89e) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_MARGIN{ static_cast<int32_t>(0x9dac6cf1) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::MARGIN_LEFT{ static_cast<int32_t>(0xefbb5ce8) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::MARGIN_RIGHT{ static_cast<int32_t>(0xe554f6f3) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::LINE_HEIGHT{ static_cast<int32_t>(0xd05efa5c) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_LINE_HEIGHT{ static_cast<int32_t>(0xbf2aad3) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::ACTION{ static_cast<int32_t>(0x9312449e) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_ACTION{ static_cast<int32_t>(0xb93c7ef1) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SCALE{ static_cast<int32_t>(0x5fe5278) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_SCALE{ static_cast<int32_t>(0x72f142b7) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::ROTATE{ static_cast<int32_t>(0xc4651799) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_ROTATE{ static_cast<int32_t>(0xd26babf6) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::LOWERCASE{ static_cast<int32_t>(0xa62e8917) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_LOWERCASE{ static_cast<int32_t>(0xa97f2798) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::ALLCAPS{ static_cast<int32_t>(0xd0298a0) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_ALLCAPS{ static_cast<int32_t>(0xd078112f) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::UPPERCASE{ static_cast<int32_t>(0xedcbd276) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_UPPERCASE{ static_cast<int32_t>(0xdd49c439) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SMALLCAPS{ static_cast<int32_t>(0xd256d1de) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_SMALLCAPS{ static_cast<int32_t>(0xbea90d1) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::LIGA{ static_cast<int32_t>(0x2886e3) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_LIGA{ static_cast<int32_t>(0x3703a4c) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::FRAC{ static_cast<int32_t>(0x27a676) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SLASH_FRAC{ static_cast<int32_t>(0x3719259) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::NAME{ static_cast<int32_t>(0x2be0e7) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::INDEX{ static_cast<int32_t>(0x505d3fe) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::TINT{ static_cast<int32_t>(0x2d2c87) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::ANIM{ static_cast<int32_t>(0x22d74b) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::MATERIAL{ static_cast<int32_t>(0x313400cb) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::HREF{ static_cast<int32_t>(0x26afb9) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::ANGLE{ static_cast<int32_t>(0x47db7c1) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::RED{ static_cast<int32_t>(0x165f3) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::GREEN{ static_cast<int32_t>(0x53084fb) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::BLUE{ static_cast<int32_t>(0x257e7e) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::YELLOW{ static_cast<int32_t>(0xcb66f684) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::ORANGE{ static_cast<int32_t>(0xbdec4a70) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::BLACK{ static_cast<int32_t>(0x4d51a27) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::WHITE{ static_cast<int32_t>(0x64c8d87) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::PURPLE{ static_cast<int32_t>(0xb57b1fce) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::BR{ static_cast<int32_t>(0x8d0) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::ZWSP{ static_cast<int32_t>(0x322cae) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::NBSP{ static_cast<int32_t>(0x2bc72f) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::SHY{ static_cast<int32_t>(0x16a02) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::LEFT{ static_cast<int32_t>(0x28989b) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::RIGHT{ static_cast<int32_t>(0x5f4ec60) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::CENTER{ static_cast<int32_t>(0xa12989cb) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::JUSTIFIED{ static_cast<int32_t>(0x30b3d31f) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::FLUSH{ static_cast<int32_t>(0x5196c24) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::NONE{ static_cast<int32_t>(0x2b984a) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::PLUS{ static_cast<int32_t>(0x2b) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::MINUS{ static_cast<int32_t>(0x2d) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::PX{ static_cast<int32_t>(0xa08) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::PLUS_PX{ static_cast<int32_t>(0xc163) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::MINUS_PX{ static_cast<int32_t>(0xb965) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::EM{ static_cast<int32_t>(0x8a8) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::PLUS_EM{ static_cast<int32_t>(0xbfc3) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::MINUS_EM{ static_cast<int32_t>(0xb6c5) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::PCT{ static_cast<int32_t>(0x14c27) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::PLUS_PCT{ static_cast<int32_t>(0x18f02c) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::MINUS_PCT{ static_cast<int32_t>(0x17e96a) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::PERCENTAGE{ static_cast<int32_t>(0x25) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::PLUS_PERCENTAGE{ static_cast<int32_t>(0x5ae) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::MINUS_PERCENTAGE{ static_cast<int32_t>(0x5e8) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::TRUE{ static_cast<int32_t>(0x2cbd36) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::FALSE{ static_cast<int32_t>(0x51772dd) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::INVALID{ static_cast<int32_t>(0x5e7f8411) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::NORMAL{ static_cast<int32_t>(0xb97550f3) };
constexpr ::TMPro::MarkupTag TMPro::MarkupTag::DEFAULT{ static_cast<int32_t>(0xdafcb04b) };
