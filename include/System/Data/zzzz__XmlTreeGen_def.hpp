#pragma once
// IWYU pragma private; include "System/Data/XmlTreeGen.hpp"
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "../../cordl_internals/cordl_internals.hpp"
CORDL_MODULE_INIT
#include "System/Data/zzzz__SchemaFormat_def.hpp"
#include "System/zzzz__Object_def.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
#include <cstdint>
CORDL_MODULE_EXPORT(XmlTreeGen)
namespace System::Collections {
class ArrayList;
}
namespace System::Collections {
class Hashtable;
}
namespace System::ComponentModel {
class PropertyDescriptor;
}
namespace System::Data {
struct AcceptRejectRule;
}
namespace System::Data {
class DataColumn;
}
namespace System::Data {
class DataRelation;
}
namespace System::Data {
class DataSet;
}
namespace System::Data {
class DataTable;
}
namespace System::Data {
class ForeignKeyConstraint;
}
namespace System::Data {
class PropertyCollection;
}
namespace System::Data {
struct Rule;
}
namespace System::Data {
struct SchemaFormat;
}
namespace System::Data {
class UniqueConstraint;
}
namespace System::Xml {
class XmlDocument;
}
namespace System::Xml {
class XmlElement;
}
namespace System::Xml {
class XmlWriter;
}
namespace System {
template <typename TInput, typename TOutput> class Converter_2;
}
namespace System {
class Object;
}
namespace System {
class Type;
}
// Forward declare root types
namespace System::Data {
class XmlTreeGen;
}
// Write type traits
MARK_REF_PTR_T(::System::Data::XmlTreeGen);
// Dependencies System.Data.SchemaFormat, System.Object
namespace System::Data {
// Is value type: false
// CS Name: System.Data.XmlTreeGen
class CORDL_TYPE XmlTreeGen : public ::System::Object {
public:
  // Declarations
  /// @brief Field _autogenerated, offset 0x20, size 0x8
  __declspec(property(get = __cordl_internal_get__autogenerated, put = __cordl_internal_set__autogenerated)) ::System::Collections::Hashtable* _autogenerated;

  /// @brief Field _constraintNames, offset 0x10, size 0x8
  __declspec(property(get = __cordl_internal_get__constraintNames, put = __cordl_internal_set__constraintNames)) ::System::Collections::ArrayList* _constraintNames;

  /// @brief Field _constraintSeparator, offset 0x80, size 0x8
  __declspec(property(get = __cordl_internal_get__constraintSeparator, put = __cordl_internal_set__constraintSeparator)) ::System::Xml::XmlElement* _constraintSeparator;

  /// @brief Field _dc, offset 0x48, size 0x8
  __declspec(property(get = __cordl_internal_get__dc, put = __cordl_internal_set__dc)) ::System::Xml::XmlDocument* _dc;

  /// @brief Field _ds, offset 0x30, size 0x8
  __declspec(property(get = __cordl_internal_get__ds, put = __cordl_internal_set__ds)) ::System::Data::DataSet* _ds;

  /// @brief Field _dsElement, offset 0x78, size 0x8
  __declspec(property(get = __cordl_internal_get__dsElement, put = __cordl_internal_set__dsElement)) ::System::Xml::XmlElement* _dsElement;

  /// @brief Field _fileExt, offset 0x70, size 0x8
  __declspec(property(get = __cordl_internal_get__fileExt, put = __cordl_internal_set__fileExt)) ::StringW _fileExt;

  /// @brief Field _fileName, offset 0x68, size 0x8
  __declspec(property(get = __cordl_internal_get__fileName, put = __cordl_internal_set__fileName)) ::StringW _fileName;

  /// @brief Field _filePath, offset 0x60, size 0x8
  __declspec(property(get = __cordl_internal_get__filePath, put = __cordl_internal_set__filePath)) ::StringW _filePath;

  /// @brief Field _namespaces, offset 0x18, size 0x8
  __declspec(property(get = __cordl_internal_get__namespaces, put = __cordl_internal_set__namespaces)) ::System::Collections::Hashtable* _namespaces;

  /// @brief Field _prefixCount, offset 0x58, size 0x4
  __declspec(property(get = __cordl_internal_get__prefixCount, put = __cordl_internal_set__prefixCount)) int32_t _prefixCount;

  /// @brief Field _prefixes, offset 0x28, size 0x8
  __declspec(property(get = __cordl_internal_get__prefixes, put = __cordl_internal_set__prefixes)) ::System::Collections::Hashtable* _prefixes;

  /// @brief Field _relations, offset 0x40, size 0x8
  __declspec(property(get = __cordl_internal_get__relations, put = __cordl_internal_set__relations)) ::System::Collections::ArrayList* _relations;

  /// @brief Field _sRoot, offset 0x50, size 0x8
  __declspec(property(get = __cordl_internal_get__sRoot, put = __cordl_internal_set__sRoot)) ::System::Xml::XmlElement* _sRoot;

  /// @brief Field _schFormat, offset 0x5c, size 0x4
  __declspec(property(get = __cordl_internal_get__schFormat, put = __cordl_internal_set__schFormat)) ::System::Data::SchemaFormat _schFormat;

  /// @brief Field _tables, offset 0x38, size 0x8
  __declspec(property(get = __cordl_internal_get__tables, put = __cordl_internal_set__tables)) ::System::Collections::ArrayList* _tables;

  /// @brief Field _targetConverter, offset 0x88, size 0x8
  __declspec(property(get = __cordl_internal_get__targetConverter, put = __cordl_internal_set__targetConverter)) ::System::Converter_2<::System::Type*, ::StringW>* _targetConverter;

  /// @brief Method AddColumnProperties, addr 0x41c3530, size 0x60c, virtual false, abstract: false, final false
  inline void AddColumnProperties(::System::Data::DataColumn* col, ::System::Xml::XmlElement* root);

  /// @brief Method AddExtendedProperties, addr 0x41b7a80, size 0x8, virtual false, abstract: false, final false
  static inline void AddExtendedProperties(::System::Data::PropertyCollection* props, ::System::Xml::XmlElement* node);

  /// @brief Method AddExtendedProperties, addr 0x41b7a88, size 0x774, virtual false, abstract: false, final false
  static inline void AddExtendedProperties(::System::Data::PropertyCollection* props, ::System::Xml::XmlElement* node, ::System::Type* type);

  /// @brief Method AddXdoProperties, addr 0x41b81fc, size 0x1b0, virtual false, abstract: false, final false
  inline void AddXdoProperties(::System::Object* instance, ::System::Xml::XmlElement* root, ::System::Xml::XmlDocument* xd);

  /// @brief Method AddXdoProperty, addr 0x41b83ac, size 0x92c, virtual false, abstract: false, final false
  inline void AddXdoProperty(::System::ComponentModel::PropertyDescriptor* pd, ::System::Object* instance, ::System::Xml::XmlElement* root, ::System::Xml::XmlDocument* xd);

  /// @brief Method AppendChildWithoutRef, addr 0x41bf3b0, size 0xb8, virtual false, abstract: false, final false
  inline void AppendChildWithoutRef(::System::Xml::XmlElement* node, ::StringW Namespace, ::System::Xml::XmlElement* el, ::StringW refString);

  /// @brief Method AutoGenerated, addr 0x41bb73c, size 0x574, virtual false, abstract: false, final false
  static inline bool AutoGenerated(::System::Data::DataColumn* col);

  /// @brief Method AutoGenerated, addr 0x41bbcb0, size 0xc, virtual false, abstract: false, final false
  inline bool AutoGenerated(::System::Data::ForeignKeyConstraint* fk);

  /// @brief Method AutoGenerated, addr 0x41c4ec8, size 0x140, virtual false, abstract: false, final false
  static inline bool AutoGenerated(::System::Data::ForeignKeyConstraint* fk, bool checkRelation);

  /// @brief Method AutoGenerated, addr 0x41c4de4, size 0xe4, virtual false, abstract: false, final false
  static inline bool AutoGenerated(::System::Data::DataRelation* rel);

  /// @brief Method AutoGenerated, addr 0x41bbcbc, size 0xd4, virtual false, abstract: false, final false
  static inline bool AutoGenerated(::System::Data::UniqueConstraint* unique);

  /// @brief Method CreateRelations, addr 0x41bc114, size 0x358, virtual false, abstract: false, final false
  inline void CreateRelations(::System::Data::DataTable* dt);

  /// @brief Method CreateTablesHierarchy, addr 0x41bbd90, size 0x384, virtual false, abstract: false, final false
  inline void CreateTablesHierarchy(::System::Data::DataTable* dt);

  /// @brief Method CreateToplevelTables, addr 0x41bc46c, size 0x2ec, virtual false, abstract: false, final false
  inline ::ArrayW<::System::Data::DataTable*, ::Array<::System::Data::DataTable*>*> CreateToplevelTables();

  /// @brief Method FillDataSetElement, addr 0x41bed88, size 0x620, virtual false, abstract: false, final false
  inline ::System::Xml::XmlElement* FillDataSetElement(::System::Xml::XmlDocument* xd, ::System::Data::DataSet* ds, ::System::Data::DataTable* dt);

  /// @brief Method FindSimpleType, addr 0x41c2d2c, size 0xf4, virtual false, abstract: false, final false
  static inline ::System::Xml::XmlElement* FindSimpleType(::System::Xml::XmlElement* schema, ::StringW name);

  /// @brief Method FindTargetNamespace, addr 0x41c3b3c, size 0x110, virtual false, abstract: false, final false
  inline ::StringW FindTargetNamespace(::System::Data::DataTable* table);

  /// @brief Method FindTypeNode, addr 0x41c475c, size 0x1c8, virtual false, abstract: false, final false
  inline ::System::Xml::XmlElement* FindTypeNode(::System::Xml::XmlElement* node, ::StringW strType);

  /// @brief Method GenerateConstraintNames, addr 0x41ba1b4, size 0x2e4, virtual false, abstract: false, final false
  inline void GenerateConstraintNames(::System::Data::DataSet* ds);

  /// @brief Method GenerateConstraintNames, addr 0x41b9ba0, size 0x51c, virtual false, abstract: false, final false
  inline void GenerateConstraintNames(::System::Data::DataTable* table, bool fromTable);

  /// @brief Method GenerateConstraintNames, addr 0x41ba0bc, size 0xf8, virtual false, abstract: false, final false
  inline void GenerateConstraintNames(::System::Collections::ArrayList* tables);

  /// @brief Method GetSchema, addr 0x41c2e20, size 0x294, virtual false, abstract: false, final false
  inline ::System::Xml::XmlElement* GetSchema(::StringW NamespaceURI);

  /// @brief Method HandleColumn, addr 0x41c3c4c, size 0xb10, virtual false, abstract: false, final false
  inline ::System::Xml::XmlElement* HandleColumn(::System::Data::DataColumn* col, ::System::Xml::XmlDocument* dc, ::System::Xml::XmlElement* schema, bool fWriteOrdinal);

  /// @brief Method HandleColumnType, addr 0x41c30b4, size 0x47c, virtual false, abstract: false, final false
  inline void HandleColumnType(::System::Data::DataColumn* col, ::System::Xml::XmlDocument* dc, ::System::Xml::XmlElement* root, ::System::Xml::XmlElement* schema);

  /// @brief Method HandleRelation, addr 0x41bf468, size 0x5c4, virtual false, abstract: false, final false
  inline ::System::Xml::XmlElement* HandleRelation(::System::Data::DataRelation* rel, ::System::Xml::XmlDocument* dc);

  /// @brief Method HandleTable, addr 0x41bf3a8, size 0x8, virtual false, abstract: false, final false
  inline ::System::Xml::XmlElement* HandleTable(::System::Data::DataTable* table, ::System::Xml::XmlDocument* dc, ::System::Xml::XmlElement* schema);

  /// @brief Method HandleTable, addr 0x41bfe78, size 0x29e4, virtual false, abstract: false, final false
  inline ::System::Xml::XmlElement* HandleTable(::System::Data::DataTable* table, ::System::Xml::XmlDocument* dc, ::System::Xml::XmlElement* schema, bool genNested);

  /// @brief Method HasMixedColumns, addr 0x41c4a4c, size 0x398, virtual false, abstract: false, final false
  inline bool HasMixedColumns(::System::Data::DataTable* table);

  /// @brief Method HaveExtendedProperties, addr 0x41ba4c0, size 0x184, virtual false, abstract: false, final false
  inline bool HaveExtendedProperties(::System::Data::DataSet* ds);

  /// @brief Method IsAutoGenerated, addr 0x41c5008, size 0x44, virtual false, abstract: false, final false
  inline bool IsAutoGenerated(::System::Object* o);

  static inline ::System::Data::XmlTreeGen* New_ctor(::System::Data::SchemaFormat format);

  /// @brief Method Save, addr 0x41c2b04, size 0xc, virtual false, abstract: false, final false
  inline void Save(::System::Data::DataSet* ds, ::System::Data::DataTable* dt, ::System::Xml::XmlWriter* xw);

  /// @brief Method Save, addr 0x41c2bd0, size 0xc, virtual false, abstract: false, final false
  inline void Save(::System::Data::DataSet* ds, ::System::Data::DataTable* dt, ::System::Xml::XmlWriter* xw, bool writeHierarchy);

  /// @brief Method Save, addr 0x41c2bdc, size 0x150, virtual false, abstract: false, final false
  inline void Save(::System::Data::DataSet* ds, ::System::Data::DataTable* dt, ::System::Xml::XmlWriter* xw, bool writeHierarchy,
                   ::System::Converter_2<::System::Type*, ::StringW>* multipleTargetConverter);

  /// @brief Method Save, addr 0x41c2af0, size 0x14, virtual false, abstract: false, final false
  inline void Save(::System::Data::DataSet* ds, ::System::Xml::XmlWriter* xw);

  /// @brief Method Save, addr 0x41c2b10, size 0xc0, virtual false, abstract: false, final false
  inline void Save(::System::Data::DataTable* dt, ::System::Xml::XmlWriter* xw);

  /// @brief Method SchemaTree, addr 0x41bfa2c, size 0x44c, virtual false, abstract: false, final false
  inline ::System::Xml::XmlElement* SchemaTree(::System::Xml::XmlDocument* xd, ::System::Data::DataTable* dt);

  /// @brief Method SchemaTree, addr 0x41bc758, size 0x2630, virtual false, abstract: false, final false
  inline void SchemaTree(::System::Xml::XmlDocument* xd, ::System::Xml::XmlWriter* xmlWriter, ::System::Data::DataSet* ds, ::System::Data::DataTable* dt, bool writeHierarchy);

  /// @brief Method SetMSDataAttribute, addr 0x41b99bc, size 0x1e4, virtual false, abstract: false, final false
  inline void SetMSDataAttribute(::System::Xml::XmlElement* root, ::System::Type* type);

  /// @brief Method SetPath, addr 0x41c285c, size 0x200, virtual false, abstract: false, final false
  inline void SetPath(::System::Xml::XmlWriter* xw);

  /// @brief Method SetupAutoGenerated, addr 0x41ba930, size 0x2e0, virtual false, abstract: false, final false
  inline void SetupAutoGenerated(::System::Data::DataSet* ds);

  /// @brief Method SetupAutoGenerated, addr 0x41bb648, size 0xf4, virtual false, abstract: false, final false
  inline void SetupAutoGenerated(::System::Collections::ArrayList* dt);

  /// @brief Method SetupAutoGenerated, addr 0x41bac10, size 0xa38, virtual false, abstract: false, final false
  inline void SetupAutoGenerated(::System::Data::DataTable* dt);

  /// @brief Method TranslateAcceptRejectRule, addr 0x41c4924, size 0x70, virtual false, abstract: false, final false
  static inline ::StringW TranslateAcceptRejectRule(::System::Data::AcceptRejectRule rule);

  /// @brief Method TranslateRule, addr 0x41c4994, size 0xb8, virtual false, abstract: false, final false
  static inline ::StringW TranslateRule(::System::Data::Rule rule);

  /// @brief Method ValidateColumnMapping, addr 0x41ba8a8, size 0x88, virtual false, abstract: false, final false
  static inline void ValidateColumnMapping(::System::Type* columnType);

  /// @brief Method WriteSchemaRoot, addr 0x41ba644, size 0x264, virtual false, abstract: false, final false
  inline void WriteSchemaRoot(::System::Xml::XmlDocument* xd, ::System::Xml::XmlElement* rootSchema, ::StringW targetNamespace);

  /// @brief Method XmlDataTypeName, addr 0x41b8cd8, size 0xce4, virtual false, abstract: false, final false
  static inline ::StringW XmlDataTypeName(::System::Type* type);

  /// @brief Method _PropsNotEmpty, addr 0x41ba498, size 0x28, virtual false, abstract: false, final false
  static inline bool _PropsNotEmpty(::System::Data::PropertyCollection* props);

  constexpr ::System::Collections::Hashtable* const& __cordl_internal_get__autogenerated() const;

  constexpr ::System::Collections::Hashtable*& __cordl_internal_get__autogenerated();

  constexpr ::System::Collections::ArrayList* const& __cordl_internal_get__constraintNames() const;

  constexpr ::System::Collections::ArrayList*& __cordl_internal_get__constraintNames();

  constexpr ::System::Xml::XmlElement* const& __cordl_internal_get__constraintSeparator() const;

  constexpr ::System::Xml::XmlElement*& __cordl_internal_get__constraintSeparator();

  constexpr ::System::Xml::XmlDocument* const& __cordl_internal_get__dc() const;

  constexpr ::System::Xml::XmlDocument*& __cordl_internal_get__dc();

  constexpr ::System::Data::DataSet* const& __cordl_internal_get__ds() const;

  constexpr ::System::Data::DataSet*& __cordl_internal_get__ds();

  constexpr ::System::Xml::XmlElement* const& __cordl_internal_get__dsElement() const;

  constexpr ::System::Xml::XmlElement*& __cordl_internal_get__dsElement();

  constexpr ::StringW const& __cordl_internal_get__fileExt() const;

  constexpr ::StringW& __cordl_internal_get__fileExt();

  constexpr ::StringW const& __cordl_internal_get__fileName() const;

  constexpr ::StringW& __cordl_internal_get__fileName();

  constexpr ::StringW const& __cordl_internal_get__filePath() const;

  constexpr ::StringW& __cordl_internal_get__filePath();

  constexpr ::System::Collections::Hashtable* const& __cordl_internal_get__namespaces() const;

  constexpr ::System::Collections::Hashtable*& __cordl_internal_get__namespaces();

  constexpr int32_t const& __cordl_internal_get__prefixCount() const;

  constexpr int32_t& __cordl_internal_get__prefixCount();

  constexpr ::System::Collections::Hashtable* const& __cordl_internal_get__prefixes() const;

  constexpr ::System::Collections::Hashtable*& __cordl_internal_get__prefixes();

  constexpr ::System::Collections::ArrayList* const& __cordl_internal_get__relations() const;

  constexpr ::System::Collections::ArrayList*& __cordl_internal_get__relations();

  constexpr ::System::Xml::XmlElement* const& __cordl_internal_get__sRoot() const;

  constexpr ::System::Xml::XmlElement*& __cordl_internal_get__sRoot();

  constexpr ::System::Data::SchemaFormat const& __cordl_internal_get__schFormat() const;

  constexpr ::System::Data::SchemaFormat& __cordl_internal_get__schFormat();

  constexpr ::System::Collections::ArrayList* const& __cordl_internal_get__tables() const;

  constexpr ::System::Collections::ArrayList*& __cordl_internal_get__tables();

  constexpr ::System::Converter_2<::System::Type*, ::StringW>* const& __cordl_internal_get__targetConverter() const;

  constexpr ::System::Converter_2<::System::Type*, ::StringW>*& __cordl_internal_get__targetConverter();

  constexpr void __cordl_internal_set__autogenerated(::System::Collections::Hashtable* value);

  constexpr void __cordl_internal_set__constraintNames(::System::Collections::ArrayList* value);

  constexpr void __cordl_internal_set__constraintSeparator(::System::Xml::XmlElement* value);

  constexpr void __cordl_internal_set__dc(::System::Xml::XmlDocument* value);

  constexpr void __cordl_internal_set__ds(::System::Data::DataSet* value);

  constexpr void __cordl_internal_set__dsElement(::System::Xml::XmlElement* value);

  constexpr void __cordl_internal_set__fileExt(::StringW value);

  constexpr void __cordl_internal_set__fileName(::StringW value);

  constexpr void __cordl_internal_set__filePath(::StringW value);

  constexpr void __cordl_internal_set__namespaces(::System::Collections::Hashtable* value);

  constexpr void __cordl_internal_set__prefixCount(int32_t value);

  constexpr void __cordl_internal_set__prefixes(::System::Collections::Hashtable* value);

  constexpr void __cordl_internal_set__relations(::System::Collections::ArrayList* value);

  constexpr void __cordl_internal_set__sRoot(::System::Xml::XmlElement* value);

  constexpr void __cordl_internal_set__schFormat(::System::Data::SchemaFormat value);

  constexpr void __cordl_internal_set__tables(::System::Collections::ArrayList* value);

  constexpr void __cordl_internal_set__targetConverter(::System::Converter_2<::System::Type*, ::StringW>* value);

  /// @brief Method .ctor, addr 0x41b79ec, size 0x94, virtual false, abstract: false, final false
  inline void _ctor(::System::Data::SchemaFormat format);

protected:
  // Ctor Parameters []
  // @brief default ctor
  constexpr XmlTreeGen();

public:
  // Ctor Parameters [CppParam { name: "", ty: "XmlTreeGen", modifiers: "&&", def_value: None }]
  // @brief delete move ctor to prevent accidental deref moves
  XmlTreeGen(XmlTreeGen&&) = delete;

  // Ctor Parameters [CppParam { name: "", ty: "XmlTreeGen", modifiers: "const&", def_value: None }]
  // @brief delete copy ctor to prevent accidental deref copies
  XmlTreeGen(XmlTreeGen const&) = delete;

  /// @brief IL2CPP Metadata Type Index
  static constexpr uint32_t __IL2CPP_TYPE_DEFINITION_INDEX{ 11490 };

  /// @brief Field _constraintNames, offset: 0x10, size: 0x8, def value: None
  ::System::Collections::ArrayList* ____constraintNames;

  /// @brief Field _namespaces, offset: 0x18, size: 0x8, def value: None
  ::System::Collections::Hashtable* ____namespaces;

  /// @brief Field _autogenerated, offset: 0x20, size: 0x8, def value: None
  ::System::Collections::Hashtable* ____autogenerated;

  /// @brief Field _prefixes, offset: 0x28, size: 0x8, def value: None
  ::System::Collections::Hashtable* ____prefixes;

  /// @brief Field _ds, offset: 0x30, size: 0x8, def value: None
  ::System::Data::DataSet* ____ds;

  /// @brief Field _tables, offset: 0x38, size: 0x8, def value: None
  ::System::Collections::ArrayList* ____tables;

  /// @brief Field _relations, offset: 0x40, size: 0x8, def value: None
  ::System::Collections::ArrayList* ____relations;

  /// @brief Field _dc, offset: 0x48, size: 0x8, def value: None
  ::System::Xml::XmlDocument* ____dc;

  /// @brief Field _sRoot, offset: 0x50, size: 0x8, def value: None
  ::System::Xml::XmlElement* ____sRoot;

  /// @brief Field _prefixCount, offset: 0x58, size: 0x4, def value: None
  int32_t ____prefixCount;

  /// @brief Field _schFormat, offset: 0x5c, size: 0x4, def value: None
  ::System::Data::SchemaFormat ____schFormat;

  /// @brief Field _filePath, offset: 0x60, size: 0x8, def value: None
  ::StringW ____filePath;

  /// @brief Field _fileName, offset: 0x68, size: 0x8, def value: None
  ::StringW ____fileName;

  /// @brief Field _fileExt, offset: 0x70, size: 0x8, def value: None
  ::StringW ____fileExt;

  /// @brief Field _dsElement, offset: 0x78, size: 0x8, def value: None
  ::System::Xml::XmlElement* ____dsElement;

  /// @brief Field _constraintSeparator, offset: 0x80, size: 0x8, def value: None
  ::System::Xml::XmlElement* ____constraintSeparator;

  /// @brief Field _targetConverter, offset: 0x88, size: 0x8, def value: None
  ::System::Converter_2<::System::Type*, ::StringW>* ____targetConverter;

  static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
static_assert(offsetof(::System::Data::XmlTreeGen, ____constraintNames) == 0x10, "Offset mismatch!");

static_assert(offsetof(::System::Data::XmlTreeGen, ____namespaces) == 0x18, "Offset mismatch!");

static_assert(offsetof(::System::Data::XmlTreeGen, ____autogenerated) == 0x20, "Offset mismatch!");

static_assert(offsetof(::System::Data::XmlTreeGen, ____prefixes) == 0x28, "Offset mismatch!");

static_assert(offsetof(::System::Data::XmlTreeGen, ____ds) == 0x30, "Offset mismatch!");

static_assert(offsetof(::System::Data::XmlTreeGen, ____tables) == 0x38, "Offset mismatch!");

static_assert(offsetof(::System::Data::XmlTreeGen, ____relations) == 0x40, "Offset mismatch!");

static_assert(offsetof(::System::Data::XmlTreeGen, ____dc) == 0x48, "Offset mismatch!");

static_assert(offsetof(::System::Data::XmlTreeGen, ____sRoot) == 0x50, "Offset mismatch!");

static_assert(offsetof(::System::Data::XmlTreeGen, ____prefixCount) == 0x58, "Offset mismatch!");

static_assert(offsetof(::System::Data::XmlTreeGen, ____schFormat) == 0x5c, "Offset mismatch!");

static_assert(offsetof(::System::Data::XmlTreeGen, ____filePath) == 0x60, "Offset mismatch!");

static_assert(offsetof(::System::Data::XmlTreeGen, ____fileName) == 0x68, "Offset mismatch!");

static_assert(offsetof(::System::Data::XmlTreeGen, ____fileExt) == 0x70, "Offset mismatch!");

static_assert(offsetof(::System::Data::XmlTreeGen, ____dsElement) == 0x78, "Offset mismatch!");

static_assert(offsetof(::System::Data::XmlTreeGen, ____constraintSeparator) == 0x80, "Offset mismatch!");

static_assert(offsetof(::System::Data::XmlTreeGen, ____targetConverter) == 0x88, "Offset mismatch!");

static_assert(::cordl_internals::size_check_v<::System::Data::XmlTreeGen, 0x90>, "Size mismatch!");

} // namespace System::Data
NEED_NO_BOX(::System::Data::XmlTreeGen);
DEFINE_IL2CPP_ARG_TYPE(::System::Data::XmlTreeGen*, "System.Data", "XmlTreeGen");
